{
                "timestamp":"2019-07-02 10:20:41.898",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "c.t.m.RibbonServiceBApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-02 10:20:41.906",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cf8b2dc: startup date [Tue Jul 02 10:20:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5542c4ed"
                }{
                "timestamp":"2019-07-02 10:20:42.521",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-02 10:20:42.680",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=db243a53-9674-3344-bd38-21e8f104aea5"
                }{
                "timestamp":"2019-07-02 10:20:42.693",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 10:20:42.740",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$ecf5bdc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 10:20:42.791",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$b2196637] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 10:20:42.900",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 10:20:42.914",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e1e0c646] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 10:20:42.945",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cbce2302] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 10:20:42.961",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$9797cc24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 10:20:43.296",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-02 10:20:43.302",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-02 10:20:43.303",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-02 10:20:43.360",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-02 10:20:43.361",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1455 ms"
                }{
                "timestamp":"2019-07-02 10:20:43.873",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:20:43.874",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:20:43.874",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:20:43.874",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:20:43.874",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:20:43.874",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:20:43.874",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:20:43.874",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:20:43.875",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-02 10:20:45.094",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/name],methods=[GET]}" onto public java.lang.String com.tailen.microservice.controller.RibbonController.getName(java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:20:45.095",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:20:45.098",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-02 10:20:45.099",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-02 10:20:45.099",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-02 10:20:45.101",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-02 10:20:45.101",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-02 10:20:45.858",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.858",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.859",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.859",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-02 10:20:45.860",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.860",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-02 10:20:45.860",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:20:45.861",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:20:45.861",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.863",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:20:45.863",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.864",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 10:20:45.864",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-02 10:20:45.865",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:20:45.865",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.865",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.866",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.866",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.866",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.867",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:20:45.868",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 10:20:45.868",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.868",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-02 10:20:45.869",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-02 10:20:45.869",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.869",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.870",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:45.870",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:20:46.199",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cf8b2dc: startup date [Tue Jul 02 10:20:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5542c4ed"
                }{
                "timestamp":"2019-07-02 10:20:46.207",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 10:20:46.322",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 10:20:46.322",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 10:20:46.344",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 10:20:46.389",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 10:20:47.036",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 10:20:47.037",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 10:20:47.040",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 10:20:47.040",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 10:20:47.178",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-02 10:20:47.299",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-02 10:20:47.305",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 10:20:47.307",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 10:20:47.307",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 10:20:47.308",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 10:20:47.308",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 10:20:47.310",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 10:20:47.312",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-02 10:20:47.321",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-02 10:20:47.327",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-02 10:20:47.331",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-02 10:20:47.337",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4cf8b2dc,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-02 10:20:47.340",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-02 10:20:47.455",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-02 10:20:47.468",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-02 10:20:47.492",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-02 10:20:47.618",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 10:20:47.618",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 10:20:47.666",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 10:20:47.666",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 10:20:47.761",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 10:20:47.772",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-02 10:20:47.772",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-02 10:20:47.772",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-02 10:20:47.772",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-02 10:20:47.772",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-02 10:20:47.772",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-02 10:20:47.773",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-02 10:20:47.856",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-02 10:20:47.857",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-02 10:20:47.858",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-02 10:20:47.860",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562034047860 with initial instances count: 2"
                }{
                "timestamp":"2019-07-02 10:20:47.928",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application ribbonServiceB with eureka with status UP"
                }{
                "timestamp":"2019-07-02 10:20:47.928",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562034047928, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-02 10:20:47.931",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103: registering service..."
                }{
                "timestamp":"2019-07-02 10:20:47.960",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-02 10:20:47.979",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-02 10:20:47.987",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-02 10:20:47.993",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-02 10:20:47.994",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 10:20:47.995",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: getName belongs to groups: [[ResourceGroup{groupName='ribbon-controller', position=0, controller=com.tailen.microservice.controller.RibbonController}]] "
                }{
                "timestamp":"2019-07-02 10:20:47.998",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/ribbon-controller Description: ribbon-controller Position: 0"
                }{
                "timestamp":"2019-07-02 10:20:48.010",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 10:20:48.010",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 10:20:48.014",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 10:20:48.014",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 10:20:48.017",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/name.com.tailen.microservice.controller.RibbonController.getName.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 10:20:48.017",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/name.com.tailen.microservice.controller.RibbonController.getName.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 10:20:48.026",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 10:20:48.033",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 10:20:48.080",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-02 10:20:48.081",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1103"
                }{
                "timestamp":"2019-07-02 10:20:48.089",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "main",
                "class": "c.t.m.RibbonServiceBApplication",
                "message": "Started RibbonServiceBApplication in 26.882 seconds (JVM running for 32.418)"
                }{
                "timestamp":"2019-07-02 10:22:11.033",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "Thread-59",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cf8b2dc: startup date [Tue Jul 02 10:20:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5542c4ed"
                }{
                "timestamp":"2019-07-02 10:22:11.040",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "Thread-59",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application ribbonServiceB with eureka with status DOWN"
                }{
                "timestamp":"2019-07-02 10:22:11.041",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "Thread-59",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562034131041, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-02 10:22:11.041",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "Thread-59",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-02 10:22:11.041",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562034131041, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-07-02 10:22:11.044",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.netflix.appinfo.ApplicationInfoManager",
                "message": "failed to notify listener: statusChangeListener"
                }java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@67b9e9cb rejected from java.util.concurrent.ScheduledThreadPoolExecutor@27aa8e08[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 6]
	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2063)
	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:830)
	at java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute(ScheduledThreadPoolExecutor.java:326)
	at java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:533)
	at java.util.concurrent.ScheduledThreadPoolExecutor.submit(ScheduledThreadPoolExecutor.java:632)
	at com.netflix.discovery.InstanceInfoReplicator.onDemandUpdate(InstanceInfoReplicator.java:77)
	at com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1281)
	at com.netflix.appinfo.ApplicationInfoManager.setInstanceStatus(ApplicationInfoManager.java:177)
	at com.netflix.appinfo.ApplicationInfoManager$$FastClassBySpringCGLIB$$ca6abd37.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:133)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:121)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.netflix.appinfo.ApplicationInfoManager$$EnhancerBySpringCGLIB$$d4c7115f.setInstanceStatus(<generated>)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1369)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:100)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-02 10:22:11.045",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103: registering service..."
                }{
                "timestamp":"2019-07-02 10:22:11.045",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "Thread-59",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-02 10:22:11.050",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "Thread-59",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - deregister  status: 200"
                }{
                "timestamp":"2019-07-02 10:22:11.050",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-02 10:22:11.054",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "Thread-59",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-02 10:22:11.056",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "Thread-59",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-02 10:22:11.059",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "Thread-59",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-02 10:22:11.059",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1237",
                "thread": "Thread-59",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-02 10:23:45.389",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "c.t.m.RibbonServiceBApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-02 10:23:45.410",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@681a8b4e: startup date [Tue Jul 02 10:23:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7586beff"
                }{
                "timestamp":"2019-07-02 10:23:45.948",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-02 10:23:46.101",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=db243a53-9674-3344-bd38-21e8f104aea5"
                }{
                "timestamp":"2019-07-02 10:23:46.116",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 10:23:46.162",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$3d491ba5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 10:23:46.212",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$26cc414] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 10:23:46.319",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 10:23:46.333",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$32342423] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 10:23:46.363",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1c2180df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 10:23:46.380",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$e7eb2a01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 10:23:46.711",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-02 10:23:46.717",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-02 10:23:46.718",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-02 10:23:46.775",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-02 10:23:46.776",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1366 ms"
                }{
                "timestamp":"2019-07-02 10:23:47.288",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:23:47.289",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:23:47.289",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:23:47.289",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:23:47.289",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:23:47.289",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:23:47.289",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:23:47.290",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 10:23:47.290",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-02 10:23:48.489",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/name],methods=[GET]}" onto public java.lang.String com.tailen.microservice.controller.RibbonController.getName(java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:23:48.490",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:23:48.492",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-02 10:23:48.492",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-02 10:23:48.493",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-02 10:23:48.495",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-02 10:23:48.495",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-02 10:23:49.244",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-02 10:23:49.245",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.245",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 10:23:49.245",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-02 10:23:49.246",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.246",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.247",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.248",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.249",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.250",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.250",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.251",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:23:49.251",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.252",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.252",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:23:49.253",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.253",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-02 10:23:49.253",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.254",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.254",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.254",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.254",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-02 10:23:49.255",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:23:49.255",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-02 10:23:49.256",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:23:49.257",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-02 10:23:49.257",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 10:23:49.257",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 10:23:49.618",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@681a8b4e: startup date [Tue Jul 02 10:23:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7586beff"
                }{
                "timestamp":"2019-07-02 10:23:49.628",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 10:23:49.774",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 10:23:49.774",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 10:23:49.802",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 10:23:49.858",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 10:23:50.624",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 10:23:50.624",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 10:23:50.628",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 10:23:50.628",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 10:23:50.786",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-02 10:23:50.931",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-02 10:23:50.938",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 10:23:50.940",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 10:23:50.940",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 10:23:50.941",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 10:23:50.941",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 10:23:50.943",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 10:23:50.945",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-02 10:23:50.954",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-02 10:23:50.962",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-02 10:23:50.968",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-02 10:23:50.974",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=681a8b4e,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-02 10:23:50.977",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-02 10:23:51.105",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-02 10:23:51.110",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-02 10:23:51.138",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-02 10:23:51.288",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 10:23:51.289",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 10:23:51.354",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 10:23:51.355",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 10:23:51.464",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 10:23:51.474",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-02 10:23:51.474",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-02 10:23:51.475",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-02 10:23:51.475",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-02 10:23:51.475",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-02 10:23:51.475",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-02 10:23:51.475",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-02 10:23:51.654",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-02 10:23:51.656",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-02 10:23:51.657",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-02 10:23:51.659",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562034231659 with initial instances count: 0"
                }{
                "timestamp":"2019-07-02 10:23:51.736",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application ribbonServiceB with eureka with status UP"
                }{
                "timestamp":"2019-07-02 10:23:51.737",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562034231737, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-02 10:23:51.740",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103: registering service..."
                }{
                "timestamp":"2019-07-02 10:23:51.814",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-02 10:23:51.820",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-02 10:23:51.825",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-02 10:23:51.832",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-02 10:23:51.834",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 10:23:51.835",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: getName belongs to groups: [[ResourceGroup{groupName='ribbon-controller', position=0, controller=com.tailen.microservice.controller.RibbonController}]] "
                }{
                "timestamp":"2019-07-02 10:23:51.838",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/ribbon-controller Description: ribbon-controller Position: 0"
                }{
                "timestamp":"2019-07-02 10:23:51.851",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 10:23:51.851",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 10:23:51.855",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 10:23:51.856",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 10:23:51.860",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/name.com.tailen.microservice.controller.RibbonController.getName.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 10:23:51.860",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/name.com.tailen.microservice.controller.RibbonController.getName.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 10:23:51.871",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 10:23:51.880",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 10:23:51.934",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-02 10:23:51.935",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1103"
                }{
                "timestamp":"2019-07-02 10:23:51.941",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "main",
                "class": "c.t.m.RibbonServiceBApplication",
                "message": "Started RibbonServiceBApplication in 27.236 seconds (JVM running for 32.766)"
                }{
                "timestamp":"2019-07-02 10:24:21.659",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-02 10:24:21.659",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-02 10:24:21.659",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-02 10:24:21.659",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-02 10:24:21.659",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-02 10:24:21.659",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: false"
                }{
                "timestamp":"2019-07-02 10:24:21.660",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-02 10:24:21.716",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-02 10:28:51.478",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 10:33:51.502",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 10:38:51.510",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 10:43:51.521",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 10:49:04.143",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 10:54:04.147",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 10:59:04.160",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 11:04:04.171",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 11:09:04.182",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 11:14:04.179",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 11:19:04.182",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 11:24:04.191",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 11:29:04.202",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 11:34:04.204",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 11:39:04.214",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 11:44:04.230",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 11:49:04.242",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 11:54:04.259",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 11:59:04.271",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 12:04:04.276",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 12:09:04.289",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 12:53:53.678",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 12:58:53.693",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 13:03:53.706",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 13:08:53.716",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 13:13:53.724",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 13:48:34.946",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - Re-registering apps/RIBBONSERVICEB"
                }{
                "timestamp":"2019-07-02 13:48:34.952",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103: registering service..."
                }{
                "timestamp":"2019-07-02 13:48:34.960",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-02 13:50:03.190",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 13:55:03.197",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 14:00:03.204",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 14:05:03.208",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 14:10:03.213",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 14:15:03.229",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 14:20:03.235",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 14:25:33.329",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 14:30:33.335",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 14:35:33.345",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 14:40:33.350",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 14:45:33.360",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 14:50:33.364",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 14:55:33.371",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 15:00:33.379",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 15:05:33.386",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 15:10:33.393",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 15:15:33.398",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 15:20:33.405",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 15:25:33.441",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 15:30:33.447",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 15:35:33.453",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 15:40:33.461",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 15:46:10.177",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "http-nio-1103-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-07-02 15:46:10.180",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-07-02 15:46:10.418",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 238 ms"
                }{
                "timestamp":"2019-07-02 15:47:09.323",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 15:49:48.872",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "Thread-60",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@681a8b4e: startup date [Tue Jul 02 10:23:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7586beff"
                }{
                "timestamp":"2019-07-02 15:49:48.873",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "Thread-60",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application ribbonServiceB with eureka with status DOWN"
                }{
                "timestamp":"2019-07-02 15:49:48.874",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "Thread-60",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562053788874, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-02 15:49:48.875",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562053788875, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-07-02 15:49:48.875",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "Thread-60",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-02 15:49:48.876",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103: registering service..."
                }{
                "timestamp":"2019-07-02 15:49:48.877",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "Thread-60",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-02 15:49:48.883",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "Thread-60",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - deregister  status: 200"
                }{
                "timestamp":"2019-07-02 15:49:48.885",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-02 15:49:48.886",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "Thread-60",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-02 15:49:48.888",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "Thread-60",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-02 15:49:48.900",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "Thread-60",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-02 15:49:48.901",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "1258",
                "thread": "Thread-60",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-02 15:50:32.482",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "c.t.m.RibbonServiceBApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-02 15:50:32.490",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cf8b2dc: startup date [Tue Jul 02 15:50:32 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c12331b"
                }{
                "timestamp":"2019-07-02 15:50:33.041",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-02 15:50:33.212",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=db243a53-9674-3344-bd38-21e8f104aea5"
                }{
                "timestamp":"2019-07-02 15:50:33.224",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 15:50:33.274",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$8d4a5cf6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 15:50:33.325",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$526e0565] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 15:50:33.435",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 15:50:33.450",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$82356574] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 15:50:33.483",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c22c230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 15:50:33.501",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$37ec6b52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 15:50:33.840",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-02 15:50:33.846",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-02 15:50:33.847",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-02 15:50:33.909",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-02 15:50:33.910",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1420 ms"
                }{
                "timestamp":"2019-07-02 15:50:34.436",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:50:34.436",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:50:34.436",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:50:34.436",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:50:34.437",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:50:34.437",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:50:34.437",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:50:34.437",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:50:34.437",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-02 15:50:35.661",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/name],methods=[GET]}" onto public java.lang.String com.tailen.microservice.controller.RibbonController.getName(java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:50:35.662",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:50:35.664",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-02 15:50:35.665",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-02 15:50:35.665",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-02 15:50:35.667",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-02 15:50:35.667",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-02 15:50:36.450",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:50:36.451",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.451",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.452",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:50:36.452",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.453",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-02 15:50:36.454",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.454",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.455",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 15:50:36.455",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-02 15:50:36.455",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-02 15:50:36.456",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.457",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:50:36.458",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 15:50:36.458",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.459",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.459",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-02 15:50:36.459",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:50:36.460",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.461",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:50:36.461",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.461",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.461",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.462",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.462",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-02 15:50:36.462",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.463",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.463",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:50:36.806",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cf8b2dc: startup date [Tue Jul 02 15:50:32 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c12331b"
                }{
                "timestamp":"2019-07-02 15:50:36.815",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 15:50:36.944",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 15:50:36.944",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 15:50:36.982",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 15:50:37.054",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 15:50:37.887",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 15:50:37.888",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 15:50:37.891",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 15:50:37.891",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 15:50:38.049",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-02 15:50:38.213",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-02 15:50:38.221",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 15:50:38.223",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 15:50:38.223",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 15:50:38.223",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 15:50:38.224",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 15:50:38.226",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 15:50:38.228",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-02 15:50:38.238",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-02 15:50:38.247",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-02 15:50:38.254",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-02 15:50:38.262",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4cf8b2dc,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-02 15:50:38.266",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-02 15:50:38.422",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-02 15:50:38.430",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-02 15:50:38.458",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-02 15:50:38.607",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 15:50:38.607",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 15:50:38.666",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 15:50:38.667",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 15:50:38.784",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 15:50:38.794",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-02 15:50:38.794",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-02 15:50:38.794",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-02 15:50:38.794",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-02 15:50:38.794",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-02 15:50:38.794",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-02 15:50:38.794",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-02 15:50:38.912",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-02 15:50:38.914",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-02 15:50:38.916",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-02 15:50:38.917",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562053838917 with initial instances count: 1"
                }{
                "timestamp":"2019-07-02 15:50:38.995",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application ribbonServiceB with eureka with status UP"
                }{
                "timestamp":"2019-07-02 15:50:38.996",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562053838996, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-02 15:50:38.999",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103: registering service..."
                }{
                "timestamp":"2019-07-02 15:50:39.029",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-02 15:50:39.059",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-02 15:50:39.080",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-02 15:50:39.088",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-02 15:50:39.093",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 15:50:39.094",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: getName belongs to groups: [[ResourceGroup{groupName='ribbon-controller', position=0, controller=com.tailen.microservice.controller.RibbonController}]] "
                }{
                "timestamp":"2019-07-02 15:50:39.097",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/ribbon-controller Description: ribbon-controller Position: 0"
                }{
                "timestamp":"2019-07-02 15:50:39.110",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 15:50:39.111",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 15:50:39.118",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 15:50:39.119",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 15:50:39.123",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/name.com.tailen.microservice.controller.RibbonController.getName.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 15:50:39.123",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/name.com.tailen.microservice.controller.RibbonController.getName.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 15:50:39.136",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 15:50:39.148",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 15:50:39.204",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-02 15:50:39.205",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1103"
                }{
                "timestamp":"2019-07-02 15:50:39.211",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "main",
                "class": "c.t.m.RibbonServiceBApplication",
                "message": "Started RibbonServiceBApplication in 27.975 seconds (JVM running for 33.681)"
                }{
                "timestamp":"2019-07-02 15:55:10.555",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "Thread-62",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4cf8b2dc: startup date [Tue Jul 02 15:50:32 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c12331b"
                }{
                "timestamp":"2019-07-02 15:55:10.556",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "Thread-62",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application ribbonServiceB with eureka with status DOWN"
                }{
                "timestamp":"2019-07-02 15:55:10.557",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562054110557, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-02 15:55:10.558",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-02 15:55:10.558",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562054110558, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-07-02 15:55:10.558",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103: registering service..."
                }{
                "timestamp":"2019-07-02 15:55:10.558",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-02 15:55:10.564",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-02 15:55:10.564",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - deregister  status: 200"
                }{
                "timestamp":"2019-07-02 15:55:10.570",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-02 15:55:10.572",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "Thread-62",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-02 15:55:10.575",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "Thread-62",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-02 15:55:10.575",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10153",
                "thread": "Thread-62",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-02 15:56:41.776",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "c.t.m.RibbonServiceBApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-02 15:56:41.788",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3cc41abc: startup date [Tue Jul 02 15:56:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c12331b"
                }{
                "timestamp":"2019-07-02 15:56:42.537",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-02 15:56:42.764",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=db243a53-9674-3344-bd38-21e8f104aea5"
                }{
                "timestamp":"2019-07-02 15:56:42.777",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 15:56:42.831",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$8d4a5cf6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 15:56:42.886",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$526e0565] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 15:56:43.017",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 15:56:43.035",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$82356574] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 15:56:43.068",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6c22c230] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 15:56:43.086",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$37ec6b52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 15:56:43.445",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-02 15:56:43.452",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-02 15:56:43.452",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-02 15:56:43.551",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-02 15:56:43.552",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1764 ms"
                }{
                "timestamp":"2019-07-02 15:56:44.103",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:56:44.104",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:56:44.104",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:56:44.104",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:56:44.104",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:56:44.104",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:56:44.104",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:56:44.104",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 15:56:44.104",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-02 15:56:45.360",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/name],methods=[GET]}" onto public java.lang.String com.tailen.microservice.controller.RibbonController.getName(java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:56:45.361",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:56:45.364",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-02 15:56:45.364",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-02 15:56:45.365",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-02 15:56:45.367",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-02 15:56:45.367",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-02 15:56:46.328",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-02 15:56:46.328",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:56:46.329",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.330",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-02 15:56:46.330",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.331",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.332",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.333",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:56:46.333",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.334",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:56:46.335",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.336",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.336",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.337",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 15:56:46.338",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-02 15:56:46.338",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-02 15:56:46.339",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.339",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:56:46.339",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.340",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-02 15:56:46.340",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.341",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.342",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-02 15:56:46.343",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 15:56:46.343",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.344",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.344",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.345",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 15:56:46.745",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3cc41abc: startup date [Tue Jul 02 15:56:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c12331b"
                }{
                "timestamp":"2019-07-02 15:56:46.753",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 15:56:46.884",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 15:56:46.884",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 15:56:46.909",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 15:56:46.963",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 15:56:47.725",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 15:56:47.726",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 15:56:47.730",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 15:56:47.730",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 15:56:47.883",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-02 15:56:48.019",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-02 15:56:48.030",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 15:56:48.031",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 15:56:48.032",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 15:56:48.032",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 15:56:48.033",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 15:56:48.034",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 15:56:48.036",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-02 15:56:48.045",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-02 15:56:48.053",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-02 15:56:48.058",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-02 15:56:48.064",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3cc41abc,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-02 15:56:48.068",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-02 15:56:48.197",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-02 15:56:48.202",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-02 15:56:48.230",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-02 15:56:48.382",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 15:56:48.382",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 15:56:48.436",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 15:56:48.436",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 15:56:48.545",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 15:56:48.557",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-02 15:56:48.558",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-02 15:56:48.558",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-02 15:56:48.558",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-02 15:56:48.558",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-02 15:56:48.558",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-02 15:56:48.558",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-02 15:56:48.655",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-02 15:56:48.656",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-02 15:56:48.658",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-02 15:56:48.660",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562054208660 with initial instances count: 1"
                }{
                "timestamp":"2019-07-02 15:56:48.740",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application ribbonServiceB with eureka with status UP"
                }{
                "timestamp":"2019-07-02 15:56:48.740",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562054208740, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-02 15:56:48.744",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB: registering service..."
                }{
                "timestamp":"2019-07-02 15:56:48.772",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB - registration status: 204"
                }{
                "timestamp":"2019-07-02 15:56:48.798",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-02 15:56:48.808",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-02 15:56:48.814",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-02 15:56:48.816",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 15:56:48.817",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: getName belongs to groups: [[ResourceGroup{groupName='ribbon-controller', position=0, controller=com.tailen.microservice.controller.RibbonController}]] "
                }{
                "timestamp":"2019-07-02 15:56:48.821",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/ribbon-controller Description: ribbon-controller Position: 0"
                }{
                "timestamp":"2019-07-02 15:56:48.838",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 15:56:48.839",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 15:56:48.843",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 15:56:48.843",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 15:56:48.846",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/name.com.tailen.microservice.controller.RibbonController.getName.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 15:56:48.846",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/name.com.tailen.microservice.controller.RibbonController.getName.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 15:56:48.858",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 15:56:48.867",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 15:56:48.920",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-02 15:56:48.921",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1103"
                }{
                "timestamp":"2019-07-02 15:56:48.928",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "main",
                "class": "c.t.m.RibbonServiceBApplication",
                "message": "Started RibbonServiceBApplication in 27.918 seconds (JVM running for 33.598)"
                }{
                "timestamp":"2019-07-02 15:58:18.676",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 common frames omitted
{
                "timestamp":"2019-07-02 15:58:18.676",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
{
                "timestamp":"2019-07-02 15:58:18.677",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 15:58:18.677",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 15:58:18.678",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-07-02 15:58:18.678",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
{
                "timestamp":"2019-07-02 15:58:18.678",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 15:58:18.678",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 15:58:18.679",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB - was unable to refresh its cache! status = Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-02 15:58:18.679",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB - was unable to send heartbeat!"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-02 15:58:48.686",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-07-02 15:58:48.686",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
{
                "timestamp":"2019-07-02 15:58:48.687",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 15:58:48.687",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 15:58:48.688",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB - was unable to refresh its cache! status = Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-02 15:58:48.688",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB - was unable to send heartbeat!"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-02 15:59:18.803",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB - Re-registering apps/RIBBONSERVICEB"
                }{
                "timestamp":"2019-07-02 15:59:18.804",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB: registering service..."
                }{
                "timestamp":"2019-07-02 15:59:18.840",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB - registration status: 204"
                }{
                "timestamp":"2019-07-02 15:59:48.815",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-02 15:59:48.815",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-02 15:59:48.815",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-02 15:59:48.815",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-02 15:59:48.815",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-02 15:59:48.815",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: false"
                }{
                "timestamp":"2019-07-02 15:59:48.815",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-02 15:59:48.822",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-02 16:00:18.834",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
{
                "timestamp":"2019-07-02 16:00:18.834",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 16:00:18.835",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-07-02 16:00:18.835",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 16:00:18.836",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB - was unable to refresh its cache! status = Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1047)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:929)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1451)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1418)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-02 16:00:18.856",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 common frames omitted
{
                "timestamp":"2019-07-02 16:00:18.856",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 16:00:18.857",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
{
                "timestamp":"2019-07-02 16:00:18.857",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 16:00:18.858",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB - was unable to send heartbeat!"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:815)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1379)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-02 16:00:48.953",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB - Re-registering apps/RIBBONSERVICEB"
                }{
                "timestamp":"2019-07-02 16:00:48.953",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB: registering service..."
                }{
                "timestamp":"2019-07-02 16:00:48.989",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-HeartbeatExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB - registration status: 204"
                }{
                "timestamp":"2019-07-02 16:01:18.964",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-02 16:01:18.965",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-02 16:01:18.965",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-02 16:01:18.965",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-02 16:01:18.965",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-02 16:01:18.965",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: false"
                }{
                "timestamp":"2019-07-02 16:01:18.965",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-02 16:01:18.971",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-02 16:01:48.563",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 16:04:10.062",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3cc41abc: startup date [Tue Jul 02 15:56:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c12331b"
                }{
                "timestamp":"2019-07-02 16:04:10.063",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application ribbonServiceB with eureka with status DOWN"
                }{
                "timestamp":"2019-07-02 16:04:10.063",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562054650063, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-02 16:04:10.063",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-02 16:04:10.063",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562054650063, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-07-02 16:04:10.063",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB: registering service..."
                }{
                "timestamp":"2019-07-02 16:04:10.064",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-02 16:04:10.065",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
{
                "timestamp":"2019-07-02 16:04:10.066",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 16:04:10.067",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-07-02 16:04:10.068",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$dd1dcab6.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 45 common frames omitted
{
                "timestamp":"2019-07-02 16:04:10.068",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 16:04:10.069",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 16:04:10.069",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB - registration failed Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-02 16:04:10.069",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-02 16:04:10.070",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$dd1dcab6.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
{
                "timestamp":"2019-07-02 16:04:10.070",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 16:04:10.071",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/ribbonServiceB - de-registration failedCannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$dd1dcab6.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-02 16:04:10.075",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-02 16:04:10.079",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-02 16:04:10.084",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-02 16:04:10.084",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "10195",
                "thread": "Thread-62",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-02 17:27:32.015",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "c.t.m.RibbonServiceBApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-02 17:27:32.026",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@60957c0f: startup date [Tue Jul 02 17:27:32 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5542c4ed"
                }{
                "timestamp":"2019-07-02 17:27:32.733",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-02 17:27:32.905",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=2354d362-ccb0-380b-9196-d4bf30986dae"
                }{
                "timestamp":"2019-07-02 17:27:32.919",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 17:27:32.978",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$ecf5bdc8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:27:33.029",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$b2196637] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:27:33.136",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:27:33.151",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e1e0c646] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:27:33.182",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cbce2302] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:27:33.199",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$9797cc24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:27:33.592",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-02 17:27:33.615",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-02 17:27:33.623",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-02 17:27:33.721",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-02 17:27:33.722",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1696 ms"
                }{
                "timestamp":"2019-07-02 17:27:34.818",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:27:34.831",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:27:34.877",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:27:34.889",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:27:34.889",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:27:34.889",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:27:34.889",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:27:34.889",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:27:34.893",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-02 17:27:37.645",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/name],methods=[GET]}" onto public java.lang.String com.tailen.microservice.controller.RibbonController.getName(java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:27:37.647",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:27:37.650",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-02 17:27:37.651",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-02 17:27:37.652",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-02 17:27:37.654",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-02 17:27:37.655",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-02 17:27:37.953",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.b.b.PropertiesConfigurationFactory",
                "message": "Properties configuration failed validation"
                }{
                "timestamp":"2019-07-02 17:27:37.954",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.b.b.PropertiesConfigurationFactory",
                "message": "Field error in object 'eureka.client' on field 'serviceUrl': rejected value [defaultZone=http://localhost:1001/eureka/]; codes [typeMismatch.eureka.client.serviceUrl,typeMismatch.serviceUrl,typeMismatch.java.util.Map,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [eureka.client.serviceUrl,serviceUrl]; arguments []; default message [serviceUrl]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.util.Map' for property 'serviceUrl'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'java.util.Map' for property 'serviceUrl': no matching editors or conversion strategy found]"
                }{
                "timestamp":"2019-07-02 17:27:37.957",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'endpointHandlerMapping' defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping]: Factory method 'endpointHandlerMapping' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcEndpoints' defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcManagementContextConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'environmentMvcEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcManagementContextConfiguration.class]: Unsatisfied dependency expressed through method 'environmentMvcEndpoint' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.boot.actuate.autoconfigure.EndpointAutoConfiguration': Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.autoconfigure.EndpointAutoConfiguration$$EnhancerBySpringCGLIB$$bdbd5a31]: Constructor threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'discoveryCompositeHealthIndicator' defined in class path resource [org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class]: Unsatisfied dependency expressed through method 'discoveryCompositeHealthIndicator' parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaHealthIndicator' defined in class path resource [org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaHealthIndicator' parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaClientConfigBean': Could not bind properties to EurekaClientConfigBean (prefix=eureka.client, ignoreInvalidFields=false, ignoreUnknownFields=true, ignoreNestedProperties=false); nested exception is org.springframework.validation.BindException: org.springframework.boot.bind.RelaxedDataBinder$RelaxedBeanPropertyBindingResult: 1 errors
Field error in object 'eureka.client' on field 'serviceUrl': rejected value [defaultZone=http://localhost:1001/eureka/]; codes [typeMismatch.eureka.client.serviceUrl,typeMismatch.serviceUrl,typeMismatch.java.util.Map,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [eureka.client.serviceUrl,serviceUrl]; arguments []; default message [serviceUrl]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.util.Map' for property 'serviceUrl'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'java.util.Map' for property 'serviceUrl': no matching editors or conversion strategy found]"
                }{
                "timestamp":"2019-07-02 17:27:37.958",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Stopping service [Tomcat]"
                }{
                "timestamp":"2019-07-02 17:27:37.977",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.b.a.l.AutoConfigurationReportLoggingInitializer",
                "message": "

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled."
                }{
                "timestamp":"2019-07-02 17:27:37.981",
                "level": "ERROR",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12017",
                "thread": "main",
                "class": "o.s.b.d.LoggingFailureAnalysisReporter",
                "message": "

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target EurekaClientConfigBean(propertyResolver=StandardServletEnvironment {activeProfiles=[], defaultProfiles=[default], propertySources=[servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment,random,applicationConfig: [classpath:/application.yaml],springCloudClientHostInfo,defaultProperties]}, enabled=true, transport=CloudEurekaTransportConfig(sessionedClientReconnectIntervalSeconds=1200, retryableClientQuarantineRefreshPercentage=0.66, bootstrapResolverRefreshIntervalSeconds=300, applicationsResolverDataStalenessThresholdSeconds=300, asyncResolverRefreshIntervalMs=300000, asyncResolverWarmUpTimeoutMs=5000, asyncExecutorThreadPoolSize=5, readClusterVip=null, writeClusterVip=null, bootstrapResolverForQuery=true, bootstrapResolverStrategy=null, applicationsResolverUseIp=false), registryFetchIntervalSeconds=30, instanceInfoReplicationIntervalSeconds=30, initialInstanceInfoReplicationIntervalSeconds=40, eurekaServiceUrlPollIntervalSeconds=300, proxyPort=null, proxyHost=null, proxyUserName=null, proxyPassword=null, eurekaServerReadTimeoutSeconds=8, eurekaServerConnectTimeoutSeconds=5, backupRegistryImpl=null, eurekaServerTotalConnections=200, eurekaServerTotalConnectionsPerHost=50, eurekaServerURLContext=null, eurekaServerPort=null, eurekaServerDNSName=null, region=us-east-1, eurekaConnectionIdleTimeoutSeconds=30, registryRefreshSingleVipAddress=null, heartbeatExecutorThreadPoolSize=2, heartbeatExecutorExponentialBackOffBound=10, cacheRefreshExecutorThreadPoolSize=2, cacheRefreshExecutorExponentialBackOffBound=10, serviceUrl={defaultZone=http://localhost:8761/eureka/}, gZipContent=true, useDnsForFetchingServiceUrls=false, registerWithEureka=true, preferSameZoneEureka=true, logDeltaDiff=false, disableDelta=false, fetchRemoteRegionsRegistry=null, availabilityZones={}, filterOnlyUpInstances=true, fetchRegistry=true, dollarReplacement=_-, escapeCharReplacement=__, allowRedirects=false, onDemandUpdateStatusChange=true, encoderName=null, decoderName=null, clientDataAccept=full) failed:

    Property: eureka.client.serviceUrl
    Value: defaultZone=http://localhost:1001/eureka/
    Reason: Failed to convert property value of type 'java.lang.String' to required type 'java.util.Map' for property 'serviceUrl'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'java.util.Map' for property 'serviceUrl': no matching editors or conversion strategy found


Action:

Update your application's configuration
"
                }{
                "timestamp":"2019-07-02 17:32:22.950",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "c.t.m.RibbonServiceBApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-02 17:32:22.959",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@784c3487: startup date [Tue Jul 02 17:32:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1573f9fc"
                }{
                "timestamp":"2019-07-02 17:32:23.656",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-02 17:32:23.835",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=2354d362-ccb0-380b-9196-d4bf30986dae"
                }{
                "timestamp":"2019-07-02 17:32:23.848",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 17:32:23.903",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$71e7dc86] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:32:23.955",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$370b84f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:32:24.067",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:32:24.080",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$66d2e504] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:32:24.109",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$50c041c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:32:24.135",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$1c89eae2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:32:24.534",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-02 17:32:24.540",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-02 17:32:24.541",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-02 17:32:24.602",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-02 17:32:24.602",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1643 ms"
                }{
                "timestamp":"2019-07-02 17:32:25.163",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:32:25.164",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:32:25.164",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:32:25.164",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:32:25.164",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:32:25.164",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:32:25.164",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:32:25.164",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:32:25.164",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-02 17:32:26.534",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/name],methods=[GET]}" onto public java.lang.String com.tailen.microservice.controller.RibbonController.getName(java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:32:26.535",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:32:26.537",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-02 17:32:26.538",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-02 17:32:26.538",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-02 17:32:26.540",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-02 17:32:26.540",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-02 17:32:27.246",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.247",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.247",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.248",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-02 17:32:27.248",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:32:27.249",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.250",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-02 17:32:27.250",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.250",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.251",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-02 17:32:27.251",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.252",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:32:27.253",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 17:32:27.253",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.253",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:32:27.254",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-02 17:32:27.254",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 17:32:27.254",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-02 17:32:27.255",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.256",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.256",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.257",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:32:27.257",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.257",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.257",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.258",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:32:27.258",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.258",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:32:27.715",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@784c3487: startup date [Tue Jul 02 17:32:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1573f9fc"
                }{
                "timestamp":"2019-07-02 17:32:27.724",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 17:32:27.838",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 17:32:27.838",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 17:32:27.861",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 17:32:27.901",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 17:32:28.493",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 17:32:28.493",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 17:32:28.496",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 17:32:28.496",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 17:32:28.682",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-02 17:32:28.849",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-02 17:32:28.855",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 17:32:28.856",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 17:32:28.857",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 17:32:28.857",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 17:32:28.858",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 17:32:28.858",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 17:32:28.860",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-02 17:32:28.869",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-02 17:32:28.875",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-02 17:32:28.880",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-02 17:32:28.885",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=784c3487,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-02 17:32:28.888",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-02 17:32:28.997",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-02 17:32:29.002",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-02 17:32:29.027",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-02 17:32:29.190",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 17:32:29.190",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 17:32:29.238",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 17:32:29.238",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 17:32:29.335",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 17:32:29.344",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-02 17:32:29.344",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-02 17:32:29.344",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-02 17:32:29.344",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-02 17:32:29.344",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-02 17:32:29.344",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-02 17:32:29.345",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-02 17:32:29.442",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-02 17:32:29.443",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-02 17:32:29.445",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-02 17:32:29.447",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562059949447 with initial instances count: 1"
                }{
                "timestamp":"2019-07-02 17:32:29.532",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application ribbonServiceB with eureka with status UP"
                }{
                "timestamp":"2019-07-02 17:32:29.533",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562059949533, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-02 17:32:29.534",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103: registering service..."
                }{
                "timestamp":"2019-07-02 17:32:29.564",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-02 17:32:29.589",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-02 17:32:29.598",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-02 17:32:29.603",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-02 17:32:29.605",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 17:32:29.606",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: getName belongs to groups: [[ResourceGroup{groupName='ribbon-controller', position=0, controller=com.tailen.microservice.controller.RibbonController}]] "
                }{
                "timestamp":"2019-07-02 17:32:29.609",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/ribbon-controller Description: ribbon-controller Position: 0"
                }{
                "timestamp":"2019-07-02 17:32:29.620",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 17:32:29.620",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 17:32:29.624",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 17:32:29.624",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.String(true)"
                }{
                "timestamp":"2019-07-02 17:32:29.627",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/name.com.tailen.microservice.controller.RibbonController.getName.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 17:32:29.627",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/name.com.tailen.microservice.controller.RibbonController.getName.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 17:32:29.636",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 17:32:29.643",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method getName was ribbon-controller"
                }{
                "timestamp":"2019-07-02 17:32:29.711",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-02 17:32:29.712",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1103"
                }{
                "timestamp":"2019-07-02 17:32:29.719",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "main",
                "class": "c.t.m.RibbonServiceBApplication",
                "message": "Started RibbonServiceBApplication in 7.456 seconds (JVM running for 15.561)"
                }{
                "timestamp":"2019-07-02 17:37:27.358",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "http-nio-1103-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-07-02 17:37:27.358",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-07-02 17:37:27.403",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms"
                }{
                "timestamp":"2019-07-02 17:37:29.352",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 17:42:29.360",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 17:42:49.186",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "Thread-6",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@784c3487: startup date [Tue Jul 02 17:32:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1573f9fc"
                }{
                "timestamp":"2019-07-02 17:42:49.187",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "Thread-6",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application ribbonServiceB with eureka with status DOWN"
                }{
                "timestamp":"2019-07-02 17:42:49.188",
                "level": "WARN",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "Thread-6",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562060569188, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-02 17:42:49.189",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103: registering service..."
                }{
                "timestamp":"2019-07-02 17:42:49.189",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "Thread-6",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-02 17:42:49.191",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "Thread-6",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-02 17:42:49.195",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-02 17:42:49.198",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "Thread-6",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_RIBBONSERVICEB/10.0.1.31:ribbonServiceB:1103 - deregister  status: 200"
                }{
                "timestamp":"2019-07-02 17:42:49.201",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "Thread-6",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-02 17:42:49.204",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "Thread-6",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-02 17:42:49.207",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "Thread-6",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-02 17:42:49.208",
                "level": "INFO",
                "service": "ribbonServiceB",
                "trace": "",
                "span": "",
                "pid": "12041",
                "thread": "Thread-6",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }