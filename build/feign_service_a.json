{
                "timestamp":"2019-06-28 15:14:16.869",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 15:14:16.882",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18bc345: startup date [Fri Jun 28 15:14:16 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c730b35"
                }{
                "timestamp":"2019-06-28 15:14:17.727",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=b0a859b9-9941-3106-bd8e-d0fe623cadfd"
                }{
                "timestamp":"2019-06-28 15:14:17.744",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 15:14:17.817",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$5bb8b93e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:17.885",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$20dc61ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:18.024",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:18.027",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$50a3c1bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:18.045",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3a911e78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:18.066",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5e08f441] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:18.083",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$65ac79a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:18.555",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1000 (http)"
                }{
                "timestamp":"2019-06-28 15:14:18.562",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 15:14:18.564",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 15:14:18.702",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 15:14:18.702",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1820 ms"
                }{
                "timestamp":"2019-06-28 15:14:19.390",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:19.390",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:19.390",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:19.391",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:19.391",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:19.391",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:19.391",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:19.391",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:19.391",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 15:14:20.876",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18bc345: startup date [Fri Jun 28 15:14:16 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c730b35"
                }{
                "timestamp":"2019-06-28 15:14:21.019",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 15:14:21.021",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 15:14:21.021",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 15:14:21.143",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 15:14:21.143",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 15:14:21.210",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 15:14:22.065",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 15:14:22.065",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.066",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 15:14:22.066",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 15:14:22.066",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.067",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.067",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.068",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.068",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 15:14:22.068",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.069",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 15:14:22.069",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 15:14:22.070",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.071",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.072",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 15:14:22.073",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 15:14:22.073",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.073",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.074",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.074",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.075",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.075",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 15:14:22.075",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.076",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.076",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 15:14:22.077",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 15:14:22.077",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:22.314",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 15:14:22.314",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 15:14:22.452",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 15:14:22.452",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 15:14:22.672",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 15:14:22.799",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 15:14:22.805",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 15:14:22.807",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 15:14:22.807",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 15:14:22.808",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 15:14:22.808",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 15:14:22.809",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 15:14:22.811",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 15:14:22.819",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 15:14:22.825",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 15:14:22.829",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 15:14:22.835",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=18bc345,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 15:14:22.837",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 15:14:23.095",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 15:14:23.113",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 15:14:23.206",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 15:14:23.437",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 15:14:23.437",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 15:14:23.507",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 15:14:23.507",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 15:14:23.630",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 15:14:23.639",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 15:14:23.639",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 15:14:23.639",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 15:14:23.639",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 15:14:23.639",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 15:14:23.639",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 15:14:23.639",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 15:14:23.929",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 15:14:23.930",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 15:14:23.931",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-06-28 15:14:23.935",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561706063934 with initial instances count: 0"
                }{
                "timestamp":"2019-06-28 15:14:24.006",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign_service_a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 15:14:24.006",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561706064006, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 15:14:24.007",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN_SERVICE_A/bogon:feign_service_a:1000: registering service..."
                }{
                "timestamp":"2019-06-28 15:14:24.086",
                "level": "ERROR",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.apache.coyote.http11.Http11NioProtocol",
                "message": "Failed to start end point associated with ProtocolHandler ["http-nio-1000"]"
                }java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:978)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:628)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1022)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:250)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:193)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.FeignServiceAApplication.main(FeignServiceAApplication.java:21)
{
                "timestamp":"2019-06-28 15:14:24.087",
                "level": "ERROR",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Failed to start connector [Connector[HTTP/1.1-1000]]"
                }org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-1000]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:250)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:193)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.FeignServiceAApplication.main(FeignServiceAApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: service.getName(): "Tomcat";  Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1029)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 12 common frames omitted
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:978)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:628)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1022)
	... 13 common frames omitted
{
                "timestamp":"2019-06-28 15:14:24.093",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Stopping service [Tomcat]"
                }{
                "timestamp":"2019-06-28 15:14:24.094",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN_SERVICE_A/bogon:feign_service_a:1000 - registration status: 204"
                }{
                "timestamp":"2019-06-28 15:14:24.102",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.a.l.AutoConfigurationReportLoggingInitializer",
                "message": "

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled."
                }{
                "timestamp":"2019-06-28 15:14:24.105",
                "level": "ERROR",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.d.LoggingFailureAnalysisReporter",
                "message": "

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 1000 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 1000, or configure this application to listen on another port.
"
                }{
                "timestamp":"2019-06-28 15:14:24.107",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18bc345: startup date [Fri Jun 28 15:14:16 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@c730b35"
                }{
                "timestamp":"2019-06-28 15:14:24.107",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign_service_a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 15:14:24.107",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561706064107, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 15:14:24.107",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN_SERVICE_A/bogon:feign_service_a:1000: registering service..."
                }{
                "timestamp":"2019-06-28 15:14:24.108",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 15:14:24.108",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 15:14:24.114",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN_SERVICE_A/bogon:feign_service_a:1000 - registration status: 204"
                }{
                "timestamp":"2019-06-28 15:14:24.117",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN_SERVICE_A/bogon:feign_service_a:1000 - deregister  status: 200"
                }{
                "timestamp":"2019-06-28 15:14:24.120",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 15:14:24.122",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 15:14:24.125",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 15:14:24.125",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7312",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 15:14:44.687",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 15:14:44.703",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42f8285e: startup date [Fri Jun 28 15:14:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@206a70ef"
                }{
                "timestamp":"2019-06-28 15:14:45.399",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=b0a859b9-9941-3106-bd8e-d0fe623cadfd"
                }{
                "timestamp":"2019-06-28 15:14:45.416",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 15:14:45.482",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$c7a2dcaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:45.536",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$8cc68519] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:45.648",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:45.651",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$bc8de528] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:45.674",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a67b41e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:45.693",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$c9f317ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:45.708",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$7244eb06] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 15:14:46.124",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 15:14:46.130",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 15:14:46.131",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 15:14:46.201",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 15:14:46.201",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1498 ms"
                }{
                "timestamp":"2019-06-28 15:14:46.758",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:46.758",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:46.758",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:46.758",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:46.758",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:46.759",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:46.759",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:46.759",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 15:14:46.759",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 15:14:47.731",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42f8285e: startup date [Fri Jun 28 15:14:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@206a70ef"
                }{
                "timestamp":"2019-06-28 15:14:47.874",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 15:14:47.876",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 15:14:47.876",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 15:14:47.978",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 15:14:47.978",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 15:14:48.045",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 15:14:48.863",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 15:14:48.864",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 15:14:48.864",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 15:14:48.864",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.865",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 15:14:48.865",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.866",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 15:14:48.866",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.867",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.868",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 15:14:48.868",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.869",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.869",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.870",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.870",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.870",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.870",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.871",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.872",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 15:14:48.872",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 15:14:48.873",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.873",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.873",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 15:14:48.874",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:48.874",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 15:14:48.874",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 15:14:48.875",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 15:14:49.093",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 15:14:49.094",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 15:14:49.099",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 15:14:49.099",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 15:14:49.416",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 15:14:49.534",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 15:14:49.540",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 15:14:49.542",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 15:14:49.542",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 15:14:49.543",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 15:14:49.545",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 15:14:49.546",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 15:14:49.548",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 15:14:49.556",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 15:14:49.564",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 15:14:49.568",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 15:14:49.574",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=42f8285e,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 15:14:49.577",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 15:14:49.715",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 15:14:49.722",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 15:14:49.749",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 15:14:49.878",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 15:14:49.878",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 15:14:49.935",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 15:14:49.935",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 15:14:50.037",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 15:14:50.048",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 15:14:50.049",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 15:14:50.049",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 15:14:50.049",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 15:14:50.049",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 15:14:50.049",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 15:14:50.049",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 15:14:50.110",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 15:14:50.110",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 15:14:50.112",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-06-28 15:14:50.113",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561706090113 with initial instances count: 0"
                }{
                "timestamp":"2019-06-28 15:14:50.197",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign_service_a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 15:14:50.198",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561706090198, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 15:14:50.201",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN_SERVICE_A/bogon:feign_service_a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 15:14:50.264",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN_SERVICE_A/bogon:feign_service_a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 15:14:50.305",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 15:14:50.305",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1001"
                }{
                "timestamp":"2019-06-28 15:14:50.310",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 7.087 seconds (JVM running for 7.776)"
                }{
                "timestamp":"2019-06-28 15:15:20.113",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 15:15:20.114",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 15:15:20.114",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 15:15:20.114",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 15:15:20.114",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 15:15:20.114",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: false"
                }{
                "timestamp":"2019-06-28 15:15:20.114",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 15:15:20.140",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 15:19:50.049",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 15:24:50.060",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 15:29:50.074",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 15:33:35.423",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42f8285e: startup date [Fri Jun 28 15:14:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@206a70ef"
                }{
                "timestamp":"2019-06-28 15:33:35.429",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign_service_a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 15:33:35.429",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561707215429, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 15:33:35.429",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN_SERVICE_A/bogon:feign_service_a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 15:33:35.430",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 15:33:35.430",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 15:33:35.436",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Broken pipe (Write failed)"
                }{
                "timestamp":"2019-06-28 15:33:35.436",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-06-28 15:33:35.437",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Connection reset"
                }{
                "timestamp":"2019-06-28 15:33:35.438",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-06-28 15:33:35.448",
                "level": "ERROR",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: org.apache.http.client.ClientProtocolException
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.client.ClientProtocolException: null
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:839)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
Caused by: org.apache.http.client.NonRepeatableRequestException: Cannot retry request with a non-repeatable request entity.  The cause lists the reason the original request failed.
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:658)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	... 32 common frames omitted
Caused by: java.net.SocketException: Broken pipe (Write failed)
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer(AbstractSessionOutputBuffer.java:157)
	at org.apache.http.impl.io.AbstractSessionOutputBuffer.flush(AbstractSessionOutputBuffer.java:164)
	at org.apache.http.impl.io.ChunkedOutputStream.close(ChunkedOutputStream.java:203)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.close(UTF8JsonGenerator.java:1092)
	at com.fasterxml.jackson.databind.ObjectWriter._configAndWriteValue(ObjectWriter.java:1163)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:988)
	at com.netflix.discovery.converters.EurekaJacksonCodec.writeTo(EurekaJacksonCodec.java:194)
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.encode(CodecWrappers.java:304)
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.writeTo(DiscoveryJerseyProvider.java:135)
	at com.sun.jersey.api.client.RequestWriter$RequestEntityWriterImpl.writeRequestEntity(RequestWriter.java:231)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler$2.writeTo(ApacheHttpClient4Handler.java:289)
	at org.apache.http.entity.HttpEntityWrapper.writeTo(HttpEntityWrapper.java:94)
	at org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper.writeTo(EntityEnclosingRequestWrapper.java:110)
	at org.apache.http.impl.entity.EntitySerializer.serialize(EntitySerializer.java:118)
	at org.apache.http.impl.AbstractHttpClientConnection.sendRequestEntity(AbstractHttpClientConnection.java:263)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.sendRequestEntity(AbstractClientConnAdapter.java:239)
	at org.apache.http.protocol.HttpRequestExecutor.doSendRequest(HttpRequestExecutor.java:238)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	... 34 common frames omitted
{
                "timestamp":"2019-06-28 15:33:35.449",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: org.apache.http.client.ClientProtocolException"
                }{
                "timestamp":"2019-06-28 15:33:35.487",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Connection reset"
                }{
                "timestamp":"2019-06-28 15:33:35.487",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-06-28 15:33:35.488",
                "level": "ERROR",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.SocketException: Connection reset
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:210)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:158)
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:271)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:281)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-06-28 15:33:35.490",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.SocketException: Connection reset"
                }{
                "timestamp":"2019-06-28 15:33:35.491",
                "level": "ERROR",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$7567aef5.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:673)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 45 common frames omitted
{
                "timestamp":"2019-06-28 15:33:35.491",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN_SERVICE_A/bogon:feign_service_a:1001 - registration failed Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 15:33:35.492",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 15:33:35.492",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 15:33:35.494",
                "level": "ERROR",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$7567aef5.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
{
                "timestamp":"2019-06-28 15:33:35.496",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 15:33:35.497",
                "level": "ERROR",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN_SERVICE_A/bogon:feign_service_a:1001 - de-registration failedCannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$7567aef5.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 15:33:35.503",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 15:33:35.508",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 15:33:35.512",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 15:33:35.512",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "7378",
                "thread": "Thread-20",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 15:56:26.813",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "8144",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 15:56:26.823",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "8144",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@784c3487: startup date [Fri Jun 28 15:56:26 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 15:56:27.380",
                "level": "ERROR",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "8144",
                "thread": "main",
                "class": "o.springframework.boot.SpringApplication",
                "message": "Application startup failed"
                }java.lang.IllegalStateException: Service id not legal hostname (feign_service_b)
	at org.springframework.util.Assert.state(Assert.java:70)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.getName(FeignClientsRegistrar.java:238)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClient(FeignClientsRegistrar.java:181)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:167)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:92)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:354)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:270)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.FeignServiceAApplication.main(FeignServiceAApplication.java:21)
{
                "timestamp":"2019-06-28 15:56:27.381",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "8144",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@784c3487: startup date [Fri Jun 28 15:56:26 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 15:56:27.381",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "8144",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Exception thrown from LifecycleProcessor on context close"
                }java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@784c3487: startup date [Fri Jun 28 15:56:26 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:427)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:999)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.FeignServiceAApplication.main(FeignServiceAApplication.java:21)
{
                "timestamp":"2019-06-28 15:56:27.381",
                "level": "ERROR",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "8144",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception"
                }java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@784c3487: startup date [Fri Jun 28 15:56:26 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.FeignServiceAApplication.main(FeignServiceAApplication.java:21)
{
                "timestamp":"2019-06-28 16:04:05.076",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "8395",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 16:04:05.086",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "8395",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fcb4004: startup date [Fri Jun 28 16:04:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-06-28 16:04:05.614",
                "level": "ERROR",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "8395",
                "thread": "main",
                "class": "o.springframework.boot.SpringApplication",
                "message": "Application startup failed"
                }java.lang.IllegalStateException: Service id not legal hostname (feign_service_b)
	at org.springframework.util.Assert.state(Assert.java:70)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.getName(FeignClientsRegistrar.java:238)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClient(FeignClientsRegistrar.java:181)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:167)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:92)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:354)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:270)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.FeignServiceAApplication.main(FeignServiceAApplication.java:21)
{
                "timestamp":"2019-06-28 16:04:05.615",
                "level": "INFO",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "8395",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fcb4004: startup date [Fri Jun 28 16:04:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-06-28 16:04:05.616",
                "level": "WARN",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "8395",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Exception thrown from LifecycleProcessor on context close"
                }java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fcb4004: startup date [Fri Jun 28 16:04:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:427)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:999)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.FeignServiceAApplication.main(FeignServiceAApplication.java:21)
{
                "timestamp":"2019-06-28 16:04:05.616",
                "level": "ERROR",
                "service": "feign_service_a",
                "trace": "",
                "span": "",
                "pid": "8395",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception"
                }java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fcb4004: startup date [Fri Jun 28 16:04:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.FeignServiceAApplication.main(FeignServiceAApplication.java:21)
