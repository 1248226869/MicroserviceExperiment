{
                "timestamp":"2019-07-03 10:35:54.414",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1129",
                "thread": "main",
                "class": "c.t.m.LimitingServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-03 10:35:54.424",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1129",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4: startup date [Wed Jul 03 10:35:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:35:54.935",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1129",
                "thread": "main",
                "class": "o.springframework.boot.SpringApplication",
                "message": "Application startup failed"
                }java.lang.IllegalStateException: Either 'name' or 'value' must be provided in @FeignClient
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.getClientName(FeignClientsRegistrar.java:367)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerFeignClients(FeignClientsRegistrar.java:163)
	at org.springframework.cloud.netflix.feign.FeignClientsRegistrar.registerBeanDefinitions(FeignClientsRegistrar.java:92)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:354)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:270)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.LimitingServiceAApplication.main(LimitingServiceAApplication.java:22)
{
                "timestamp":"2019-07-03 10:35:54.936",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1129",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4: startup date [Wed Jul 03 10:35:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:35:54.936",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1129",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Exception thrown from LifecycleProcessor on context close"
                }java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4: startup date [Wed Jul 03 10:35:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:427)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:999)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.LimitingServiceAApplication.main(LimitingServiceAApplication.java:22)
{
                "timestamp":"2019-07-03 10:35:54.937",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1129",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception"
                }java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4: startup date [Wed Jul 03 10:35:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.LimitingServiceAApplication.main(LimitingServiceAApplication.java:22)
{
                "timestamp":"2019-07-03 10:37:07.203",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "c.t.m.LimitingServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-03 10:37:07.214",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4: startup date [Wed Jul 03 10:37:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:37:08.044",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-03 10:37:08.507",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=356812e8-4d39-397f-9038-beb0d3e14f08"
                }{
                "timestamp":"2019-07-03 10:37:08.527",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:37:08.568",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceA' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:37:08.599",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$ffff2a73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:37:08.656",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$c522d2e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:37:08.838",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:37:08.858",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f4ea32f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:37:08.901",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ded78fad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:37:08.944",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$24f6576] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:37:08.983",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$aaa138cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:37:09.368",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-03 10:37:09.376",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-03 10:37:09.377",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-03 10:37:09.450",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-03 10:37:09.451",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 2237 ms"
                }{
                "timestamp":"2019-07-03 10:37:10.105",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:37:10.105",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:37:10.105",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:37:10.105",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:37:10.105",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:37:10.105",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:37:10.105",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:37:10.106",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:37:10.106",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-03 10:37:10.201",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7f3ca64a: startup date [Wed Jul 03 10:37:10 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4"
                }{
                "timestamp":"2019-07-03 10:37:10.212",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:37:10.787",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/limiting],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.LimitingController.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-03 10:37:10.788",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:37:10.790",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-03 10:37:10.791",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-03 10:37:10.791",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-03 10:37:10.793",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-03 10:37:10.793",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-03 10:37:11.693",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:37:11.693",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-03 10:37:11.694",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.694",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-03 10:37:11.695",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:37:11.695",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-03 10:37:11.696",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.697",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.697",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.698",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.698",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:37:11.698",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.700",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:37:11.701",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:37:11.701",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.702",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.702",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.703",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-03 10:37:11.704",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.704",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:37:11.704",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.705",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.705",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.705",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-03 10:37:11.705",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:37:11.706",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.706",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:11.707",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:37:12.090",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-03 10:37:12.137",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-03 10:37:12.157",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-03 10:37:12.161",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:37:12.162",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='限流测试', position=0, controller=com.tailen.microservice.controller.LimitingController}]] "
                }{
                "timestamp":"2019-07-03 10:37:12.172",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/限流测试 Description: 限流测试 Position: 0"
                }{
                "timestamp":"2019-07-03 10:37:12.200",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:37:12.201",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:37:12.206",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:37:12.206",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:37:12.210",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/limiting.com.tailen.microservice.controller.LimitingController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:37:12.211",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/limiting.com.tailen.microservice.controller.LimitingController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:37:12.406",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:37:12.412",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:37:13.565",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4: startup date [Wed Jul 03 10:37:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:37:13.585",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:37:13.763",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:37:13.764",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:37:13.817",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:37:13.911",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:37:14.757",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:37:14.758",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:37:14.760",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:37:14.760",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:37:14.935",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-03 10:37:15.143",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-03 10:37:15.151",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:37:15.152",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:37:15.153",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:37:15.153",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:37:15.154",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:37:15.155",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:37:15.157",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-03 10:37:15.168",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-03 10:37:15.177",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-03 10:37:15.182",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-03 10:37:15.189",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=ec2cc4,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-03 10:37:15.194",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-03 10:37:15.472",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:37:15.481",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-03 10:37:15.517",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-03 10:37:15.663",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:37:15.663",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:37:15.784",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:37:15.784",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:37:15.927",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 10:37:15.936",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-03 10:37:15.936",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-03 10:37:15.936",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-03 10:37:15.936",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-03 10:37:15.936",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-03 10:37:15.936",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-03 10:37:15.936",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-03 10:37:16.043",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-03 10:37:16.045",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-03 10:37:16.046",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-03 10:37:16.048",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562121436048 with initial instances count: 1"
                }{
                "timestamp":"2019-07-03 10:37:16.231",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application limiting with eureka with status UP"
                }{
                "timestamp":"2019-07-03 10:37:16.232",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562121436232, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-03 10:37:16.236",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103: registering service..."
                }{
                "timestamp":"2019-07-03 10:37:16.267",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:37:16.353",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-03 10:37:16.353",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1103"
                }{
                "timestamp":"2019-07-03 10:37:16.359",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "main",
                "class": "c.t.m.LimitingServiceAApplication",
                "message": "Started LimitingServiceAApplication in 29.948 seconds (JVM running for 35.728)"
                }{
                "timestamp":"2019-07-03 10:38:03.747",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "http-nio-1103-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-07-03 10:38:03.766",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-07-03 10:38:03.821",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 53 ms"
                }{
                "timestamp":"2019-07-03 10:38:10.558",
                "level": "INFO",
                "service": "limiting",
                "trace": "3df3d6eaf4c9086f",
                "span": "3df3d6eaf4c9086f",
                "pid": "1138",
                "thread": "http-nio-1103-exec-7",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "开始执行LimitingController#add方法，入参为[1, 2]"
                }{
                "timestamp":"2019-07-03 10:38:10.567",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "http-nio-1103-exec-7",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause"
                }java.lang.NullPointerException: null
	at com.tailen.microservice.config.limiting.LimitingConfig.LimitingHandle(LimitingConfig.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.tailen.microservice.controller.LimitingController$$EnhancerBySpringCGLIB$$73f745a.add(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.cloud.sleuth.instrument.web.TraceFilter.doFilter(TraceFilter.java:153)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 10:41:37.147",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "Thread-65",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4: startup date [Wed Jul 03 10:37:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:41:37.148",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "Thread-65",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application limiting with eureka with status DOWN"
                }{
                "timestamp":"2019-07-03 10:41:37.149",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "Thread-65",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562121697149, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-03 10:41:37.150",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "Thread-65",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-03 10:41:37.150",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562121697150, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-07-03 10:41:37.150",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103: registering service..."
                }{
                "timestamp":"2019-07-03 10:41:37.150",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "Thread-65",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-03 10:41:37.158",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:41:37.159",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "Thread-65",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - deregister  status: 200"
                }{
                "timestamp":"2019-07-03 10:41:37.162",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "Thread-65",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-03 10:41:37.164",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "Thread-65",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:41:37.168",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "Thread-65",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-03 10:41:37.169",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "Thread-65",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-03 10:41:37.172",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "Thread-65",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7f3ca64a: startup date [Wed Jul 03 10:37:10 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4"
                }{
                "timestamp":"2019-07-03 10:41:37.173",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1138",
                "thread": "Thread-65",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-03 10:42:13.252",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "c.t.m.LimitingServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-03 10:42:13.266",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4097cac: startup date [Wed Jul 03 10:42:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7586beff"
                }{
                "timestamp":"2019-07-03 10:42:13.837",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-03 10:42:14.000",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=356812e8-4d39-397f-9038-beb0d3e14f08"
                }{
                "timestamp":"2019-07-03 10:42:14.013",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:42:14.037",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceA' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:42:14.068",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$3d491ba5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:42:14.125",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$26cc414] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:42:14.244",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:42:14.260",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$32342423] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:42:14.300",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1c2180df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:42:14.318",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3f9956a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:42:14.346",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$e7eb2a01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:42:14.773",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-03 10:42:14.783",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-03 10:42:14.784",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-03 10:42:14.854",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-03 10:42:14.855",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1589 ms"
                }{
                "timestamp":"2019-07-03 10:42:15.541",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:42:15.542",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:42:15.542",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:42:15.542",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:42:15.542",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:42:15.542",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:42:15.542",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:42:15.542",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:42:15.542",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-03 10:42:15.644",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@570ba13: startup date [Wed Jul 03 10:42:15 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4097cac"
                }{
                "timestamp":"2019-07-03 10:42:15.656",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:42:16.265",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/limiting],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.LimitingController.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-03 10:42:16.267",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:42:16.269",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-03 10:42:16.270",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-03 10:42:16.270",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-03 10:42:16.272",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-03 10:42:16.272",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-03 10:42:17.220",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:42:17.221",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.221",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.222",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-03 10:42:17.222",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:42:17.222",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-03 10:42:17.223",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:42:17.223",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.223",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.224",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.225",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.226",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.226",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:42:17.228",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-03 10:42:17.228",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.229",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.230",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.231",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.231",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-03 10:42:17.232",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.233",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.233",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:42:17.233",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-03 10:42:17.234",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.235",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:42:17.235",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:42:17.235",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.235",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:42:17.598",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-03 10:42:17.640",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-03 10:42:17.658",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-03 10:42:17.661",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:42:17.662",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='限流测试', position=0, controller=com.tailen.microservice.controller.LimitingController}]] "
                }{
                "timestamp":"2019-07-03 10:42:17.668",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/限流测试 Description: 限流测试 Position: 0"
                }{
                "timestamp":"2019-07-03 10:42:17.692",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:42:17.692",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:42:17.696",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:42:17.697",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:42:17.700",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/limiting.com.tailen.microservice.controller.LimitingController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:42:17.700",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/limiting.com.tailen.microservice.controller.LimitingController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:42:17.877",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:42:17.884",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:42:19.022",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4097cac: startup date [Wed Jul 03 10:42:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7586beff"
                }{
                "timestamp":"2019-07-03 10:42:19.031",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:42:19.182",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:42:19.182",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:42:19.207",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:42:19.266",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:42:19.949",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:42:19.950",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:42:19.952",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:42:19.952",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:42:20.126",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-03 10:42:20.310",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-03 10:42:20.317",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:42:20.319",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:42:20.319",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:42:20.320",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:42:20.320",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:42:20.321",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:42:20.323",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-03 10:42:20.335",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-03 10:42:20.345",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-03 10:42:20.351",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-03 10:42:20.357",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4097cac,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-03 10:42:20.362",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-03 10:42:20.602",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:42:20.608",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-03 10:42:20.642",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-03 10:42:20.790",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:42:20.790",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:42:20.885",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:42:20.885",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:42:21.021",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 10:42:21.029",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-03 10:42:21.029",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-03 10:42:21.029",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-03 10:42:21.029",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-03 10:42:21.030",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-03 10:42:21.030",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-03 10:42:21.030",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-03 10:42:21.343",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-03 10:42:21.345",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-03 10:42:21.348",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-03 10:42:21.350",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562121741350 with initial instances count: 1"
                }{
                "timestamp":"2019-07-03 10:42:21.657",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application limiting with eureka with status UP"
                }{
                "timestamp":"2019-07-03 10:42:21.658",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562121741658, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-03 10:42:21.703",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103: registering service..."
                }{
                "timestamp":"2019-07-03 10:42:21.735",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:42:21.828",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-03 10:42:21.829",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1103"
                }{
                "timestamp":"2019-07-03 10:42:21.834",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "main",
                "class": "c.t.m.LimitingServiceAApplication",
                "message": "Started LimitingServiceAApplication in 29.285 seconds (JVM running for 34.851)"
                }{
                "timestamp":"2019-07-03 10:43:03.291",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "http-nio-1103-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-07-03 10:43:03.291",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-07-03 10:43:03.328",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms"
                }{
                "timestamp":"2019-07-03 10:43:03.354",
                "level": "INFO",
                "service": "limiting",
                "trace": "2c272e85f93c1d75",
                "span": "2c272e85f93c1d75",
                "pid": "1252",
                "thread": "http-nio-1103-exec-1",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "开始执行LimitingController#add方法，入参为[1, 2]"
                }{
                "timestamp":"2019-07-03 10:43:03.356",
                "level": "INFO",
                "service": "limiting",
                "trace": "2c272e85f93c1d75",
                "span": "2c272e85f93c1d75",
                "pid": "1252",
                "thread": "http-nio-1103-exec-1",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "Limiting service......"
                }{
                "timestamp":"2019-07-03 10:43:03.548",
                "level": "INFO",
                "service": "limiting",
                "trace": "2c272e85f93c1d75",
                "span": "2c272e85f93c1d75",
                "pid": "1252",
                "thread": "hystrix-userServiceApplication-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@163151a7: startup date [Wed Jul 03 10:43:03 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4097cac"
                }{
                "timestamp":"2019-07-03 10:43:03.579",
                "level": "INFO",
                "service": "limiting",
                "trace": "2c272e85f93c1d75",
                "span": "2c272e85f93c1d75",
                "pid": "1252",
                "thread": "hystrix-userServiceApplication-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:43:03.678",
                "level": "INFO",
                "service": "limiting",
                "trace": "2c272e85f93c1d75",
                "span": "2c272e85f93c1d75",
                "pid": "1252",
                "thread": "hystrix-userServiceApplication-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: userServiceApplication.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-07-03 10:43:03.691",
                "level": "INFO",
                "service": "limiting",
                "trace": "2c272e85f93c1d75",
                "span": "2c272e85f93c1d75",
                "pid": "1252",
                "thread": "hystrix-userServiceApplication-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-userServiceApplication"
                }{
                "timestamp":"2019-07-03 10:43:03.703",
                "level": "INFO",
                "service": "limiting",
                "trace": "2c272e85f93c1d75",
                "span": "2c272e85f93c1d75",
                "pid": "1252",
                "thread": "hystrix-userServiceApplication-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: userServiceApplication instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=userServiceApplication,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-07-03 10:43:03.708",
                "level": "INFO",
                "service": "limiting",
                "trace": "2c272e85f93c1d75",
                "span": "2c272e85f93c1d75",
                "pid": "1252",
                "thread": "hystrix-userServiceApplication-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-07-03 10:43:03.711",
                "level": "INFO",
                "service": "limiting",
                "trace": "2c272e85f93c1d75",
                "span": "2c272e85f93c1d75",
                "pid": "1252",
                "thread": "hystrix-userServiceApplication-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client userServiceApplication initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=userServiceApplication,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@24be8b0e"
                }{
                "timestamp":"2019-07-03 10:43:03.802",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "http-nio-1103-exec-1",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceA#add(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: userServiceApplication
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 10:44:15.270",
                "level": "INFO",
                "service": "limiting",
                "trace": "ef25057948fe5bb8",
                "span": "ef25057948fe5bb8",
                "pid": "1252",
                "thread": "http-nio-1103-exec-2",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "开始执行LimitingController#add方法，入参为[1, 2]"
                }{
                "timestamp":"2019-07-03 10:44:15.270",
                "level": "INFO",
                "service": "limiting",
                "trace": "ef25057948fe5bb8",
                "span": "ef25057948fe5bb8",
                "pid": "1252",
                "thread": "http-nio-1103-exec-2",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "Limiting service......"
                }{
                "timestamp":"2019-07-03 10:44:15.273",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "http-nio-1103-exec-2",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceA#add(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: userServiceApplication
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 10:47:21.038",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 10:48:16.432",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4097cac: startup date [Wed Jul 03 10:42:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7586beff"
                }{
                "timestamp":"2019-07-03 10:48:16.433",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application limiting with eureka with status DOWN"
                }{
                "timestamp":"2019-07-03 10:48:16.433",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-75",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-07-03 10:48:16.433",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122096433, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-03 10:48:16.434",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-03 10:48:16.434",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103: registering service..."
                }{
                "timestamp":"2019-07-03 10:48:16.434",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-03 10:48:16.440",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - deregister  status: 200"
                }{
                "timestamp":"2019-07-03 10:48:16.440",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:48:16.443",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-03 10:48:16.445",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:48:16.447",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-03 10:48:16.448",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-03 10:48:16.448",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@163151a7: startup date [Wed Jul 03 10:43:03 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4097cac"
                }{
                "timestamp":"2019-07-03 10:48:16.449",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application limiting with eureka with status DOWN"
                }{
                "timestamp":"2019-07-03 10:48:16.449",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-userServiceApplication"
                }{
                "timestamp":"2019-07-03 10:48:16.449",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-03 10:48:16.453",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@570ba13: startup date [Wed Jul 03 10:42:15 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4097cac"
                }{
                "timestamp":"2019-07-03 10:48:16.455",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1252",
                "thread": "Thread-64",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-03 10:49:02.146",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "c.t.m.LimitingServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-03 10:49:02.154",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4: startup date [Wed Jul 03 10:49:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:49:02.721",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-03 10:49:02.882",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=d5eca5e6-1c87-3db3-b474-e464afe1dbb4"
                }{
                "timestamp":"2019-07-03 10:49:02.895",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:49:02.921",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceA' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:49:02.947",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$ffff2a73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:49:03.007",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$c522d2e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:49:03.110",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:49:03.123",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f4ea32f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:49:03.151",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ded78fad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:49:03.167",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$24f6576] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:49:03.182",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$aaa138cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:49:03.566",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-03 10:49:03.572",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-03 10:49:03.573",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-03 10:49:03.636",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-03 10:49:03.637",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1483 ms"
                }{
                "timestamp":"2019-07-03 10:49:04.299",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:49:04.300",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:49:04.300",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:49:04.300",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:49:04.300",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:49:04.300",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:49:04.300",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:49:04.301",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:49:04.301",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-03 10:49:04.380",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@37a9b687: startup date [Wed Jul 03 10:49:04 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4"
                }{
                "timestamp":"2019-07-03 10:49:04.389",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:49:04.875",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/limiting],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.LimitingController.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-03 10:49:04.876",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:49:04.878",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-03 10:49:04.878",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-03 10:49:04.879",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-03 10:49:04.880",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-03 10:49:04.881",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-03 10:49:05.717",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.718",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:49:05.718",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.718",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.719",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.719",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.720",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-03 10:49:05.720",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.720",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.722",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.722",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.723",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.723",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:49:05.723",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.724",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.724",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-03 10:49:05.724",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-03 10:49:05.725",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:49:05.726",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.726",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.726",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:49:05.727",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-03 10:49:05.728",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:49:05.728",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:49:05.728",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:05.729",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:49:05.729",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-03 10:49:05.729",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:49:06.044",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-03 10:49:06.086",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-03 10:49:06.104",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-03 10:49:06.107",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:49:06.109",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='限流测试', position=0, controller=com.tailen.microservice.controller.LimitingController}]] "
                }{
                "timestamp":"2019-07-03 10:49:06.114",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/限流测试 Description: 限流测试 Position: 0"
                }{
                "timestamp":"2019-07-03 10:49:06.138",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:49:06.138",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:49:06.142",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:49:06.143",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:49:06.145",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/limiting.com.tailen.microservice.controller.LimitingController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:49:06.146",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/limiting.com.tailen.microservice.controller.LimitingController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:49:06.294",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:49:06.300",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:49:07.374",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4: startup date [Wed Jul 03 10:49:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:49:07.382",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:49:07.530",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:49:07.530",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:49:07.555",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:49:07.614",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:49:08.320",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:49:08.320",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:49:08.323",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:49:08.323",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:49:08.558",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-03 10:49:08.696",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-03 10:49:08.702",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:49:08.704",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:49:08.704",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:49:08.705",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:49:08.705",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:49:08.706",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:49:08.708",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-03 10:49:08.717",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-03 10:49:08.724",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-03 10:49:08.729",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-03 10:49:08.735",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=ec2cc4,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-03 10:49:08.739",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-03 10:49:08.919",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:49:08.923",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-03 10:49:08.947",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-03 10:49:09.077",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:49:09.077",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:49:09.127",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:49:09.128",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:49:09.236",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 10:49:09.246",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-03 10:49:09.246",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-03 10:49:09.246",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-03 10:49:09.246",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-03 10:49:09.246",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-03 10:49:09.246",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-03 10:49:09.246",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-03 10:49:09.350",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-03 10:49:09.352",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-03 10:49:09.353",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-03 10:49:09.355",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562122149355 with initial instances count: 2"
                }{
                "timestamp":"2019-07-03 10:49:09.472",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application limiting with eureka with status UP"
                }{
                "timestamp":"2019-07-03 10:49:09.472",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122149472, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-03 10:49:09.475",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103: registering service..."
                }{
                "timestamp":"2019-07-03 10:49:09.498",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:49:09.556",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-03 10:49:09.557",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1103"
                }{
                "timestamp":"2019-07-03 10:49:09.562",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "main",
                "class": "c.t.m.LimitingServiceAApplication",
                "message": "Started LimitingServiceAApplication in 28.483 seconds (JVM running for 34.477)"
                }{
                "timestamp":"2019-07-03 10:49:36.244",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "http-nio-1103-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-07-03 10:49:36.244",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-07-03 10:49:36.280",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms"
                }{
                "timestamp":"2019-07-03 10:49:36.304",
                "level": "INFO",
                "service": "limiting",
                "trace": "16cb0a837b8fb7ee",
                "span": "16cb0a837b8fb7ee",
                "pid": "1290",
                "thread": "http-nio-1103-exec-1",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "开始执行LimitingController#add方法，入参为[1, 2]"
                }{
                "timestamp":"2019-07-03 10:49:36.306",
                "level": "INFO",
                "service": "limiting",
                "trace": "16cb0a837b8fb7ee",
                "span": "16cb0a837b8fb7ee",
                "pid": "1290",
                "thread": "http-nio-1103-exec-1",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "Limiting service......"
                }{
                "timestamp":"2019-07-03 10:49:36.394",
                "level": "INFO",
                "service": "limiting",
                "trace": "16cb0a837b8fb7ee",
                "span": "16cb0a837b8fb7ee",
                "pid": "1290",
                "thread": "hystrix-feign-service-a-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2a4e3fa4: startup date [Wed Jul 03 10:49:36 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4"
                }{
                "timestamp":"2019-07-03 10:49:36.420",
                "level": "INFO",
                "service": "limiting",
                "trace": "16cb0a837b8fb7ee",
                "span": "16cb0a837b8fb7ee",
                "pid": "1290",
                "thread": "hystrix-feign-service-a-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:49:36.497",
                "level": "INFO",
                "service": "limiting",
                "trace": "16cb0a837b8fb7ee",
                "span": "16cb0a837b8fb7ee",
                "pid": "1290",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-a.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-07-03 10:49:36.508",
                "level": "INFO",
                "service": "limiting",
                "trace": "16cb0a837b8fb7ee",
                "span": "16cb0a837b8fb7ee",
                "pid": "1290",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-a"
                }{
                "timestamp":"2019-07-03 10:49:36.521",
                "level": "INFO",
                "service": "limiting",
                "trace": "16cb0a837b8fb7ee",
                "span": "16cb0a837b8fb7ee",
                "pid": "1290",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-a instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-a,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-07-03 10:49:36.524",
                "level": "INFO",
                "service": "limiting",
                "trace": "16cb0a837b8fb7ee",
                "span": "16cb0a837b8fb7ee",
                "pid": "1290",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-07-03 10:49:36.536",
                "level": "INFO",
                "service": "limiting",
                "trace": "16cb0a837b8fb7ee",
                "span": "16cb0a837b8fb7ee",
                "pid": "1290",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-a.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-07-03 10:49:36.537",
                "level": "INFO",
                "service": "limiting",
                "trace": "16cb0a837b8fb7ee",
                "span": "16cb0a837b8fb7ee",
                "pid": "1290",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-a initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-a,current list of Servers=[10.0.1.31:1100],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.0.1.31:1100;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1c971c31"
                }{
                "timestamp":"2019-07-03 10:49:36.750",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "http-nio-1103-exec-1",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceA#add(Integer,Integer) failed and no fallback available.] with root cause"
                }feign.FeignException: status 500 reading FeignServiceA#add(Integer,Integer); content:
{"timestamp":1562122176710,"status":500,"error":"Internal Server Error","exception":"java.lang.ArithmeticException","message":"/ by zero","path":"/api/add"}
	at feign.FeignException.errorStatus(FeignException.java:62)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:91)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:138)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 10:49:37.527",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "PollingServerListUpdater-0",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-a.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-07-03 10:49:53.661",
                "level": "INFO",
                "service": "limiting",
                "trace": "b6967609b6f4bd67",
                "span": "b6967609b6f4bd67",
                "pid": "1290",
                "thread": "http-nio-1103-exec-2",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "开始执行LimitingController#add方法，入参为[1, 2]"
                }{
                "timestamp":"2019-07-03 10:49:53.661",
                "level": "INFO",
                "service": "limiting",
                "trace": "b6967609b6f4bd67",
                "span": "b6967609b6f4bd67",
                "pid": "1290",
                "thread": "http-nio-1103-exec-2",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "Limiting service......"
                }{
                "timestamp":"2019-07-03 10:49:53.675",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "http-nio-1103-exec-2",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceA#add(Integer,Integer) failed and no fallback available.] with root cause"
                }feign.FeignException: status 500 reading FeignServiceA#add(Integer,Integer); content:
{"timestamp":1562122193671,"status":500,"error":"Internal Server Error","exception":"java.lang.ArithmeticException","message":"/ by zero","path":"/api/add"}
	at feign.FeignException.errorStatus(FeignException.java:62)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:91)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:138)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 10:50:39.762",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4: startup date [Wed Jul 03 10:49:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:50:39.763",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-74",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-07-03 10:50:39.764",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application limiting with eureka with status DOWN"
                }{
                "timestamp":"2019-07-03 10:50:39.764",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122239764, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-03 10:50:39.764",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-03 10:50:39.764",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122239764, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-07-03 10:50:39.765",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.netflix.appinfo.ApplicationInfoManager",
                "message": "failed to notify listener: statusChangeListener"
                }java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@4ca6b5ca rejected from java.util.concurrent.ScheduledThreadPoolExecutor@75f29f4d[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 7]
	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2063)
	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:830)
	at java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute(ScheduledThreadPoolExecutor.java:326)
	at java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:533)
	at java.util.concurrent.ScheduledThreadPoolExecutor.submit(ScheduledThreadPoolExecutor.java:632)
	at com.netflix.discovery.InstanceInfoReplicator.onDemandUpdate(InstanceInfoReplicator.java:77)
	at com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1281)
	at com.netflix.appinfo.ApplicationInfoManager.setInstanceStatus(ApplicationInfoManager.java:177)
	at com.netflix.appinfo.ApplicationInfoManager$$FastClassBySpringCGLIB$$ca6abd37.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:133)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:121)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.netflix.appinfo.ApplicationInfoManager$$EnhancerBySpringCGLIB$$3db47557.setInstanceStatus(<generated>)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1369)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:100)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 10:50:39.765",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103: registering service..."
                }{
                "timestamp":"2019-07-03 10:50:39.765",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-03 10:50:39.771",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:50:39.772",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - deregister  status: 200"
                }{
                "timestamp":"2019-07-03 10:50:39.774",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-03 10:50:39.776",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:50:39.780",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-03 10:50:39.780",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-03 10:50:39.781",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@2a4e3fa4: startup date [Wed Jul 03 10:49:36 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4"
                }{
                "timestamp":"2019-07-03 10:50:39.783",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application limiting with eureka with status DOWN"
                }{
                "timestamp":"2019-07-03 10:50:39.783",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-feign-service-a"
                }{
                "timestamp":"2019-07-03 10:50:39.783",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-03 10:50:39.788",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@37a9b687: startup date [Wed Jul 03 10:49:04 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4"
                }{
                "timestamp":"2019-07-03 10:50:39.789",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1290",
                "thread": "Thread-63",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-03 10:51:12.942",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "c.t.m.LimitingServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-03 10:51:12.951",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52d645b1: startup date [Wed Jul 03 10:51:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-07-03 10:51:13.505",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-03 10:51:13.669",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=d5eca5e6-1c87-3db3-b474-e464afe1dbb4"
                }{
                "timestamp":"2019-07-03 10:51:13.681",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:51:13.706",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceA' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:13.743",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$66c691f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:13.793",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$2bea3a67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:13.906",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:13.922",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5bb19a76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:13.967",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$459ef732] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:13.987",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6916ccfb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:14.007",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$1168a054] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:14.383",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-03 10:51:14.389",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-03 10:51:14.390",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-03 10:51:14.449",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-03 10:51:14.450",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1499 ms"
                }{
                "timestamp":"2019-07-03 10:51:15.083",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:15.083",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:15.083",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:15.083",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:15.084",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:15.084",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:15.084",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:15.084",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:15.084",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-03 10:51:15.167",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c977dcf: startup date [Wed Jul 03 10:51:15 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52d645b1"
                }{
                "timestamp":"2019-07-03 10:51:15.178",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:51:15.736",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/limiting],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.LimitingController.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-03 10:51:15.737",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:51:15.739",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-03 10:51:15.740",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-03 10:51:15.740",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-03 10:51:15.742",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-03 10:51:15.742",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-03 10:51:16.612",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-03 10:51:16.612",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.613",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:51:16.613",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.614",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.614",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.614",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-03 10:51:16.615",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:51:16.615",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.616",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.616",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.617",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-03 10:51:16.618",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.619",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.619",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.620",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:51:16.620",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.620",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.620",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-03 10:51:16.621",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:51:16.621",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.622",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.623",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:51:16.623",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:51:16.623",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.623",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:51:16.623",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-03 10:51:16.624",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:16.962",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-03 10:51:17.006",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-03 10:51:17.024",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-03 10:51:17.027",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:51:17.028",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='限流测试', position=0, controller=com.tailen.microservice.controller.LimitingController}]] "
                }{
                "timestamp":"2019-07-03 10:51:17.033",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/限流测试 Description: 限流测试 Position: 0"
                }{
                "timestamp":"2019-07-03 10:51:17.057",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:51:17.058",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:51:17.062",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:51:17.062",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:51:17.065",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/limiting.com.tailen.microservice.controller.LimitingController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:51:17.065",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/limiting.com.tailen.microservice.controller.LimitingController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:51:17.246",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:51:17.257",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:51:18.317",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52d645b1: startup date [Wed Jul 03 10:51:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-07-03 10:51:18.326",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:51:18.474",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:51:18.474",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:51:18.500",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:51:18.558",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:51:19.193",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:51:19.193",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:51:19.196",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:51:19.196",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:51:19.366",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-03 10:51:19.538",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-03 10:51:19.546",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:51:19.547",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:51:19.548",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:51:19.548",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:51:19.549",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:51:19.550",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:51:19.551",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-03 10:51:19.561",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-03 10:51:19.569",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-03 10:51:19.574",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-03 10:51:19.580",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=52d645b1,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-03 10:51:19.584",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-03 10:51:19.820",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:51:19.828",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-03 10:51:19.866",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-03 10:51:20.000",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:51:20.000",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:51:20.071",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:51:20.071",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:51:20.184",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 10:51:20.192",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-03 10:51:20.192",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-03 10:51:20.192",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-03 10:51:20.192",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-03 10:51:20.193",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-03 10:51:20.193",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-03 10:51:20.193",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-03 10:51:20.286",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-03 10:51:20.290",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-03 10:51:20.293",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-03 10:51:20.297",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562122280297 with initial instances count: 2"
                }{
                "timestamp":"2019-07-03 10:51:20.441",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application limiting with eureka with status UP"
                }{
                "timestamp":"2019-07-03 10:51:20.441",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122280441, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-03 10:51:20.445",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103: registering service..."
                }{
                "timestamp":"2019-07-03 10:51:20.469",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:51:20.551",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-03 10:51:20.552",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1103"
                }{
                "timestamp":"2019-07-03 10:51:20.559",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "main",
                "class": "c.t.m.LimitingServiceAApplication",
                "message": "Started LimitingServiceAApplication in 28.339 seconds (JVM running for 34.034)"
                }{
                "timestamp":"2019-07-03 10:51:30.895",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "http-nio-1103-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-07-03 10:51:30.895",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-07-03 10:51:30.931",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms"
                }{
                "timestamp":"2019-07-03 10:51:30.957",
                "level": "INFO",
                "service": "limiting",
                "trace": "9151df48cfd25a3d",
                "span": "9151df48cfd25a3d",
                "pid": "1394",
                "thread": "http-nio-1103-exec-1",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "开始执行LimitingController#add方法，入参为[1, 2]"
                }{
                "timestamp":"2019-07-03 10:51:30.959",
                "level": "INFO",
                "service": "limiting",
                "trace": "9151df48cfd25a3d",
                "span": "9151df48cfd25a3d",
                "pid": "1394",
                "thread": "http-nio-1103-exec-1",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "Limiting service......"
                }{
                "timestamp":"2019-07-03 10:51:31.046",
                "level": "INFO",
                "service": "limiting",
                "trace": "9151df48cfd25a3d",
                "span": "9151df48cfd25a3d",
                "pid": "1394",
                "thread": "hystrix-feign-service-a-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@370be008: startup date [Wed Jul 03 10:51:31 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52d645b1"
                }{
                "timestamp":"2019-07-03 10:51:31.072",
                "level": "INFO",
                "service": "limiting",
                "trace": "9151df48cfd25a3d",
                "span": "9151df48cfd25a3d",
                "pid": "1394",
                "thread": "hystrix-feign-service-a-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:51:31.147",
                "level": "INFO",
                "service": "limiting",
                "trace": "9151df48cfd25a3d",
                "span": "9151df48cfd25a3d",
                "pid": "1394",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-a.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-07-03 10:51:31.158",
                "level": "INFO",
                "service": "limiting",
                "trace": "9151df48cfd25a3d",
                "span": "9151df48cfd25a3d",
                "pid": "1394",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-a"
                }{
                "timestamp":"2019-07-03 10:51:31.169",
                "level": "INFO",
                "service": "limiting",
                "trace": "9151df48cfd25a3d",
                "span": "9151df48cfd25a3d",
                "pid": "1394",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-a instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-a,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-07-03 10:51:31.172",
                "level": "INFO",
                "service": "limiting",
                "trace": "9151df48cfd25a3d",
                "span": "9151df48cfd25a3d",
                "pid": "1394",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-07-03 10:51:31.175",
                "level": "INFO",
                "service": "limiting",
                "trace": "9151df48cfd25a3d",
                "span": "9151df48cfd25a3d",
                "pid": "1394",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-a initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-a,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2d22e3d6"
                }{
                "timestamp":"2019-07-03 10:51:31.236",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "http-nio-1103-exec-1",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceA#add(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-a
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 10:51:43.135",
                "level": "INFO",
                "service": "limiting",
                "trace": "70e8b5408ddc2653",
                "span": "70e8b5408ddc2653",
                "pid": "1394",
                "thread": "http-nio-1103-exec-2",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "开始执行LimitingController#add方法，入参为[1, 2]"
                }{
                "timestamp":"2019-07-03 10:51:43.141",
                "level": "INFO",
                "service": "limiting",
                "trace": "70e8b5408ddc2653",
                "span": "70e8b5408ddc2653",
                "pid": "1394",
                "thread": "http-nio-1103-exec-2",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "Limiting service......"
                }{
                "timestamp":"2019-07-03 10:51:43.146",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "http-nio-1103-exec-2",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceA#add(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-a
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 10:52:02.192",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "PollingServerListUpdater-0",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-a.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-07-03 10:54:02.391",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52d645b1: startup date [Wed Jul 03 10:51:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-07-03 10:54:02.391",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-73",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-07-03 10:54:02.392",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application limiting with eureka with status DOWN"
                }{
                "timestamp":"2019-07-03 10:54:02.392",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122442392, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-03 10:54:02.393",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122442393, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-07-03 10:54:02.393",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-03 10:54:02.394",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103: registering service..."
                }{
                "timestamp":"2019-07-03 10:54:02.394",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-03 10:54:02.401",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - deregister  status: 200"
                }{
                "timestamp":"2019-07-03 10:54:02.402",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:54:02.404",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-03 10:54:02.406",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:54:02.408",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-03 10:54:02.408",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-03 10:54:02.409",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@370be008: startup date [Wed Jul 03 10:51:31 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52d645b1"
                }{
                "timestamp":"2019-07-03 10:54:02.410",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application limiting with eureka with status DOWN"
                }{
                "timestamp":"2019-07-03 10:54:02.410",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-feign-service-a"
                }{
                "timestamp":"2019-07-03 10:54:02.411",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-03 10:54:02.413",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6c977dcf: startup date [Wed Jul 03 10:51:15 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52d645b1"
                }{
                "timestamp":"2019-07-03 10:54:02.414",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1394",
                "thread": "Thread-62",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-03 10:56:06.595",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "c.t.m.LimitingServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-03 10:56:06.614",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4: startup date [Wed Jul 03 10:56:06 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:56:07.213",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-03 10:56:07.396",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=d5eca5e6-1c87-3db3-b474-e464afe1dbb4"
                }{
                "timestamp":"2019-07-03 10:56:07.409",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:56:07.439",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceA' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:56:07.467",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$ffff2a73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:56:07.520",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$c522d2e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:56:07.649",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:56:07.670",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f4ea32f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:56:07.710",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ded78fad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:56:07.732",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$24f6576] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:56:07.752",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$aaa138cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:56:08.135",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-03 10:56:08.142",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-03 10:56:08.142",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-03 10:56:08.214",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-03 10:56:08.215",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1601 ms"
                }{
                "timestamp":"2019-07-03 10:56:08.849",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:56:08.850",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:56:08.850",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:56:08.850",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:56:08.850",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:56:08.850",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:56:08.850",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:56:08.851",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:56:08.851",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-03 10:56:08.945",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@37a9b687: startup date [Wed Jul 03 10:56:08 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4"
                }{
                "timestamp":"2019-07-03 10:56:08.956",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:56:09.556",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/limiting],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.LimitingController.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-03 10:56:09.558",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:56:09.560",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-03 10:56:09.560",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-03 10:56:09.560",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-03 10:56:09.562",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-03 10:56:09.562",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-03 10:56:10.456",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.457",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:56:10.458",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.458",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.458",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.459",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.459",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.460",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-03 10:56:10.461",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:56:10.462",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.462",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.462",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.463",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.463",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-03 10:56:10.464",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.464",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.464",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.466",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.466",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-03 10:56:10.466",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:56:10.467",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.467",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:56:10.467",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-03 10:56:10.468",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:56:10.469",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:56:10.469",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:56:10.470",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:56:10.470",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-03 10:56:10.821",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-03 10:56:10.863",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-03 10:56:10.881",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-03 10:56:10.885",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:56:10.886",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='限流测试', position=0, controller=com.tailen.microservice.controller.LimitingController}]] "
                }{
                "timestamp":"2019-07-03 10:56:10.891",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/限流测试 Description: 限流测试 Position: 0"
                }{
                "timestamp":"2019-07-03 10:56:10.915",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:56:10.915",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:56:10.920",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:56:10.920",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:56:10.923",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/limiting.com.tailen.microservice.controller.LimitingController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:56:10.923",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/limiting.com.tailen.microservice.controller.LimitingController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:56:11.097",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:56:11.107",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was 限流测试"
                }{
                "timestamp":"2019-07-03 10:56:12.207",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4: startup date [Wed Jul 03 10:56:06 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:56:12.221",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:56:12.369",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:56:12.369",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:56:12.393",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:56:12.446",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:56:13.075",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:56:13.076",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:56:13.078",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:56:13.078",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:56:13.248",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-03 10:56:13.429",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-03 10:56:13.437",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:56:13.439",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:56:13.439",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:56:13.439",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:56:13.440",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:56:13.441",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:56:13.443",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-03 10:56:13.454",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-03 10:56:13.463",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-03 10:56:13.468",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-03 10:56:13.476",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=ec2cc4,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-03 10:56:13.481",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-03 10:56:13.730",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:56:13.737",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-03 10:56:13.769",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-03 10:56:13.911",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:56:13.911",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:56:13.972",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:56:13.972",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:56:14.086",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 10:56:14.095",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-03 10:56:14.095",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-03 10:56:14.095",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-03 10:56:14.095",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-03 10:56:14.095",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-03 10:56:14.095",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-03 10:56:14.095",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-03 10:56:14.208",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-03 10:56:14.210",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-03 10:56:14.213",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-03 10:56:14.217",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562122574217 with initial instances count: 4"
                }{
                "timestamp":"2019-07-03 10:56:14.367",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application limiting with eureka with status UP"
                }{
                "timestamp":"2019-07-03 10:56:14.368",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122574368, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-03 10:56:14.372",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103: registering service..."
                }{
                "timestamp":"2019-07-03 10:56:14.397",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:56:14.482",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1103 (http)"
                }{
                "timestamp":"2019-07-03 10:56:14.484",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1103"
                }{
                "timestamp":"2019-07-03 10:56:14.490",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "main",
                "class": "c.t.m.LimitingServiceAApplication",
                "message": "Started LimitingServiceAApplication in 28.816 seconds (JVM running for 34.432)"
                }{
                "timestamp":"2019-07-03 10:56:48.269",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "http-nio-1103-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-07-03 10:56:48.269",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-07-03 10:56:48.304",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "http-nio-1103-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms"
                }{
                "timestamp":"2019-07-03 10:56:54.968",
                "level": "INFO",
                "service": "limiting",
                "trace": "c8014dc9d0b93010",
                "span": "c8014dc9d0b93010",
                "pid": "1517",
                "thread": "http-nio-1103-exec-6",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "开始执行LimitingController#add方法，入参为[3, 3]"
                }{
                "timestamp":"2019-07-03 10:56:54.970",
                "level": "INFO",
                "service": "limiting",
                "trace": "c8014dc9d0b93010",
                "span": "c8014dc9d0b93010",
                "pid": "1517",
                "thread": "http-nio-1103-exec-6",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "Limiting service......"
                }{
                "timestamp":"2019-07-03 10:56:55.062",
                "level": "INFO",
                "service": "limiting",
                "trace": "c8014dc9d0b93010",
                "span": "c8014dc9d0b93010",
                "pid": "1517",
                "thread": "hystrix-feign-service-a-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5c2e2e17: startup date [Wed Jul 03 10:56:55 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4"
                }{
                "timestamp":"2019-07-03 10:56:55.089",
                "level": "INFO",
                "service": "limiting",
                "trace": "c8014dc9d0b93010",
                "span": "c8014dc9d0b93010",
                "pid": "1517",
                "thread": "hystrix-feign-service-a-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:56:55.165",
                "level": "INFO",
                "service": "limiting",
                "trace": "c8014dc9d0b93010",
                "span": "c8014dc9d0b93010",
                "pid": "1517",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-a.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-07-03 10:56:55.176",
                "level": "INFO",
                "service": "limiting",
                "trace": "c8014dc9d0b93010",
                "span": "c8014dc9d0b93010",
                "pid": "1517",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-a"
                }{
                "timestamp":"2019-07-03 10:56:55.196",
                "level": "INFO",
                "service": "limiting",
                "trace": "c8014dc9d0b93010",
                "span": "c8014dc9d0b93010",
                "pid": "1517",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-a instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-a,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-07-03 10:56:55.199",
                "level": "INFO",
                "service": "limiting",
                "trace": "c8014dc9d0b93010",
                "span": "c8014dc9d0b93010",
                "pid": "1517",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-07-03 10:56:55.213",
                "level": "INFO",
                "service": "limiting",
                "trace": "c8014dc9d0b93010",
                "span": "c8014dc9d0b93010",
                "pid": "1517",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-a.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-07-03 10:56:55.214",
                "level": "INFO",
                "service": "limiting",
                "trace": "c8014dc9d0b93010",
                "span": "c8014dc9d0b93010",
                "pid": "1517",
                "thread": "hystrix-feign-service-a-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-a initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-a,current list of Servers=[10.0.1.31:1100],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.0.1.31:1100;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@60bed8bf"
                }{
                "timestamp":"2019-07-03 10:56:55.424",
                "level": "INFO",
                "service": "limiting",
                "trace": "c8014dc9d0b93010",
                "span": "c8014dc9d0b93010",
                "pid": "1517",
                "thread": "http-nio-1103-exec-6",
                "class": "c.t.m.config.limiting.LimitingConfig",
                "message": "执行LimitingController#add方法结束，入参为[3, 3],结果为6"
                }{
                "timestamp":"2019-07-03 10:56:56.204",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "PollingServerListUpdater-0",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-a.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-07-03 11:01:14.104",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:06:14.118",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:11:14.128",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:16:14.138",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:22:23.076",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:27:23.088",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:32:23.098",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:37:23.117",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:42:23.127",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:47:23.134",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:52:23.140",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:57:23.149",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 12:02:23.157",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 12:57:12.110",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 12:59:55.617",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4: startup date [Wed Jul 03 10:56:06 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 12:59:55.621",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-74",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-07-03 12:59:55.628",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application limiting with eureka with status DOWN"
                }{
                "timestamp":"2019-07-03 12:59:55.628",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562129995628, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-03 12:59:55.629",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562129995629, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-07-03 12:59:55.630",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103: registering service..."
                }{
                "timestamp":"2019-07-03 12:59:55.630",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-03 12:59:55.633",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-03 12:59:55.647",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
{
                "timestamp":"2019-07-03 12:59:55.648",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-03 12:59:55.647",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$85a68e98.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 45 common frames omitted
{
                "timestamp":"2019-07-03 12:59:55.651",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-07-03 12:59:55.654",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-03 12:59:55.653",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-03 12:59:55.659",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$85a68e98.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
{
                "timestamp":"2019-07-03 12:59:55.660",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-03 12:59:55.663",
                "level": "ERROR",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - de-registration failedCannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$85a68e98.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-03 12:59:55.665",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_LIMITING/10.0.1.31:limiting:1103 - registration failed Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 12:59:55.666",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 12:59:55.667",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-03 12:59:55.682",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-03 12:59:55.697",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-03 12:59:55.698",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-03 12:59:55.700",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5c2e2e17: startup date [Wed Jul 03 10:56:55 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4"
                }{
                "timestamp":"2019-07-03 12:59:55.701",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application limiting with eureka with status DOWN"
                }{
                "timestamp":"2019-07-03 12:59:55.705",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-feign-service-a"
                }{
                "timestamp":"2019-07-03 12:59:55.707",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-03 12:59:55.733",
                "level": "INFO",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@37a9b687: startup date [Wed Jul 03 10:56:08 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ec2cc4"
                }{
                "timestamp":"2019-07-03 12:59:55.735",
                "level": "WARN",
                "service": "limiting",
                "trace": "",
                "span": "",
                "pid": "1517",
                "thread": "Thread-63",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
