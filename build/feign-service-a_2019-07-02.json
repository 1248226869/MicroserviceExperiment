{
                "timestamp":"2019-07-02 17:43:49.909",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-02 17:43:49.920",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2cc639: startup date [Tue Jul 02 17:43:49 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-07-02 17:43:50.553",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-02 17:43:50.752",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=7b5b5347-4a6a-3c58-8fa9-46ca70033069"
                }{
                "timestamp":"2019-07-02 17:43:50.771",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 17:43:50.798",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:43:50.826",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$9fb043e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:43:50.878",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$64d3ec51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:43:51.004",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:43:51.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$949b4c60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:43:51.056",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e88a91c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:43:51.075",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a2007ee5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:43:51.094",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$4a52523e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:43:51.467",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1100 (http)"
                }{
                "timestamp":"2019-07-02 17:43:51.472",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-02 17:43:51.473",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-02 17:43:51.538",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-02 17:43:51.538",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1618 ms"
                }{
                "timestamp":"2019-07-02 17:43:52.147",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:43:52.147",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:43:52.147",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:43:52.147",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:43:52.147",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:43:52.148",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:43:52.148",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:43:52.148",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:43:52.148",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-02 17:43:52.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41f4039e: startup date [Tue Jul 02 17:43:52 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2cc639"
                }{
                "timestamp":"2019-07-02 17:43:52.237",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 17:43:52.741",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-02 17:43:52.742",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-02 17:43:52.744",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped."
                }{
                "timestamp":"2019-07-02 17:43:52.744",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feignContrller': Unsatisfied dependency expressed through field 'feignServiceB'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.tailen.microservice.manager.FeignServiceB': FactoryBean threw exception on object creation; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped."
                }{
                "timestamp":"2019-07-02 17:43:52.745",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Stopping service [Tomcat]"
                }{
                "timestamp":"2019-07-02 17:43:52.757",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.s.b.a.l.AutoConfigurationReportLoggingInitializer",
                "message": "

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled."
                }{
                "timestamp":"2019-07-02 17:43:52.761",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12165",
                "thread": "main",
                "class": "o.springframework.boot.SpringApplication",
                "message": "Application startup failed"
                }org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feignContrller': Unsatisfied dependency expressed through field 'feignServiceB'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.tailen.microservice.manager.FeignServiceB': FactoryBean threw exception on object creation; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.FeignServiceAApplication.main(FeignServiceAApplication.java:22)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.tailen.microservice.manager.FeignServiceB': FactoryBean threw exception on object creation; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped.
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1634)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1316)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1282)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1101)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:235)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:192)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:128)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:116)
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:85)
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:121)
	at org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignContext.getInstance(TraceFeignContext.java:28)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.get(FeignClientFactoryBean.java:127)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.feign(FeignClientFactoryBean.java:84)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:155)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 28 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 53 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1316)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1282)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1180)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 67 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.assertUniqueMethodMapping(AbstractHandlerMethodMapping.java:576)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:540)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:264)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:250)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:214)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:184)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 81 common frames omitted
{
                "timestamp":"2019-07-02 17:44:17.343",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-02 17:44:17.357",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2cc639: startup date [Tue Jul 02 17:44:17 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-07-02 17:44:17.987",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-02 17:44:18.170",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=7b5b5347-4a6a-3c58-8fa9-46ca70033069"
                }{
                "timestamp":"2019-07-02 17:44:18.189",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 17:44:18.221",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:44:18.248",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$9fb043e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:44:18.308",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$64d3ec51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:44:18.428",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:44:18.446",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$949b4c60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:44:18.491",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e88a91c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:44:18.517",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a2007ee5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:44:18.538",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$4a52523e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:44:18.900",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1100 (http)"
                }{
                "timestamp":"2019-07-02 17:44:18.907",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-02 17:44:18.907",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-02 17:44:18.968",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-02 17:44:18.968",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1611 ms"
                }{
                "timestamp":"2019-07-02 17:44:19.555",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:44:19.577",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:44:19.577",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:44:19.577",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:44:19.578",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:44:19.578",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:44:19.578",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:44:19.578",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:44:19.578",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-02 17:44:19.662",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41f4039e: startup date [Tue Jul 02 17:44:19 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2cc639"
                }{
                "timestamp":"2019-07-02 17:44:19.672",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 17:44:20.179",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-02 17:44:20.180",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-02 17:44:20.181",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped."
                }{
                "timestamp":"2019-07-02 17:44:20.182",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feignContrller': Unsatisfied dependency expressed through field 'feignServiceB'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.tailen.microservice.manager.FeignServiceB': FactoryBean threw exception on object creation; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped."
                }{
                "timestamp":"2019-07-02 17:44:20.183",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Stopping service [Tomcat]"
                }{
                "timestamp":"2019-07-02 17:44:20.194",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.s.b.a.l.AutoConfigurationReportLoggingInitializer",
                "message": "

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled."
                }{
                "timestamp":"2019-07-02 17:44:20.198",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12174",
                "thread": "main",
                "class": "o.springframework.boot.SpringApplication",
                "message": "Application startup failed"
                }org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feignContrller': Unsatisfied dependency expressed through field 'feignServiceB'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.tailen.microservice.manager.FeignServiceB': FactoryBean threw exception on object creation; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.FeignServiceAApplication.main(FeignServiceAApplication.java:22)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.tailen.microservice.manager.FeignServiceB': FactoryBean threw exception on object creation; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped.
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1634)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1316)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1282)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1101)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:235)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:192)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:128)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:883)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:116)
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:85)
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:121)
	at org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignContext.getInstance(TraceFeignContext.java:28)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.get(FeignClientFactoryBean.java:127)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.feign(FeignClientFactoryBean.java:84)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:155)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 28 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/Users/zhaotailin/Public/repository/io/springfox/springfox-spring-web/2.2.2/springfox-spring-web-2.2.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 53 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1316)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1282)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1180)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 67 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'feignController' method 
public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)
to {[/api/add],methods=[GET]}: There is already 'feignContrller' bean method
public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.assertUniqueMethodMapping(AbstractHandlerMethodMapping.java:576)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:540)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:264)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:250)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:214)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:184)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 81 common frames omitted
{
                "timestamp":"2019-07-02 17:49:08.641",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-02 17:49:08.651",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2cc639: startup date [Tue Jul 02 17:49:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-07-02 17:49:09.240",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-02 17:49:09.407",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=66e46e80-df35-313b-9e14-d69c1bc19ad7"
                }{
                "timestamp":"2019-07-02 17:49:09.419",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 17:49:09.448",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:49:09.478",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$9fb043e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:49:09.530",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$64d3ec51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:49:09.639",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:49:09.654",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$949b4c60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:49:09.690",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e88a91c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:49:09.706",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a2007ee5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:49:09.726",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$4a52523e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 17:49:10.068",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1100 (http)"
                }{
                "timestamp":"2019-07-02 17:49:10.073",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-02 17:49:10.074",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-02 17:49:10.132",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-02 17:49:10.132",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1481 ms"
                }{
                "timestamp":"2019-07-02 17:49:10.690",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:49:10.690",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:49:10.690",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:49:10.690",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:49:10.691",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:49:10.691",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:49:10.691",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:49:10.691",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 17:49:10.691",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-02 17:49:10.763",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7fedb795: startup date [Tue Jul 02 17:49:10 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2cc639"
                }{
                "timestamp":"2019-07-02 17:49:10.772",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 17:49:11.244",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-02 17:49:11.245",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.FeignController.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-02 17:49:11.246",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:49:11.250",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-02 17:49:11.250",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-02 17:49:11.251",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-02 17:49:11.253",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-02 17:49:11.254",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-02 17:49:12.008",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:49:12.008",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.009",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:49:12.010",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-02 17:49:12.010",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:49:12.010",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.011",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.011",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.011",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:49:12.012",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.013",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-02 17:49:12.014",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.014",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.015",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.015",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 17:49:12.016",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-02 17:49:12.016",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.016",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.017",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.017",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-02 17:49:12.017",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.018",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-02 17:49:12.019",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-02 17:49:12.019",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 17:49:12.019",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 17:49:12.325",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-02 17:49:12.361",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-02 17:49:12.376",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-02 17:49:12.378",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-02 17:49:12.380",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-controller', position=0, controller=com.tailen.microservice.controller.FeignController}]] "
                }{
                "timestamp":"2019-07-02 17:49:12.380",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-02 17:49:12.380",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-controller', position=0, controller=com.tailen.microservice.controller.FeignController}]] "
                }{
                "timestamp":"2019-07-02 17:49:12.385",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-controller Description: feign-controller Position: 0"
                }{
                "timestamp":"2019-07-02 17:49:12.408",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 17:49:12.408",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 17:49:12.413",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 17:49:12.413",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 17:49:12.416",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.controller.FeignController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 17:49:12.416",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.controller.FeignController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 17:49:12.550",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-02 17:49:12.562",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-02 17:49:12.584",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 17:49:12.585",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 17:49:12.585",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 17:49:12.585",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 17:49:12.585",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.controller.FeignController.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 17:49:12.585",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.controller.FeignController.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 17:49:12.586",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-02 17:49:12.587",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-02 17:49:13.390",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2cc639: startup date [Tue Jul 02 17:49:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-07-02 17:49:13.398",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 17:49:13.511",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 17:49:13.512",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 17:49:13.535",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 17:49:13.575",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 17:49:14.123",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 17:49:14.123",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 17:49:14.126",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 17:49:14.126",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 17:49:14.314",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-02 17:49:14.443",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-02 17:49:14.451",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 17:49:14.454",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 17:49:14.454",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 17:49:14.454",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 17:49:14.455",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 17:49:14.456",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 17:49:14.458",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-02 17:49:14.467",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-02 17:49:14.475",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-02 17:49:14.480",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-02 17:49:14.486",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4c2cc639,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-02 17:49:14.490",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-02 17:49:14.678",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-02 17:49:14.684",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-02 17:49:14.715",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-02 17:49:14.872",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 17:49:14.872",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 17:49:14.946",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 17:49:14.946",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 17:49:15.051",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 17:49:15.059",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-02 17:49:15.059",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-02 17:49:15.059",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-02 17:49:15.059",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-02 17:49:15.059",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-02 17:49:15.060",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-02 17:49:15.060",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-02 17:49:15.144",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-02 17:49:15.145",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-02 17:49:15.146",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-02 17:49:15.149",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562060955148 with initial instances count: 1"
                }{
                "timestamp":"2019-07-02 17:49:15.243",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-07-02 17:49:15.243",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562060955243, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-02 17:49:15.250",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-07-02 17:49:15.291",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - registration status: 204"
                }{
                "timestamp":"2019-07-02 17:49:15.358",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1100 (http)"
                }{
                "timestamp":"2019-07-02 17:49:15.358",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1100"
                }{
                "timestamp":"2019-07-02 17:49:15.366",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 7.852 seconds (JVM running for 8.418)"
                }{
                "timestamp":"2019-07-02 17:49:30.429",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "http-nio-1100-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-07-02 17:49:30.429",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "http-nio-1100-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-07-02 17:49:30.463",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "http-nio-1100-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms"
                }{
                "timestamp":"2019-07-02 17:49:40.156",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "79bf1337754515c8",
                "span": "79bf1337754515c8",
                "pid": "12249",
                "thread": "http-nio-1100-exec-10",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-07-02 17:49:40.343",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "79bf1337754515c8",
                "span": "79bf1337754515c8",
                "pid": "12249",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b80d484: startup date [Tue Jul 02 17:49:40 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2cc639"
                }{
                "timestamp":"2019-07-02 17:49:40.376",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "79bf1337754515c8",
                "span": "79bf1337754515c8",
                "pid": "12249",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 17:49:40.458",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "79bf1337754515c8",
                "span": "79bf1337754515c8",
                "pid": "12249",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-07-02 17:49:40.470",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "79bf1337754515c8",
                "span": "79bf1337754515c8",
                "pid": "12249",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-07-02 17:49:40.482",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "79bf1337754515c8",
                "span": "79bf1337754515c8",
                "pid": "12249",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-b instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-07-02 17:49:40.485",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "79bf1337754515c8",
                "span": "79bf1337754515c8",
                "pid": "12249",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-07-02 17:49:40.497",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "79bf1337754515c8",
                "span": "79bf1337754515c8",
                "pid": "12249",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-07-02 17:49:40.498",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "79bf1337754515c8",
                "span": "79bf1337754515c8",
                "pid": "12249",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-b initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[10.0.1.31:1101],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.0.1.31:1101;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@43eba6b3"
                }{
                "timestamp":"2019-07-02 17:49:41.490",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "PollingServerListUpdater-0",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-07-02 17:54:15.068",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 17:59:15.071",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 18:04:15.067",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 18:09:15.079",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 18:14:15.081",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 18:19:15.080",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 18:24:15.087",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 18:29:15.093",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 18:32:11.050",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "db1d08ef24607a85",
                "span": "b6b97753bfeacdc9",
                "pid": "12249",
                "thread": "http-nio-1100-exec-8",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a provide service:add"
                }{
                "timestamp":"2019-07-02 18:32:11.051",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "db1d08ef24607a85",
                "span": "b6b97753bfeacdc9",
                "pid": "12249",
                "thread": "http-nio-1100-exec-8",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a : add method numA is 12 ;numB is 12 "
                }{
                "timestamp":"2019-07-02 18:33:52.537",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-32",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-07-02 18:33:52.537",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2cc639: startup date [Tue Jul 02 17:49:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-07-02 18:33:52.543",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-07-02 18:33:52.543",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562063632543, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-02 18:33:52.543",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562063632543, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-07-02 18:33:52.543",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-02 18:33:52.543",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-07-02 18:33:52.544",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-02 18:33:52.548",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - deregister  status: 200"
                }{
                "timestamp":"2019-07-02 18:33:52.548",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - registration status: 204"
                }{
                "timestamp":"2019-07-02 18:33:52.550",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-02 18:33:52.556",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-02 18:33:52.560",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-02 18:33:52.560",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-02 18:33:52.561",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b80d484: startup date [Tue Jul 02 17:49:40 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2cc639"
                }{
                "timestamp":"2019-07-02 18:33:52.561",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-07-02 18:33:52.562",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-07-02 18:33:52.564",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-02 18:33:52.567",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@7fedb795: startup date [Tue Jul 02 17:49:10 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2cc639"
                }{
                "timestamp":"2019-07-02 18:33:52.569",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12249",
                "thread": "Thread-21",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-02 18:34:19.456",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-02 18:34:19.469",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f6f61c8: startup date [Tue Jul 02 18:34:19 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-07-02 18:34:20.293",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-02 18:34:20.530",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=66e46e80-df35-313b-9e14-d69c1bc19ad7"
                }{
                "timestamp":"2019-07-02 18:34:20.545",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 18:34:20.577",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 18:34:20.610",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$66c691f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 18:34:20.674",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$2bea3a67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 18:34:20.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 18:34:20.838",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5bb19a76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 18:34:20.887",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$459ef732] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 18:34:20.906",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6916ccfb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 18:34:20.927",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$1168a054] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-02 18:34:21.372",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1100 (http)"
                }{
                "timestamp":"2019-07-02 18:34:21.380",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-02 18:34:21.381",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-02 18:34:21.448",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-02 18:34:21.448",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1979 ms"
                }{
                "timestamp":"2019-07-02 18:34:22.058",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 18:34:22.058",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 18:34:22.058",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 18:34:22.058",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 18:34:22.058",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 18:34:22.059",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 18:34:22.059",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 18:34:22.059",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-02 18:34:22.059",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-02 18:34:22.143",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6ecc02bb: startup date [Tue Jul 02 18:34:22 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f6f61c8"
                }{
                "timestamp":"2019-07-02 18:34:22.155",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-02 18:34:22.713",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-02 18:34:22.714",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.FeignController.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-02 18:34:22.715",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-02 18:34:22.717",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-02 18:34:22.718",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-02 18:34:22.718",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-02 18:34:22.720",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-02 18:34:22.720",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-02 18:34:23.592",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.593",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.594",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-02 18:34:23.594",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.595",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.596",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.596",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.597",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.598",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-02 18:34:23.598",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-02 18:34:23.600",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 18:34:23.600",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.600",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 18:34:23.600",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-02 18:34:23.601",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.601",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.602",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-02 18:34:23.602",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.602",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.603",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-02 18:34:23.603",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.604",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-02 18:34:23.605",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-02 18:34:23.606",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-02 18:34:23.606",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.607",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-02 18:34:23.607",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.607",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-02 18:34:23.972",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-02 18:34:24.013",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-02 18:34:24.031",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-02 18:34:24.034",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-02 18:34:24.036",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-controller', position=0, controller=com.tailen.microservice.controller.FeignController}]] "
                }{
                "timestamp":"2019-07-02 18:34:24.036",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-02 18:34:24.037",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-controller', position=0, controller=com.tailen.microservice.controller.FeignController}]] "
                }{
                "timestamp":"2019-07-02 18:34:24.043",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-controller Description: feign-controller Position: 0"
                }{
                "timestamp":"2019-07-02 18:34:24.069",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 18:34:24.070",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 18:34:24.075",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 18:34:24.075",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 18:34:24.079",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.controller.FeignController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 18:34:24.079",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.controller.FeignController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 18:34:24.271",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-02 18:34:24.279",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-02 18:34:24.298",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 18:34:24.299",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 18:34:24.299",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 18:34:24.299",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-02 18:34:24.299",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.controller.FeignController.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 18:34:24.299",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.controller.FeignController.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-02 18:34:24.301",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-02 18:34:24.302",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-02 18:34:25.280",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f6f61c8: startup date [Tue Jul 02 18:34:19 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-07-02 18:34:25.299",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 18:34:25.422",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 18:34:25.422",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 18:34:25.445",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-02 18:34:25.563",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-02 18:34:26.156",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 18:34:26.162",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 18:34:26.166",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-02 18:34:26.166",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-02 18:34:26.415",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-02 18:34:26.538",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-02 18:34:26.544",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 18:34:26.546",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 18:34:26.546",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 18:34:26.547",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 18:34:26.547",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 18:34:26.548",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-02 18:34:26.550",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-02 18:34:26.559",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-02 18:34:26.567",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-02 18:34:26.572",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-02 18:34:26.577",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7f6f61c8,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-02 18:34:26.581",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-02 18:34:26.791",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-02 18:34:26.796",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-02 18:34:26.819",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-02 18:34:26.948",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 18:34:26.948",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-02 18:34:27.002",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 18:34:27.002",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-02 18:34:27.107",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 18:34:27.114",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-02 18:34:27.114",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-02 18:34:27.115",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-02 18:34:27.115",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-02 18:34:27.115",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-02 18:34:27.115",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-02 18:34:27.115",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-02 18:34:27.194",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-02 18:34:27.196",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-02 18:34:27.197",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-02 18:34:27.199",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562063667198 with initial instances count: 3"
                }{
                "timestamp":"2019-07-02 18:34:27.285",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-07-02 18:34:27.285",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562063667285, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-02 18:34:27.290",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-07-02 18:34:27.326",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - registration status: 204"
                }{
                "timestamp":"2019-07-02 18:34:27.387",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1100 (http)"
                }{
                "timestamp":"2019-07-02 18:34:27.388",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1100"
                }{
                "timestamp":"2019-07-02 18:34:27.393",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 9.415 seconds (JVM running for 10.159)"
                }{
                "timestamp":"2019-07-02 18:36:15.092",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "http-nio-1100-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-07-02 18:36:15.092",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "http-nio-1100-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-07-02 18:36:15.125",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "http-nio-1100-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms"
                }{
                "timestamp":"2019-07-02 18:36:15.149",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "a9ae1918bfbf8f7d",
                "span": "fad8b25a8a81bd46",
                "pid": "12634",
                "thread": "http-nio-1100-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a provide service:add"
                }{
                "timestamp":"2019-07-02 18:36:15.149",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "a9ae1918bfbf8f7d",
                "span": "fad8b25a8a81bd46",
                "pid": "12634",
                "thread": "http-nio-1100-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a : add method numA is 12 ;numB is 12 "
                }{
                "timestamp":"2019-07-02 18:36:15.160",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "http-nio-1100-exec-1",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause"
                }java.lang.ArithmeticException: / by zero
	at com.tailen.microservice.service.impl.DemoServiceImpl.add(DemoServiceImpl.java:28)
	at com.tailen.microservice.controller.FeignController.add(FeignController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.cloud.sleuth.instrument.web.TraceFilter.doFilter(TraceFilter.java:153)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-02 18:39:27.122",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 18:44:27.132",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 18:51:27.063",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 18:56:27.067",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 19:01:27.080",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 19:06:27.078",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 19:11:27.082",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 19:16:27.114",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 19:29:43.722",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 19:34:43.737",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 19:39:43.754",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 19:44:43.772",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 19:49:43.780",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 19:54:43.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 19:59:43.825",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 20:04:43.832",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 20:09:43.837",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 20:14:43.852",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 20:19:43.860",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 20:24:43.870",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-02 20:29:35.419",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f6f61c8: startup date [Tue Jul 02 18:34:19 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-07-02 20:29:35.423",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-07-02 20:29:35.423",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562070575423, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-02 20:29:35.423",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562070575423, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-07-02 20:29:35.424",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-07-02 20:29:35.424",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-02 20:29:35.425",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-02 20:29:35.428",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Broken pipe (Write failed)"
                }{
                "timestamp":"2019-07-02 20:29:35.428",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-07-02 20:29:35.432",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Connection reset"
                }{
                "timestamp":"2019-07-02 20:29:35.432",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-07-02 20:29:35.433",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: org.apache.http.client.ClientProtocolException
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.client.ClientProtocolException: null
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:839)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
Caused by: org.apache.http.client.NonRepeatableRequestException: Cannot retry request with a non-repeatable request entity.  The cause lists the reason the original request failed.
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:658)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	... 32 common frames omitted
Caused by: java.net.SocketException: Broken pipe (Write failed)
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer(AbstractSessionOutputBuffer.java:157)
	at org.apache.http.impl.io.AbstractSessionOutputBuffer.flush(AbstractSessionOutputBuffer.java:164)
	at org.apache.http.impl.io.ChunkedOutputStream.flush(ChunkedOutputStream.java:192)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1054)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:2495)
	at com.fasterxml.jackson.core.base.GeneratorBase.writeObject(GeneratorBase.java:378)
	at com.fasterxml.jackson.core.JsonGenerator.writeObjectField(JsonGenerator.java:1662)
	at com.netflix.discovery.converters.EurekaJacksonCodec$InstanceInfoSerializer.serialize(EurekaJacksonCodec.java:358)
	at com.netflix.discovery.converters.EurekaJacksonCodec$InstanceInfoSerializer.serialize(EurekaJacksonCodec.java:316)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:416)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1425)
	at com.fasterxml.jackson.databind.ObjectWriter._configAndWriteValue(ObjectWriter.java:1158)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:988)
	at com.netflix.discovery.converters.EurekaJacksonCodec.writeTo(EurekaJacksonCodec.java:194)
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.encode(CodecWrappers.java:304)
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.writeTo(DiscoveryJerseyProvider.java:135)
	at com.sun.jersey.api.client.RequestWriter$RequestEntityWriterImpl.writeRequestEntity(RequestWriter.java:231)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler$2.writeTo(ApacheHttpClient4Handler.java:289)
	at org.apache.http.entity.HttpEntityWrapper.writeTo(HttpEntityWrapper.java:94)
	at org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper.writeTo(EntityEnclosingRequestWrapper.java:110)
	at org.apache.http.impl.entity.EntitySerializer.serialize(EntitySerializer.java:118)
	at org.apache.http.impl.AbstractHttpClientConnection.sendRequestEntity(AbstractHttpClientConnection.java:263)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.sendRequestEntity(AbstractClientConnAdapter.java:239)
	at org.apache.http.protocol.HttpRequestExecutor.doSendRequest(HttpRequestExecutor.java:238)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	... 34 common frames omitted
	Suppressed: java.net.SocketException: Broken pipe (Write failed)
		at java.net.SocketOutputStream.socketWrite0(Native Method)
		at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
		at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
		at org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer(AbstractSessionOutputBuffer.java:157)
		at org.apache.http.impl.io.AbstractSessionOutputBuffer.flush(AbstractSessionOutputBuffer.java:164)
		at org.apache.http.impl.io.ChunkedOutputStream.close(ChunkedOutputStream.java:203)
		at com.fasterxml.jackson.core.json.UTF8JsonGenerator.close(UTF8JsonGenerator.java:1092)
		at com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIAE(ClassUtil.java:499)
		at com.fasterxml.jackson.databind.ObjectWriter._configAndWriteValue(ObjectWriter.java:1160)
		... 48 common frames omitted
{
                "timestamp":"2019-07-02 20:29:35.434",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: org.apache.http.client.ClientProtocolException"
                }{
                "timestamp":"2019-07-02 20:29:35.462",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Connection reset"
                }{
                "timestamp":"2019-07-02 20:29:35.463",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-07-02 20:29:35.463",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.SocketException: Connection reset
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:210)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:158)
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:271)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:281)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-07-02 20:29:35.468",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.SocketException: Connection reset"
                }{
                "timestamp":"2019-07-02 20:29:35.466",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$786d8bd8.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:673)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 45 common frames omitted
{
                "timestamp":"2019-07-02 20:29:35.468",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 20:29:35.475",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - registration failed Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-02 20:29:35.476",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-02 20:29:35.476",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$786d8bd8.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
{
                "timestamp":"2019-07-02 20:29:35.477",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-02 20:29:35.478",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - de-registration failedCannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$786d8bd8.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-02 20:29:35.488",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-02 20:29:35.520",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-02 20:29:35.527",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-02 20:29:35.528",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-02 20:29:35.534",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6ecc02bb: startup date [Tue Jul 02 18:34:22 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f6f61c8"
                }{
                "timestamp":"2019-07-02 20:29:35.536",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "12634",
                "thread": "Thread-24",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
