{
                "timestamp":"2021-08-05 09:32:55.423",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.c.sharding.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2021-08-05 09:32:56.404",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.boot.actuate.endpoint.EndpointId",
                "message": "Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format."
                }{
                "timestamp":"2021-08-05 09:32:56.585",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=4f4f7a14-a886-3898-8cac-dbeb2e3f0ebe"
                }{
                "timestamp":"2021-08-05 09:32:56.632",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.cxytiandi.sharding.manager.FeignServiceB' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2021-08-05 09:32:56.634",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.cxytiandi.sharding.manager.FeignServiceB1' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2021-08-05 09:32:56.869",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2c4dbf14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2021-08-05 09:32:57.109",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$abce0c46] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2021-08-05 09:32:57.121",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4867c211] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2021-08-05 09:32:57.579",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.b.w.embedded.tomcat.TomcatWebServer",
                "message": "Tomcat initialized with port(s): 1100 (http)"
                }{
                "timestamp":"2021-08-05 09:32:57.602",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2021-08-05 09:32:57.602",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet engine: [Apache Tomcat/9.0.21]"
                }{
                "timestamp":"2021-08-05 09:32:57.705",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2021-08-05 09:32:57.705",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 2260 ms"
                }{
                "timestamp":"2021-08-05 09:32:57.817",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2021-08-05 09:32:57.817",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2021-08-05 09:32:57.822",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.netflix.config.DynamicPropertyFactory",
                "message": "DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@8e25d3f"
                }{
                "timestamp":"2021-08-05 09:32:58.515",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "com.alibaba.druid.pool.DruidDataSource",
                "message": "{dataSource-1} inited"
                }{
                "timestamp":"2021-08-05 09:33:00.170",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.cloud.commons.util.InetUtils",
                "message": "Cannot determine local hostname"
                }{
                "timestamp":"2021-08-05 09:33:00.899",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.b.a.e.web.EndpointLinksResolver",
                "message": "Exposing 2 endpoint(s) beneath base path '/actuator'"
                }{
                "timestamp":"2021-08-05 09:33:01.063",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2021-08-05 09:33:01.100",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2021-08-05 09:33:01.127",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2021-08-05 09:33:02.232",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.cloud.commons.util.InetUtils",
                "message": "Cannot determine local hostname"
                }{
                "timestamp":"2021-08-05 09:33:02.581",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2021-08-05 09:33:02.581",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2021-08-05 09:33:02.777",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskExecutor",
                "message": "Initializing ExecutorService 'applicationTaskExecutor'"
                }{
                "timestamp":"2021-08-05 09:33:03.534",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2021-08-05 09:33:03.572",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2021-08-05 09:33:03.627",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2021-08-05 09:33:03.627",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2021-08-05 09:33:03.721",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2021-08-05 09:33:03.721",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2021-08-05 09:33:03.872",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 09:33:03.885",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2021-08-05 09:33:03.885",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2021-08-05 09:33:03.886",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2021-08-05 09:33:03.886",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2021-08-05 09:33:03.886",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2021-08-05 09:33:03.886",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2021-08-05 09:33:03.886",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2021-08-05 09:33:09.179",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2021-08-05 09:33:09.181",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2021-08-05 09:33:09.183",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2021-08-05 09:33:09.188",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1628127189187 with initial instances count: 0"
                }{
                "timestamp":"2021-08-05 09:33:09.197",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application FEIGN-SERVICE-A with eureka with status UP"
                }{
                "timestamp":"2021-08-05 09:33:09.198",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1628127189198, current=UP, previous=STARTING]"
                }{
                "timestamp":"2021-08-05 09:33:09.199",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "Ignoring onDemand update due to rate limiter"
                }{
                "timestamp":"2021-08-05 09:33:09.272",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.b.w.embedded.tomcat.TomcatWebServer",
                "message": "Tomcat started on port(s): 1100 (http) with context path ''"
                }{
                "timestamp":"2021-08-05 09:33:09.273",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1100"
                }{
                "timestamp":"2021-08-05 09:33:09.277",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "main",
                "class": "c.c.sharding.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 36.945 seconds (JVM running for 43.154)"
                }{
                "timestamp":"2021-08-05 09:33:09.635",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "RMI TCP Connection(49)-10.11.12.123",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring DispatcherServlet 'dispatcherServlet'"
                }{
                "timestamp":"2021-08-05 09:33:09.636",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "RMI TCP Connection(49)-10.11.12.123",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "Initializing Servlet 'dispatcherServlet'"
                }{
                "timestamp":"2021-08-05 09:33:09.651",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "RMI TCP Connection(49)-10.11.12.123",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "Completed initialization in 15 ms"
                }{
                "timestamp":"2021-08-05 09:33:10.158",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/localhost:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2021-08-05 09:33:10.296",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/localhost:feign-service-a:1100 - registration status: 204"
                }{
                "timestamp":"2021-08-05 09:33:39.185",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2021-08-05 09:33:39.190",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2021-08-05 09:33:39.190",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2021-08-05 09:33:39.191",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2021-08-05 09:33:39.191",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2021-08-05 09:33:39.191",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: false"
                }{
                "timestamp":"2021-08-05 09:33:39.191",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2021-08-05 09:33:39.230",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2021-08-05 09:38:03.897",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 09:43:03.904",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 09:48:03.916",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 09:53:03.922",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 09:58:03.933",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 10:03:03.947",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 10:08:03.957",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 10:13:03.969",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 10:18:03.984",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 10:23:45.481",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 10:28:45.496",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 10:33:45.504",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 10:38:45.514",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 10:43:45.517",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 10:48:45.527",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 10:53:45.532",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 10:58:45.543",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 11:03:45.552",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 11:08:45.557",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 11:13:45.567",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 11:18:45.577",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 11:23:45.590",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 11:28:45.595",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2021-08-05 11:30:01.489",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "Thread-79",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application FEIGN-SERVICE-A with eureka with status DOWN"
                }{
                "timestamp":"2021-08-05 11:30:01.489",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "Thread-79",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1628134201489, current=DOWN, previous=UP]"
                }{
                "timestamp":"2021-08-05 11:30:01.494",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1628134201494, current=UP, previous=DOWN]"
                }{
                "timestamp":"2021-08-05 11:30:01.494",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/localhost:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2021-08-05 11:30:01.514",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://server1:1000/eureka/}"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
{
                "timestamp":"2021-08-05 11:30:01.516",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2021-08-05 11:30:01.517",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://server1:1000/eureka/}"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2021-08-05 11:30:01.518",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2021-08-05 11:30:01.525",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "Thread-79",
                "class": "o.s.s.concurrent.ThreadPoolTaskExecutor",
                "message": "Shutting down ExecutorService 'applicationTaskExecutor'"
                }{
                "timestamp":"2021-08-05 11:30:01.525",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://server2:1001/eureka/}"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2021-08-05 11:30:01.526",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2021-08-05 11:30:01.527",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/localhost:feign-service-a:1100 - registration failed Retry limit reached; giving up on completing the request"
                }com.netflix.discovery.shared.transport.TransportException: Retry limit reached; giving up on completing the request
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:139)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2021-08-05 11:30:01.528",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Retry limit reached; giving up on completing the request
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:139)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2021-08-05 11:30:01.542",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/localhost:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2021-08-05 11:30:01.543",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://server1:1000/eureka/}"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2021-08-05 11:30:01.545",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2021-08-05 11:30:01.546",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://server2:1001/eureka/}"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2021-08-05 11:30:01.548",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2021-08-05 11:30:01.548",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/localhost:feign-service-a:1100 - registration failed Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2021-08-05 11:30:01.549",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2021-08-05 11:30:01.557",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "Thread-79",
                "class": "com.alibaba.druid.pool.DruidDataSource",
                "message": "{dataSource-1} closing ..."
                }{
                "timestamp":"2021-08-05 11:30:01.570",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "Thread-79",
                "class": "com.alibaba.druid.pool.DruidDataSource",
                "message": "{dataSource-1} closed"
                }{
                "timestamp":"2021-08-05 11:30:01.579",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "Thread-79",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2021-08-05 11:30:04.581",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "Thread-79",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2021-08-05 11:30:04.591",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "Thread-79",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://server1:1000/eureka/}"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1036)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 42 common frames omitted
{
                "timestamp":"2021-08-05 11:30:04.593",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "Thread-79",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2021-08-05 11:30:04.595",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "Thread-79",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://server2:1001/eureka/}"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1036)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 42 common frames omitted
{
                "timestamp":"2021-08-05 11:30:04.596",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "Thread-79",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2021-08-05 11:30:04.597",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "Thread-79",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/localhost:feign-service-a:1100 - de-registration failedCannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1036)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
{
                "timestamp":"2021-08-05 11:30:04.614",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1583",
                "thread": "Thread-79",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }