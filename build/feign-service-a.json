{
                "timestamp":"2019-07-03 10:35:02.598",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-03 10:35:02.618",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f6f61c8: startup date [Wed Jul 03 10:35:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-07-03 10:35:03.366",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-03 10:35:03.554",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=66e46e80-df35-313b-9e14-d69c1bc19ad7"
                }{
                "timestamp":"2019-07-03 10:35:03.571",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:35:03.601",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:35:03.632",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$66c691f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:35:03.696",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$2bea3a67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:35:03.828",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:35:03.851",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5bb19a76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:35:03.885",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$459ef732] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:35:03.901",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6916ccfb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:35:03.917",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$1168a054] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:35:04.280",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1100 (http)"
                }{
                "timestamp":"2019-07-03 10:35:04.287",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-03 10:35:04.288",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-03 10:35:04.352",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-03 10:35:04.353",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1735 ms"
                }{
                "timestamp":"2019-07-03 10:35:04.903",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:35:04.903",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:35:04.903",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:35:04.904",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:35:04.904",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:35:04.904",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:35:04.904",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:35:04.904",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:35:04.904",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-03 10:35:04.977",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@67bb4dcd: startup date [Wed Jul 03 10:35:04 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f6f61c8"
                }{
                "timestamp":"2019-07-03 10:35:04.987",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:35:05.432",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-03 10:35:05.433",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.FeignController.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-03 10:35:05.434",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:35:05.436",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-03 10:35:05.437",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-03 10:35:05.437",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-03 10:35:05.439",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-03 10:35:05.440",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-03 10:35:06.303",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.304",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.305",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.306",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.306",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-03 10:35:06.307",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.308",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:35:06.308",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:35:06.308",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.309",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-03 10:35:06.309",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.310",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:35:06.310",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-03 10:35:06.310",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.311",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:35:06.312",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.312",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-03 10:35:06.312",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:35:06.312",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.313",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.313",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.314",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:35:06.314",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.315",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.315",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.316",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-03 10:35:06.316",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:35:06.316",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:35:06.670",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-03 10:35:06.731",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-03 10:35:06.751",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-03 10:35:06.756",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-03 10:35:06.758",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-controller', position=0, controller=com.tailen.microservice.controller.FeignController}]] "
                }{
                "timestamp":"2019-07-03 10:35:06.759",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-03 10:35:06.759",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-controller', position=0, controller=com.tailen.microservice.controller.FeignController}]] "
                }{
                "timestamp":"2019-07-03 10:35:06.771",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-controller Description: feign-controller Position: 0"
                }{
                "timestamp":"2019-07-03 10:35:06.802",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:35:06.802",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:35:06.807",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:35:06.807",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:35:06.813",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.controller.FeignController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:35:06.813",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.controller.FeignController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:35:06.986",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-03 10:35:07.002",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-03 10:35:07.024",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:35:07.024",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:35:07.024",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:35:07.024",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:35:07.024",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.controller.FeignController.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:35:07.024",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.controller.FeignController.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:35:07.025",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-03 10:35:07.026",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-03 10:35:07.845",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f6f61c8: startup date [Wed Jul 03 10:35:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-07-03 10:35:07.856",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:35:07.999",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:35:07.999",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:35:08.032",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:35:08.094",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:35:08.789",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:35:08.795",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:35:08.801",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:35:08.801",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:35:08.988",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-03 10:35:09.190",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-03 10:35:09.200",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:35:09.202",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:35:09.202",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:35:09.203",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:35:09.203",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:35:09.204",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:35:09.208",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-03 10:35:09.224",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-03 10:35:09.236",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-03 10:35:09.244",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-03 10:35:09.250",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7f6f61c8,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-03 10:35:09.256",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-03 10:35:09.484",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:35:09.496",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-03 10:35:09.522",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-03 10:35:09.796",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:35:09.796",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:35:09.869",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:35:09.869",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:35:09.988",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 10:35:09.995",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-03 10:35:09.996",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-03 10:35:09.996",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-03 10:35:09.996",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-03 10:35:09.996",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-03 10:35:09.996",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-03 10:35:09.996",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-03 10:35:10.273",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-03 10:35:10.274",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-03 10:35:10.276",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-03 10:35:10.278",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562121310277 with initial instances count: 0"
                }{
                "timestamp":"2019-07-03 10:35:10.352",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-07-03 10:35:10.353",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562121310353, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-03 10:35:10.356",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-07-03 10:35:10.441",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:35:10.466",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1100 (http)"
                }{
                "timestamp":"2019-07-03 10:35:10.467",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1100"
                }{
                "timestamp":"2019-07-03 10:35:10.472",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 28.621 seconds (JVM running for 34.18)"
                }{
                "timestamp":"2019-07-03 10:35:40.276",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-03 10:35:40.282",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-03 10:35:40.282",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-03 10:35:40.282",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-03 10:35:40.282",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-03 10:35:40.282",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: false"
                }{
                "timestamp":"2019-07-03 10:35:40.282",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-03 10:35:40.316",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-03 10:40:10.003",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 10:45:10.010",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 10:49:36.639",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "http-nio-1100-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-07-03 10:49:36.639",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "http-nio-1100-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-07-03 10:49:36.670",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "http-nio-1100-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms"
                }{
                "timestamp":"2019-07-03 10:49:36.693",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "16cb0a837b8fb7ee",
                "span": "d951a24c28548f7d",
                "pid": "1127",
                "thread": "http-nio-1100-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a provide service:add"
                }{
                "timestamp":"2019-07-03 10:49:36.693",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "16cb0a837b8fb7ee",
                "span": "d951a24c28548f7d",
                "pid": "1127",
                "thread": "http-nio-1100-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a : add method numA is 1 ;numB is 2 "
                }{
                "timestamp":"2019-07-03 10:49:36.704",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "http-nio-1100-exec-1",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause"
                }java.lang.ArithmeticException: / by zero
	at com.tailen.microservice.service.impl.DemoServiceImpl.add(DemoServiceImpl.java:28)
	at com.tailen.microservice.controller.FeignController.add(FeignController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.cloud.sleuth.instrument.web.TraceFilter.doFilter(TraceFilter.java:153)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 10:49:53.668",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "b6967609b6f4bd67",
                "span": "5b4323af4c916b90",
                "pid": "1127",
                "thread": "http-nio-1100-exec-2",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a provide service:add"
                }{
                "timestamp":"2019-07-03 10:49:53.668",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "b6967609b6f4bd67",
                "span": "5b4323af4c916b90",
                "pid": "1127",
                "thread": "http-nio-1100-exec-2",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a : add method numA is 1 ;numB is 2 "
                }{
                "timestamp":"2019-07-03 10:49:53.669",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "http-nio-1100-exec-2",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: / by zero] with root cause"
                }java.lang.ArithmeticException: / by zero
	at com.tailen.microservice.service.impl.DemoServiceImpl.add(DemoServiceImpl.java:28)
	at com.tailen.microservice.controller.FeignController.add(FeignController.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.cloud.sleuth.instrument.web.TraceFilter.doFilter(TraceFilter.java:153)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 10:50:10.018",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 10:50:38.033",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "Thread-62",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f6f61c8: startup date [Wed Jul 03 10:35:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-07-03 10:50:38.034",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "Thread-62",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-07-03 10:50:38.034",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122238034, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-03 10:50:38.034",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-03 10:50:38.034",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122238034, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-07-03 10:50:38.035",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.netflix.appinfo.ApplicationInfoManager",
                "message": "failed to notify listener: statusChangeListener"
                }java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@719ecd47 rejected from java.util.concurrent.ScheduledThreadPoolExecutor@72084055[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 34]
	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2063)
	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:830)
	at java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute(ScheduledThreadPoolExecutor.java:326)
	at java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:533)
	at java.util.concurrent.ScheduledThreadPoolExecutor.submit(ScheduledThreadPoolExecutor.java:632)
	at com.netflix.discovery.InstanceInfoReplicator.onDemandUpdate(InstanceInfoReplicator.java:77)
	at com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1281)
	at com.netflix.appinfo.ApplicationInfoManager.setInstanceStatus(ApplicationInfoManager.java:177)
	at com.netflix.appinfo.ApplicationInfoManager$$FastClassBySpringCGLIB$$ca6abd37.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:133)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:121)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.netflix.appinfo.ApplicationInfoManager$$EnhancerBySpringCGLIB$$e1004dd2.setInstanceStatus(<generated>)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1369)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:100)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 10:50:38.035",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-07-03 10:50:38.035",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-03 10:50:38.040",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - deregister  status: 200"
                }{
                "timestamp":"2019-07-03 10:50:38.041",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:50:38.043",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "Thread-62",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-03 10:50:38.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "Thread-62",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:50:38.047",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "Thread-62",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-03 10:50:38.047",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "Thread-62",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-03 10:50:38.050",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "Thread-62",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@67bb4dcd: startup date [Wed Jul 03 10:35:04 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f6f61c8"
                }{
                "timestamp":"2019-07-03 10:50:38.052",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1127",
                "thread": "Thread-62",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-03 10:51:20.606",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-03 10:51:20.615",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61ce23ac: startup date [Wed Jul 03 10:51:20 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:51:21.328",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-03 10:51:21.576",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=66e46e80-df35-313b-9e14-d69c1bc19ad7"
                }{
                "timestamp":"2019-07-03 10:51:21.591",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:51:21.618",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:21.644",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$ffff2a73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:21.698",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$c522d2e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:21.814",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:21.830",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f4ea32f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:21.862",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ded78fad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:21.879",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$24f6576] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:21.896",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$aaa138cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:51:22.228",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1100 (http)"
                }{
                "timestamp":"2019-07-03 10:51:22.234",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-03 10:51:22.235",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-03 10:51:22.293",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-03 10:51:22.294",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1679 ms"
                }{
                "timestamp":"2019-07-03 10:51:22.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:22.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:22.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:22.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:22.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:22.817",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:22.817",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:22.817",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:51:22.817",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-03 10:51:22.891",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6ecc02bb: startup date [Wed Jul 03 10:51:22 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61ce23ac"
                }{
                "timestamp":"2019-07-03 10:51:22.900",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:51:23.305",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-03 10:51:23.306",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.FeignController.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-03 10:51:23.307",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:51:23.309",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-03 10:51:23.310",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-03 10:51:23.310",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-03 10:51:23.312",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-03 10:51:23.312",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-03 10:51:24.070",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:51:24.070",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.071",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:51:24.072",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.072",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.073",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-03 10:51:24.073",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:51:24.073",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.075",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.075",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.075",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:51:24.075",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-03 10:51:24.077",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.077",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.078",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.080",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:51:24.080",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.080",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.081",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-03 10:51:24.081",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-03 10:51:24.082",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.082",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-03 10:51:24.082",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.083",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:51:24.086",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:51:24.086",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.087",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.087",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:51:24.388",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-03 10:51:24.424",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-03 10:51:24.439",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-03 10:51:24.441",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-03 10:51:24.442",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-controller', position=0, controller=com.tailen.microservice.controller.FeignController}]] "
                }{
                "timestamp":"2019-07-03 10:51:24.443",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-03 10:51:24.443",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-controller', position=0, controller=com.tailen.microservice.controller.FeignController}]] "
                }{
                "timestamp":"2019-07-03 10:51:24.449",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-controller Description: feign-controller Position: 0"
                }{
                "timestamp":"2019-07-03 10:51:24.473",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:51:24.473",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:51:24.477",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:51:24.478",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:51:24.481",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.controller.FeignController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:51:24.481",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.controller.FeignController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:51:24.611",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-03 10:51:24.618",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-03 10:51:24.636",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:51:24.636",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:51:24.636",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:51:24.636",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:51:24.636",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.controller.FeignController.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:51:24.636",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.controller.FeignController.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:51:24.637",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-03 10:51:24.638",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-03 10:51:25.384",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61ce23ac: startup date [Wed Jul 03 10:51:20 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:51:25.393",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:51:25.534",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:51:25.534",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:51:25.561",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:51:25.616",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:51:26.177",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:51:26.177",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:51:26.179",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:51:26.179",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:51:26.318",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-03 10:51:26.443",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-03 10:51:26.449",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:51:26.451",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:51:26.451",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:51:26.452",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:51:26.452",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:51:26.453",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:51:26.455",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-03 10:51:26.465",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-03 10:51:26.472",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-03 10:51:26.477",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-03 10:51:26.483",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=61ce23ac,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-03 10:51:26.487",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-03 10:51:26.690",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:51:26.698",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-03 10:51:26.731",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-03 10:51:26.870",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:51:26.870",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:51:26.926",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:51:26.926",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:51:27.054",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 10:51:27.065",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-03 10:51:27.065",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-03 10:51:27.065",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-03 10:51:27.065",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-03 10:51:27.065",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-03 10:51:27.065",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-03 10:51:27.065",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-03 10:51:27.188",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-03 10:51:27.191",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-03 10:51:27.192",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-03 10:51:27.194",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562122287194 with initial instances count: 2"
                }{
                "timestamp":"2019-07-03 10:51:27.263",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-07-03 10:51:27.263",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122287263, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-03 10:51:27.266",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-07-03 10:51:27.289",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:51:27.348",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1100 (http)"
                }{
                "timestamp":"2019-07-03 10:51:27.349",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1100"
                }{
                "timestamp":"2019-07-03 10:51:27.354",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 27.449 seconds (JVM running for 32.978)"
                }{
                "timestamp":"2019-07-03 10:54:00.849",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "Thread-61",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61ce23ac: startup date [Wed Jul 03 10:51:20 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:54:00.850",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "Thread-61",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-07-03 10:54:00.851",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "Thread-61",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122440851, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-03 10:54:00.851",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "Thread-61",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-03 10:54:00.851",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122440851, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-07-03 10:54:00.852",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-07-03 10:54:00.852",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "Thread-61",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-03 10:54:00.859",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:54:00.859",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "Thread-61",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - deregister  status: 200"
                }{
                "timestamp":"2019-07-03 10:54:00.863",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "Thread-61",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-03 10:54:00.865",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "Thread-61",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:54:00.867",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "Thread-61",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-03 10:54:00.867",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "Thread-61",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-03 10:54:00.869",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "Thread-61",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6ecc02bb: startup date [Wed Jul 03 10:51:22 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61ce23ac"
                }{
                "timestamp":"2019-07-03 10:54:00.871",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1408",
                "thread": "Thread-61",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-03 10:55:13.905",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-07-03 10:55:13.920",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61ce23ac: startup date [Wed Jul 03 10:55:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:55:14.770",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-07-03 10:55:14.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=66e46e80-df35-313b-9e14-d69c1bc19ad7"
                }{
                "timestamp":"2019-07-03 10:55:14.969",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:55:14.996",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:55:15.031",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$ffff2a73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:55:15.089",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$c522d2e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:55:15.207",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:55:15.224",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f4ea32f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:55:15.257",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ded78fad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:55:15.275",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$24f6576] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:55:15.293",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$aaa138cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-07-03 10:55:15.638",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1100 (http)"
                }{
                "timestamp":"2019-07-03 10:55:15.645",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-07-03 10:55:15.646",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-07-03 10:55:15.713",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-07-03 10:55:15.713",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1793 ms"
                }{
                "timestamp":"2019-07-03 10:55:16.264",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:55:16.264",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:55:16.264",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:55:16.264",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:55:16.264",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:55:16.264",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:55:16.265",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:55:16.265",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-07-03 10:55:16.265",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-07-03 10:55:16.346",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@e29f4f6: startup date [Wed Jul 03 10:55:16 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61ce23ac"
                }{
                "timestamp":"2019-07-03 10:55:16.356",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-07-03 10:55:16.786",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.FeignController.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-03 10:55:16.787",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.controller.FeignController.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-07-03 10:55:16.788",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:55:16.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-07-03 10:55:16.791",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-07-03 10:55:16.791",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-07-03 10:55:16.793",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-07-03 10:55:16.793",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-07-03 10:55:17.596",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-07-03 10:55:17.597",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.598",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.598",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.599",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-07-03 10:55:17.599",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.600",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.600",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.602",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:55:17.603",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.603",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.604",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:55:17.605",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-07-03 10:55:17.605",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.606",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:55:17.607",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:55:17.607",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.608",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.610",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:55:17.610",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.610",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-07-03 10:55:17.610",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-07-03 10:55:17.611",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.612",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.612",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-07-03 10:55:17.612",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-07-03 10:55:17.613",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.613",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-07-03 10:55:17.918",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-07-03 10:55:17.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-07-03 10:55:17.971",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-07-03 10:55:17.974",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-03 10:55:17.975",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-controller', position=0, controller=com.tailen.microservice.controller.FeignController}]] "
                }{
                "timestamp":"2019-07-03 10:55:17.976",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-03 10:55:17.976",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-controller', position=0, controller=com.tailen.microservice.controller.FeignController}]] "
                }{
                "timestamp":"2019-07-03 10:55:17.981",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-controller Description: feign-controller Position: 0"
                }{
                "timestamp":"2019-07-03 10:55:18.005",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:55:18.005",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:55:18.009",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:55:18.009",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:55:18.012",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.controller.FeignController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:55:18.013",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.controller.FeignController.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:55:18.145",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-03 10:55:18.156",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-controller"
                }{
                "timestamp":"2019-07-03 10:55:18.175",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:55:18.175",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:55:18.175",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:55:18.175",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-07-03 10:55:18.175",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.controller.FeignController.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:55:18.175",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.controller.FeignController.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-07-03 10:55:18.177",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-03 10:55:18.178",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-controller"
                }{
                "timestamp":"2019-07-03 10:55:19.141",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61ce23ac: startup date [Wed Jul 03 10:55:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 10:55:19.152",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:55:19.310",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:55:19.310",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:55:19.342",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-07-03 10:55:19.400",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-07-03 10:55:20.044",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:55:20.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:55:20.046",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-07-03 10:55:20.047",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-07-03 10:55:20.197",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-07-03 10:55:20.326",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-07-03 10:55:20.332",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:55:20.334",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:55:20.334",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:55:20.334",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:55:20.335",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:55:20.336",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-07-03 10:55:20.338",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-07-03 10:55:20.348",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-07-03 10:55:20.356",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-07-03 10:55:20.361",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-07-03 10:55:20.367",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=61ce23ac,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-07-03 10:55:20.371",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-07-03 10:55:20.560",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-07-03 10:55:20.565",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-07-03 10:55:20.589",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-07-03 10:55:20.819",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:55:20.820",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-07-03 10:55:20.974",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:55:20.974",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-07-03 10:55:21.174",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 10:55:21.185",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-07-03 10:55:21.185",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-07-03 10:55:21.185",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-07-03 10:55:21.186",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-07-03 10:55:21.188",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-07-03 10:55:21.188",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-07-03 10:55:21.188",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-07-03 10:55:21.361",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-07-03 10:55:21.363",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-07-03 10:55:21.365",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-07-03 10:55:21.368",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1562122521368 with initial instances count: 1"
                }{
                "timestamp":"2019-07-03 10:55:21.507",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-07-03 10:55:21.509",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562122521509, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-07-03 10:55:21.510",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-07-03 10:55:21.538",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - registration status: 204"
                }{
                "timestamp":"2019-07-03 10:55:21.675",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1100 (http)"
                }{
                "timestamp":"2019-07-03 10:55:21.676",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1100"
                }{
                "timestamp":"2019-07-03 10:55:21.684",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 28.509 seconds (JVM running for 34.009)"
                }{
                "timestamp":"2019-07-03 10:56:55.324",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "http-nio-1100-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-07-03 10:56:55.324",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "http-nio-1100-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-07-03 10:56:55.357",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "http-nio-1100-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms"
                }{
                "timestamp":"2019-07-03 10:56:55.388",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "c8014dc9d0b93010",
                "span": "840380245fae65d5",
                "pid": "1511",
                "thread": "http-nio-1100-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a provide service:add"
                }{
                "timestamp":"2019-07-03 10:56:55.388",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "c8014dc9d0b93010",
                "span": "840380245fae65d5",
                "pid": "1511",
                "thread": "http-nio-1100-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a : add method numA is 3 ;numB is 3 "
                }{
                "timestamp":"2019-07-03 11:00:21.195",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:05:21.211",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:10:21.220",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:15:21.228",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:21:30.161",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:26:30.173",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:31:30.184",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:36:30.206",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:41:30.216",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:46:30.220",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:51:30.226",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 11:56:30.230",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 12:01:30.234",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 12:56:19.179",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-07-03 12:59:55.486",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61ce23ac: startup date [Wed Jul 03 10:55:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3b69e7d1"
                }{
                "timestamp":"2019-07-03 12:59:55.490",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-07-03 12:59:55.491",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562129995491, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-07-03 12:59:55.491",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1562129995491, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-07-03 12:59:55.491",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-07-03 12:59:55.492",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-07-03 12:59:55.493",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-07-03 12:59:55.496",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Broken pipe (Write failed)"
                }{
                "timestamp":"2019-07-03 12:59:55.497",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-07-03 12:59:55.499",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Connection reset"
                }{
                "timestamp":"2019-07-03 12:59:55.499",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-07-03 12:59:55.506",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: org.apache.http.client.ClientProtocolException
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.client.ClientProtocolException: null
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:839)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
Caused by: org.apache.http.client.NonRepeatableRequestException: Cannot retry request with a non-repeatable request entity.  The cause lists the reason the original request failed.
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:658)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	... 32 common frames omitted
Caused by: java.net.SocketException: Broken pipe (Write failed)
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer(AbstractSessionOutputBuffer.java:157)
	at org.apache.http.impl.io.AbstractSessionOutputBuffer.flush(AbstractSessionOutputBuffer.java:164)
	at org.apache.http.impl.io.ChunkedOutputStream.close(ChunkedOutputStream.java:203)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.close(UTF8JsonGenerator.java:1092)
	at com.fasterxml.jackson.databind.ObjectWriter._configAndWriteValue(ObjectWriter.java:1163)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:988)
	at com.netflix.discovery.converters.EurekaJacksonCodec.writeTo(EurekaJacksonCodec.java:194)
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.encode(CodecWrappers.java:304)
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.writeTo(DiscoveryJerseyProvider.java:135)
	at com.sun.jersey.api.client.RequestWriter$RequestEntityWriterImpl.writeRequestEntity(RequestWriter.java:231)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler$2.writeTo(ApacheHttpClient4Handler.java:289)
	at org.apache.http.entity.HttpEntityWrapper.writeTo(HttpEntityWrapper.java:94)
	at org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper.writeTo(EntityEnclosingRequestWrapper.java:110)
	at org.apache.http.impl.entity.EntitySerializer.serialize(EntitySerializer.java:118)
	at org.apache.http.impl.AbstractHttpClientConnection.sendRequestEntity(AbstractHttpClientConnection.java:263)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.sendRequestEntity(AbstractClientConnAdapter.java:239)
	at org.apache.http.protocol.HttpRequestExecutor.doSendRequest(HttpRequestExecutor.java:238)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	... 34 common frames omitted
{
                "timestamp":"2019-07-03 12:59:55.507",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: org.apache.http.client.ClientProtocolException"
                }{
                "timestamp":"2019-07-03 12:59:55.572",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Connection reset"
                }{
                "timestamp":"2019-07-03 12:59:55.573",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-07-03 12:59:55.573",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.SocketException: Connection reset
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:210)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:158)
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:271)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:281)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-07-03 12:59:55.574",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.SocketException: Connection reset"
                }{
                "timestamp":"2019-07-03 12:59:55.583",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$2bee3a73.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:673)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 45 common frames omitted
{
                "timestamp":"2019-07-03 12:59:55.588",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-03 12:59:55.584",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - registration failed Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 12:59:55.590",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-07-03 12:59:55.590",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$2bee3a73.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
{
                "timestamp":"2019-07-03 12:59:55.594",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-07-03 12:59:55.594",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - de-registration failedCannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$2bee3a73.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-07-03 12:59:55.597",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-07-03 12:59:55.617",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-07-03 12:59:55.631",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-07-03 12:59:55.632",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-07-03 12:59:55.636",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@e29f4f6: startup date [Wed Jul 03 10:55:16 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61ce23ac"
                }{
                "timestamp":"2019-07-03 12:59:55.643",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1511",
                "thread": "Thread-63",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
