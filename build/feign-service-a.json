{
                "timestamp":"2019-06-28 16:05:31.687",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 16:05:31.699",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455: startup date [Fri Jun 28 16:05:31 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:05:32.411",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-06-28 16:05:32.635",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=0bfe39eb-7fb4-3dee-ac29-235fdd55b37e"
                }{
                "timestamp":"2019-06-28 16:05:32.648",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:05:32.673",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:05:32.700",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$9fb043e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:05:32.755",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$64d3ec51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:05:32.866",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:05:32.879",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$949b4c60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:05:32.908",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e88a91c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:05:32.925",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a2007ee5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:05:32.942",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$4a52523e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:05:33.302",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:05:33.308",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 16:05:33.309",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 16:05:33.412",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 16:05:33.412",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1713 ms"
                }{
                "timestamp":"2019-06-28 16:05:33.970",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:05:33.971",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:05:33.971",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:05:33.971",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:05:33.971",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:05:33.971",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:05:33.971",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:05:33.972",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:05:33.972",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 16:05:34.083",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fd7a37: startup date [Fri Jun 28 16:05:34 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455"
                }{
                "timestamp":"2019-06-28 16:05:34.094",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:05:34.521",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:05:34.522",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:05:34.523",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:05:34.525",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-06-28 16:05:34.525",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-06-28 16:05:34.526",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-06-28 16:05:34.527",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 16:05:34.527",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 16:05:35.308",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.309",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.310",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.310",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 16:05:35.311",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.311",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.312",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:05:35.312",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.313",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.314",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.315",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:05:35.316",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:05:35.316",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.316",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:05:35.317",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.317",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.318",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:05:35.318",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 16:05:35.319",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 16:05:35.319",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:05:35.319",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-06-28 16:05:35.320",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.320",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.321",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:05:35.321",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.322",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.322",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:05:35.322",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 16:05:35.718",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-06-28 16:05:35.754",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-06-28 16:05:35.769",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-06-28 16:05:35.772",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:05:35.773",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:05:35.774",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:05:35.774",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:05:35.786",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-contrller Description: feign-contrller Position: 0"
                }{
                "timestamp":"2019-06-28 16:05:35.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:05:35.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:05:35.821",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:05:35.821",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:05:35.824",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:05:35.824",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:05:35.969",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:05:35.980",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:05:36.004",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:05:36.004",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:05:36.005",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:05:36.005",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:05:36.005",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:05:36.005",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:05:36.006",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:05:36.007",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:05:36.961",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455: startup date [Fri Jun 28 16:05:31 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:05:36.969",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:05:37.085",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:05:37.085",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:05:37.108",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:05:37.147",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:05:37.707",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:05:37.707",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:05:37.709",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:05:37.710",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:05:37.895",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 16:05:38.096",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 16:05:38.103",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:05:38.104",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:05:38.105",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:05:38.105",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:05:38.105",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:05:38.106",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:05:38.108",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 16:05:38.117",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 16:05:38.125",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 16:05:38.129",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 16:05:38.135",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=53142455,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 16:05:38.139",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 16:05:38.310",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:05:38.318",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 16:05:38.356",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 16:05:38.538",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:05:38.538",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:05:38.630",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:05:38.630",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:05:38.778",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 16:05:38.789",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:05:38.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:05:38.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:05:38.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:05:38.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:05:38.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 16:05:38.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:05:38.997",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:05:38.999",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 16:05:39.002",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-06-28 16:05:39.004",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561709139004 with initial instances count: 0"
                }{
                "timestamp":"2019-06-28 16:05:39.103",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 16:05:39.104",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561709139104, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 16:05:39.105",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:05:39.181",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:05:39.219",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:05:39.220",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1001"
                }{
                "timestamp":"2019-06-28 16:05:39.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 8.736 seconds (JVM running for 9.303)"
                }{
                "timestamp":"2019-06-28 16:06:08.999",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:06:08.999",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:06:08.999",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:06:08.999",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:06:08.999",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:06:08.999",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: false"
                }{
                "timestamp":"2019-06-28 16:06:09.000",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:06:09.035",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:07:00.087",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-06-28 16:07:00.087",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-06-28 16:07:00.125",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms"
                }{
                "timestamp":"2019-06-28 16:07:30.067",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "1b3f3b609df1a87b",
                "span": "1b3f3b609df1a87b",
                "pid": "8436",
                "thread": "http-nio-1001-exec-9",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a provide service:add"
                }{
                "timestamp":"2019-06-28 16:07:30.073",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "1b3f3b609df1a87b",
                "span": "1b3f3b609df1a87b",
                "pid": "8436",
                "thread": "http-nio-1001-exec-9",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a : add method numA is 1 ;numB is 2 "
                }{
                "timestamp":"2019-06-28 16:08:04.568",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "377d5cac49a4add7",
                "span": "377d5cac49a4add7",
                "pid": "8436",
                "thread": "http-nio-1001-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:08:04.756",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "377d5cac49a4add7",
                "span": "377d5cac49a4add7",
                "pid": "8436",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1c415ca4: startup date [Fri Jun 28 16:08:04 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455"
                }{
                "timestamp":"2019-06-28 16:08:04.796",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "377d5cac49a4add7",
                "span": "377d5cac49a4add7",
                "pid": "8436",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:08:04.929",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "377d5cac49a4add7",
                "span": "377d5cac49a4add7",
                "pid": "8436",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:08:04.946",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "377d5cac49a4add7",
                "span": "377d5cac49a4add7",
                "pid": "8436",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:08:04.964",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "377d5cac49a4add7",
                "span": "377d5cac49a4add7",
                "pid": "8436",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-b instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-06-28 16:08:04.971",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "377d5cac49a4add7",
                "span": "377d5cac49a4add7",
                "pid": "8436",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:08:04.986",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "377d5cac49a4add7",
                "span": "377d5cac49a4add7",
                "pid": "8436",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:08:04.988",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "377d5cac49a4add7",
                "span": "377d5cac49a4add7",
                "pid": "8436",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-b initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[bogon:1002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:bogon:1002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@132f3bd1"
                }{
                "timestamp":"2019-06-28 16:08:05.318",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }feign.FeignException: status 404 reading FeignServiceB#multiplication(Integer,Integer); content:
{"timestamp":1561709285270,"status":404,"error":"Not Found","message":"No message available","path":"/multiplication"}
	at feign.FeignException.errorStatus(FeignException.java:62)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:91)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:138)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:08:05.977",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "PollingServerListUpdater-0",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:08:26.053",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-33",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:08:26.053",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455: startup date [Fri Jun 28 16:05:31 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:08:26.055",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:08:26.055",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561709306055, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 16:08:26.055",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:08:26.055",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 16:08:26.056",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 16:08:26.063",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:08:26.063",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - deregister  status: 200"
                }{
                "timestamp":"2019-06-28 16:08:26.065",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 16:08:26.067",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:08:26.069",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 16:08:26.069",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 16:08:26.070",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1c415ca4: startup date [Fri Jun 28 16:08:04 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455"
                }{
                "timestamp":"2019-06-28 16:08:26.071",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:08:26.071",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:08:26.072",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:08:26.074",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fd7a37: startup date [Fri Jun 28 16:05:34 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455"
                }{
                "timestamp":"2019-06-28 16:08:26.077",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8436",
                "thread": "Thread-22",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:10:07.179",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 16:10:07.193",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455: startup date [Fri Jun 28 16:10:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:10:07.842",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-06-28 16:10:08.078",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=0bfe39eb-7fb4-3dee-ac29-235fdd55b37e"
                }{
                "timestamp":"2019-06-28 16:10:08.097",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:10:08.131",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:10:08.159",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$9fb043e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:10:08.213",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$64d3ec51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:10:08.326",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:10:08.342",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$949b4c60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:10:08.379",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e88a91c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:10:08.399",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a2007ee5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:10:08.418",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$4a52523e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:10:08.776",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:10:08.782",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 16:10:08.783",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 16:10:08.843",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 16:10:08.843",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1650 ms"
                }{
                "timestamp":"2019-06-28 16:10:09.757",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:10:09.758",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:10:09.758",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:10:09.759",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:10:09.759",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:10:09.759",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:10:09.759",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:10:09.759",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:10:09.759",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 16:10:09.899",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fd7a37: startup date [Fri Jun 28 16:10:09 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455"
                }{
                "timestamp":"2019-06-28 16:10:09.915",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:10:10.697",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:10:10.698",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:10:10.699",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:10:10.703",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-06-28 16:10:10.704",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-06-28 16:10:10.704",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-06-28 16:10:10.708",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 16:10:10.709",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 16:10:12.345",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.347",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:10:12.347",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.348",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 16:10:12.351",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:10:12.352",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:10:12.352",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.353",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.353",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 16:10:12.353",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:10:12.354",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.357",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 16:10:12.358",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.362",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:10:12.363",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 16:10:12.367",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.368",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:10:12.369",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.370",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-06-28 16:10:12.370",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.371",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.371",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.373",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.373",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.374",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.375",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:12.376",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:10:12.376",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:10:13.092",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-06-28 16:10:13.356",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-06-28 16:10:13.393",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-06-28 16:10:13.398",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:10:13.400",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:10:13.401",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:10:13.401",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:10:13.409",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-contrller Description: feign-contrller Position: 0"
                }{
                "timestamp":"2019-06-28 16:10:13.450",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:10:13.450",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:10:13.457",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:10:13.457",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:10:13.462",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:10:13.462",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:10:13.762",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:10:13.775",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:10:13.804",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:10:13.804",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:10:13.804",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:10:13.804",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:10:13.804",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:10:13.804",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:10:13.806",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:10:13.807",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:10:14.946",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455: startup date [Fri Jun 28 16:10:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:10:14.956",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:10:15.088",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:10:15.089",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:10:15.116",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:10:15.176",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:10:15.854",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:10:15.854",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:10:15.857",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:10:15.857",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:10:16.077",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 16:10:16.229",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 16:10:16.236",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:10:16.238",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:10:16.238",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:10:16.239",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:10:16.240",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:10:16.241",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:10:16.243",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 16:10:16.253",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 16:10:16.262",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 16:10:16.270",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 16:10:16.277",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=53142455,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 16:10:16.284",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 16:10:16.638",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:10:16.645",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 16:10:16.677",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 16:10:16.841",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:10:16.842",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:10:16.919",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:10:16.919",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:10:17.026",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 16:10:17.035",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:10:17.035",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:10:17.035",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:10:17.036",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:10:17.036",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:10:17.036",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 16:10:17.036",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:10:17.253",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:10:17.254",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 16:10:17.256",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-06-28 16:10:17.257",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561709417257 with initial instances count: 0"
                }{
                "timestamp":"2019-06-28 16:10:17.339",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 16:10:17.340",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561709417340, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 16:10:17.341",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:10:17.425",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:10:17.497",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:10:17.498",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1001"
                }{
                "timestamp":"2019-06-28 16:10:17.510",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 11.546 seconds (JVM running for 12.136)"
                }{
                "timestamp":"2019-06-28 16:10:27.838",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-06-28 16:10:27.840",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-06-28 16:10:27.877",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms"
                }{
                "timestamp":"2019-06-28 16:10:27.935",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "df5885a437a0f465",
                "span": "df5885a437a0f465",
                "pid": "8481",
                "thread": "http-nio-1001-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:10:28.265",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "df5885a437a0f465",
                "span": "df5885a437a0f465",
                "pid": "8481",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@418bbede: startup date [Fri Jun 28 16:10:28 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455"
                }{
                "timestamp":"2019-06-28 16:10:28.307",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "df5885a437a0f465",
                "span": "df5885a437a0f465",
                "pid": "8481",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:10:28.481",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "df5885a437a0f465",
                "span": "df5885a437a0f465",
                "pid": "8481",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:10:28.500",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "df5885a437a0f465",
                "span": "df5885a437a0f465",
                "pid": "8481",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:10:28.515",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "df5885a437a0f465",
                "span": "df5885a437a0f465",
                "pid": "8481",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-b instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-06-28 16:10:28.519",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "df5885a437a0f465",
                "span": "df5885a437a0f465",
                "pid": "8481",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:10:28.523",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "df5885a437a0f465",
                "span": "df5885a437a0f465",
                "pid": "8481",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-b initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@276409a1"
                }{
                "timestamp":"2019-06-28 16:10:28.600",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-b
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:10:47.259",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:10:47.259",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:10:47.260",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:10:47.260",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:10:47.260",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:10:47.260",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: false"
                }{
                "timestamp":"2019-06-28 16:10:47.260",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:10:47.294",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:10:59.540",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "PollingServerListUpdater-0",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:13:26.934",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-39",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:13:26.934",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455: startup date [Fri Jun 28 16:10:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:13:26.936",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:13:26.937",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561709606937, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 16:13:26.937",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:13:26.937",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 16:13:26.939",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 16:13:26.946",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:13:26.947",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - deregister  status: 200"
                }{
                "timestamp":"2019-06-28 16:13:26.949",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 16:13:26.951",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:13:26.953",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 16:13:26.953",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 16:13:26.954",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@418bbede: startup date [Fri Jun 28 16:10:28 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455"
                }{
                "timestamp":"2019-06-28 16:13:26.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:13:26.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:13:26.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:13:26.960",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1fd7a37: startup date [Fri Jun 28 16:10:09 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53142455"
                }{
                "timestamp":"2019-06-28 16:13:26.962",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8481",
                "thread": "Thread-28",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:14:24.686",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 16:14:24.700",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61c9c3fd: startup date [Fri Jun 28 16:14:24 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7586beff"
                }{
                "timestamp":"2019-06-28 16:14:25.345",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-06-28 16:14:25.516",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=0bfe39eb-7fb4-3dee-ac29-235fdd55b37e"
                }{
                "timestamp":"2019-06-28 16:14:25.530",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:14:25.555",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:14:25.582",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$3d491ba5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:14:25.640",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$26cc414] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:14:25.753",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:14:25.770",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$32342423] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:14:25.807",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1c2180df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:14:25.828",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3f9956a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:14:25.856",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$e7eb2a01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:14:26.670",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:14:26.691",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 16:14:26.693",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 16:14:26.802",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 16:14:26.803",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 2103 ms"
                }{
                "timestamp":"2019-06-28 16:14:28.123",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:14:28.123",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:14:28.123",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:14:28.124",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:14:28.124",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:14:28.124",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:14:28.124",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:14:28.124",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:14:28.124",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 16:14:28.258",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6b649efa: startup date [Fri Jun 28 16:14:28 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61c9c3fd"
                }{
                "timestamp":"2019-06-28 16:14:28.278",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:14:29.468",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:14:29.469",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:14:29.470",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:14:29.473",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-06-28 16:14:29.474",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-06-28 16:14:29.474",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-06-28 16:14:29.476",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 16:14:29.476",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 16:14:30.399",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.402",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:14:30.403",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:14:30.403",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.403",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.404",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:14:30.405",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 16:14:30.405",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.407",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.408",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:14:30.408",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 16:14:30.409",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 16:14:30.410",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:14:30.410",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.411",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.412",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.412",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.413",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.413",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.413",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:14:30.413",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.414",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.414",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.415",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:14:30.415",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 16:14:30.416",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.416",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:14:30.417",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-06-28 16:14:30.796",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-06-28 16:14:30.843",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-06-28 16:14:30.862",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-06-28 16:14:30.865",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:14:30.866",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:14:30.867",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:14:30.867",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:14:30.873",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-contrller Description: feign-contrller Position: 0"
                }{
                "timestamp":"2019-06-28 16:14:30.906",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:14:30.907",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:14:30.912",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:14:30.912",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:14:30.917",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:14:30.917",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:14:31.091",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:14:31.105",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:14:31.126",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:14:31.126",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:14:31.126",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:14:31.126",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:14:31.127",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:14:31.127",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:14:31.128",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:14:31.129",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:14:32.183",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61c9c3fd: startup date [Fri Jun 28 16:14:24 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7586beff"
                }{
                "timestamp":"2019-06-28 16:14:32.194",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:14:32.389",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:14:32.389",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:14:32.418",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:14:32.472",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:14:33.206",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:14:33.206",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:14:33.212",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:14:33.212",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:14:33.390",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 16:14:33.529",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 16:14:33.537",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:14:33.539",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:14:33.539",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:14:33.540",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:14:33.540",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:14:33.541",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:14:33.545",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 16:14:33.561",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 16:14:33.570",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 16:14:33.578",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 16:14:33.585",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=61c9c3fd,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 16:14:33.592",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 16:14:33.835",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:14:33.840",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 16:14:33.867",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 16:14:34.033",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:14:34.033",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:14:34.194",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:14:34.194",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:14:34.455",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 16:14:34.475",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:14:34.475",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:14:34.475",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:14:34.475",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:14:34.476",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:14:34.476",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 16:14:34.476",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:14:34.617",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:14:34.618",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 16:14:34.623",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-06-28 16:14:34.628",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561709674628 with initial instances count: 0"
                }{
                "timestamp":"2019-06-28 16:14:34.800",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 16:14:34.802",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561709674802, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 16:14:34.803",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:14:34.855",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:14:34.940",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:14:34.941",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1001"
                }{
                "timestamp":"2019-06-28 16:14:34.949",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 11.063 seconds (JVM running for 14.964)"
                }{
                "timestamp":"2019-06-28 16:14:47.536",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-06-28 16:14:47.542",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-06-28 16:14:47.577",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms"
                }{
                "timestamp":"2019-06-28 16:14:47.601",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "eba679c17a84e813",
                "span": "eba679c17a84e813",
                "pid": "8495",
                "thread": "http-nio-1001-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:14:47.693",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "eba679c17a84e813",
                "span": "eba679c17a84e813",
                "pid": "8495",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@43a3e4e6: startup date [Fri Jun 28 16:14:47 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61c9c3fd"
                }{
                "timestamp":"2019-06-28 16:14:47.717",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "eba679c17a84e813",
                "span": "eba679c17a84e813",
                "pid": "8495",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:14:47.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "eba679c17a84e813",
                "span": "eba679c17a84e813",
                "pid": "8495",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:14:47.828",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "eba679c17a84e813",
                "span": "eba679c17a84e813",
                "pid": "8495",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:14:47.844",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "eba679c17a84e813",
                "span": "eba679c17a84e813",
                "pid": "8495",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-b instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-06-28 16:14:47.847",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "eba679c17a84e813",
                "span": "eba679c17a84e813",
                "pid": "8495",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:14:47.850",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "eba679c17a84e813",
                "span": "eba679c17a84e813",
                "pid": "8495",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-b initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@a4433c7"
                }{
                "timestamp":"2019-06-28 16:14:47.915",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-b
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:15:04.620",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:15:04.620",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:15:04.620",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:15:04.620",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:15:04.620",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:15:04.620",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: false"
                }{
                "timestamp":"2019-06-28 16:15:04.621",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:15:04.642",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:15:18.868",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "PollingServerListUpdater-0",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:15:36.185",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-40",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:15:36.186",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61c9c3fd: startup date [Fri Jun 28 16:14:24 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7586beff"
                }{
                "timestamp":"2019-06-28 16:15:36.188",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:15:36.188",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561709736188, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 16:15:36.189",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:15:36.189",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 16:15:36.189",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 16:15:36.194",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - deregister  status: 200"
                }{
                "timestamp":"2019-06-28 16:15:36.194",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:15:36.196",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 16:15:36.198",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:15:36.201",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 16:15:36.201",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 16:15:36.201",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@43a3e4e6: startup date [Fri Jun 28 16:14:47 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61c9c3fd"
                }{
                "timestamp":"2019-06-28 16:15:36.202",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:15:36.202",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:15:36.203",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:15:36.205",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6b649efa: startup date [Fri Jun 28 16:14:28 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61c9c3fd"
                }{
                "timestamp":"2019-06-28 16:15:36.207",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8495",
                "thread": "Thread-29",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:15:44.023",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 16:15:44.035",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee: startup date [Fri Jun 28 16:15:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:15:44.822",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-06-28 16:15:45.008",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=0bfe39eb-7fb4-3dee-ac29-235fdd55b37e"
                }{
                "timestamp":"2019-06-28 16:15:45.022",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:15:45.050",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:15:45.078",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$9fb043e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:15:45.130",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$64d3ec51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:15:45.238",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:15:45.258",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$949b4c60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:15:45.291",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e88a91c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:15:45.308",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a2007ee5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:15:45.325",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$4a52523e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:15:45.800",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:15:45.807",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 16:15:45.807",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 16:15:45.894",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 16:15:45.894",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1859 ms"
                }{
                "timestamp":"2019-06-28 16:15:46.984",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:15:46.987",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:15:46.988",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:15:46.989",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:15:46.989",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:15:46.989",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:15:46.989",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:15:46.989",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:15:46.989",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 16:15:47.115",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@36068727: startup date [Fri Jun 28 16:15:47 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee"
                }{
                "timestamp":"2019-06-28 16:15:47.132",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:15:48.296",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:15:48.297",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:15:48.298",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:15:48.301",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-06-28 16:15:48.302",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-06-28 16:15:48.302",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-06-28 16:15:48.304",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 16:15:48.305",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 16:15:49.220",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.221",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 16:15:49.222",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.223",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-06-28 16:15:49.224",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:15:49.224",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 16:15:49.226",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.226",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:15:49.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.228",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.228",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.230",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.230",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.231",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 16:15:49.232",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.233",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.233",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.234",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:15:49.234",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.235",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 16:15:49.235",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:15:49.235",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.237",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:15:49.237",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:15:49.237",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.238",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:15:49.238",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:15:49.586",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-06-28 16:15:49.632",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-06-28 16:15:49.651",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-06-28 16:15:49.655",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:15:49.656",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:15:49.657",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:15:49.657",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:15:49.664",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-contrller Description: feign-contrller Position: 0"
                }{
                "timestamp":"2019-06-28 16:15:49.693",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:15:49.693",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:15:49.699",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:15:49.699",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:15:49.704",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:15:49.704",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:15:49.862",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:15:49.871",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:15:49.895",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:15:49.895",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:15:49.895",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:15:49.895",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:15:49.895",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:15:49.895",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:15:49.897",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:15:49.897",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:15:50.937",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee: startup date [Fri Jun 28 16:15:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:15:50.946",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:15:51.073",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:15:51.073",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:15:51.099",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:15:51.153",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:15:51.863",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:15:51.863",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:15:51.867",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:15:51.867",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:15:52.117",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 16:15:52.254",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 16:15:52.262",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:15:52.265",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:15:52.265",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:15:52.266",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:15:52.266",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:15:52.267",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:15:52.270",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 16:15:52.281",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 16:15:52.290",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 16:15:52.296",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 16:15:52.303",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=8c11eee,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 16:15:52.308",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 16:15:52.508",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:15:52.514",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 16:15:52.541",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 16:15:52.697",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:15:52.697",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:15:52.761",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:15:52.761",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:15:52.942",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 16:15:52.954",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:15:52.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:15:52.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:15:52.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:15:52.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:15:52.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 16:15:52.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:15:53.111",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:15:53.113",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 16:15:53.114",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-06-28 16:15:53.116",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561709753116 with initial instances count: 2"
                }{
                "timestamp":"2019-06-28 16:15:53.206",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 16:15:53.214",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561709753214, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 16:15:53.215",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:15:53.250",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:15:53.353",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:15:53.354",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1001"
                }{
                "timestamp":"2019-06-28 16:15:53.360",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 10.636 seconds (JVM running for 11.258)"
                }{
                "timestamp":"2019-06-28 16:17:09.603",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-06-28 16:17:09.603",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-06-28 16:17:09.634",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms"
                }{
                "timestamp":"2019-06-28 16:17:09.660",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "832fa322f782174d",
                "span": "832fa322f782174d",
                "pid": "8521",
                "thread": "http-nio-1001-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:17:09.750",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "832fa322f782174d",
                "span": "832fa322f782174d",
                "pid": "8521",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5b1764b9: startup date [Fri Jun 28 16:17:09 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee"
                }{
                "timestamp":"2019-06-28 16:17:09.777",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "832fa322f782174d",
                "span": "832fa322f782174d",
                "pid": "8521",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:17:09.858",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "832fa322f782174d",
                "span": "832fa322f782174d",
                "pid": "8521",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:17:09.896",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "832fa322f782174d",
                "span": "832fa322f782174d",
                "pid": "8521",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:17:09.907",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "832fa322f782174d",
                "span": "832fa322f782174d",
                "pid": "8521",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-b instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-06-28 16:17:09.910",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "832fa322f782174d",
                "span": "832fa322f782174d",
                "pid": "8521",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:17:09.922",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "832fa322f782174d",
                "span": "832fa322f782174d",
                "pid": "8521",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:17:09.924",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "832fa322f782174d",
                "span": "832fa322f782174d",
                "pid": "8521",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-b initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[bogon:1002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:bogon:1002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3754cefc"
                }{
                "timestamp":"2019-06-28 16:17:10.916",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "PollingServerListUpdater-0",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:17:42.993",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "1424807a1ad426c5",
                "span": "1424807a1ad426c5",
                "pid": "8521",
                "thread": "http-nio-1001-exec-2",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:18:41.200",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "88e0715c22ae4c28",
                "span": "88e0715c22ae4c28",
                "pid": "8521",
                "thread": "http-nio-1001-exec-3",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a provide service:add"
                }{
                "timestamp":"2019-06-28 16:18:41.200",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "88e0715c22ae4c28",
                "span": "88e0715c22ae4c28",
                "pid": "8521",
                "thread": "http-nio-1001-exec-3",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a : add method numA is 11 ;numB is 11 "
                }{
                "timestamp":"2019-06-28 16:19:11.339",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "b250e01e592c62f3",
                "span": "a9c374aceada0ebc",
                "pid": "8521",
                "thread": "http-nio-1001-exec-4",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a provide service:add"
                }{
                "timestamp":"2019-06-28 16:19:11.339",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "b250e01e592c62f3",
                "span": "a9c374aceada0ebc",
                "pid": "8521",
                "thread": "http-nio-1001-exec-4",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a : add method numA is 11 ;numB is 21 "
                }{
                "timestamp":"2019-06-28 16:20:52.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 16:25:52.966",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 16:29:34.500",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee: startup date [Fri Jun 28 16:15:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:29:34.500",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-37",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:29:34.501",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:29:34.501",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561710574501, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 16:29:34.501",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:29:34.501",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 16:29:34.502",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 16:29:34.506",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Connection reset"
                }{
                "timestamp":"2019-06-28 16:29:34.506",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-06-28 16:29:34.507",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.SocketException: Connection reset
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:210)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:158)
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:271)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:281)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
{
                "timestamp":"2019-06-28 16:29:34.508",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.SocketException: Connection reset"
                }{
                "timestamp":"2019-06-28 16:29:34.561",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Connection reset"
                }{
                "timestamp":"2019-06-28 16:29:34.561",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.SocketException: Connection reset
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:210)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:158)
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:271)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:281)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-06-28 16:29:34.562",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.SocketException: Connection reset"
                }{
                "timestamp":"2019-06-28 16:29:34.561",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-06-28 16:29:34.562",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration failed Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:29:34.563",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:29:34.564",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$633bfc26.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:673)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 45 common frames omitted
{
                "timestamp":"2019-06-28 16:29:34.564",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 16:29:34.569",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$633bfc26.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
{
                "timestamp":"2019-06-28 16:29:34.571",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 16:29:34.572",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - de-registration failedCannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$633bfc26.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:29:34.575",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 16:29:34.578",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:29:34.580",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 16:29:34.580",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 16:29:34.581",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5b1764b9: startup date [Fri Jun 28 16:17:09 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee"
                }{
                "timestamp":"2019-06-28 16:29:34.582",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:29:34.583",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:29:34.583",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:29:34.586",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@36068727: startup date [Fri Jun 28 16:15:47 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee"
                }{
                "timestamp":"2019-06-28 16:29:34.589",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "8521",
                "thread": "Thread-26",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:33:22.333",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 16:33:22.352",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee: startup date [Fri Jun 28 16:33:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:33:23.054",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-06-28 16:33:23.279",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=0bfe39eb-7fb4-3dee-ac29-235fdd55b37e"
                }{
                "timestamp":"2019-06-28 16:33:23.306",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:33:23.333",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:33:23.361",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$9fb043e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:33:23.420",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$64d3ec51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:33:23.542",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:33:23.557",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$949b4c60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:33:23.592",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e88a91c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:33:23.613",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a2007ee5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:33:23.630",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$4a52523e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:33:24.304",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:33:24.320",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 16:33:24.321",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 16:33:24.416",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 16:33:24.416",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 2064 ms"
                }{
                "timestamp":"2019-06-28 16:33:25.455",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:33:25.455",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:33:25.456",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:33:25.456",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:33:25.456",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:33:25.462",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:33:25.463",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:33:25.463",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:33:25.463",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 16:33:25.587",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@208205ed: startup date [Fri Jun 28 16:33:25 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee"
                }{
                "timestamp":"2019-06-28 16:33:25.602",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:33:26.984",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:33:26.987",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:33:26.989",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:33:26.993",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-06-28 16:33:26.994",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-06-28 16:33:26.997",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-06-28 16:33:27.005",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 16:33:27.006",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 16:33:29.025",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.028",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.032",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:33:29.033",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 16:33:29.034",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.035",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.036",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:33:29.036",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.037",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.037",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.039",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 16:33:29.040",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.042",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.043",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 16:33:29.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-06-28 16:33:29.045",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:33:29.046",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.047",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.047",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.049",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:33:29.051",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.052",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 16:33:29.052",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:33:29.053",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.055",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:33:29.055",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:33:29.055",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.056",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:33:29.538",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-06-28 16:33:29.584",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-06-28 16:33:29.603",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-06-28 16:33:29.606",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:33:29.607",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:33:29.608",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:33:29.608",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:33:29.614",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-contrller Description: feign-contrller Position: 0"
                }{
                "timestamp":"2019-06-28 16:33:29.646",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:33:29.646",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:33:29.652",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:33:29.652",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:33:29.656",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:33:29.656",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:33:29.891",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:33:29.901",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:33:29.922",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:33:29.923",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:33:29.923",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:33:29.923",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:33:29.923",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:33:29.924",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:33:29.925",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:33:29.926",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:33:30.963",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee: startup date [Fri Jun 28 16:33:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:33:30.973",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:33:31.120",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:33:31.120",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:33:31.150",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:33:31.211",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:33:32.245",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:33:32.250",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:33:32.254",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:33:32.254",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:33:32.496",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 16:33:32.644",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 16:33:32.651",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:33:32.653",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:33:32.654",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:33:32.655",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:33:32.655",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:33:32.657",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:33:32.659",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 16:33:32.669",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 16:33:32.681",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 16:33:32.688",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 16:33:32.695",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=8c11eee,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 16:33:32.701",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 16:33:32.961",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:33:32.966",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 16:33:32.994",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 16:33:33.152",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:33:33.153",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:33:33.245",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:33:33.245",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:33:33.371",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 16:33:33.381",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:33:33.381",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:33:33.381",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:33:33.381",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:33:33.381",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:33:33.381",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 16:33:33.381",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:33:33.606",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:33:33.607",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 16:33:33.608",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-06-28 16:33:33.610",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561710813610 with initial instances count: 0"
                }{
                "timestamp":"2019-06-28 16:33:33.696",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 16:33:33.697",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561710813697, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 16:33:33.698",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:33:33.778",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:33:33.828",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:33:33.831",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1001"
                }{
                "timestamp":"2019-06-28 16:33:33.844",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 12.788 seconds (JVM running for 13.486)"
                }{
                "timestamp":"2019-06-28 16:33:42.831",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-06-28 16:33:42.836",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-06-28 16:33:42.868",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms"
                }{
                "timestamp":"2019-06-28 16:33:42.895",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "f1a2a985a490270e",
                "span": "f1a2a985a490270e",
                "pid": "9098",
                "thread": "http-nio-1001-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:33:42.989",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "f1a2a985a490270e",
                "span": "f1a2a985a490270e",
                "pid": "9098",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ddce37f: startup date [Fri Jun 28 16:33:42 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee"
                }{
                "timestamp":"2019-06-28 16:33:43.016",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "f1a2a985a490270e",
                "span": "f1a2a985a490270e",
                "pid": "9098",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:33:43.097",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "f1a2a985a490270e",
                "span": "f1a2a985a490270e",
                "pid": "9098",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:33:43.107",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "f1a2a985a490270e",
                "span": "f1a2a985a490270e",
                "pid": "9098",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:33:43.121",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "f1a2a985a490270e",
                "span": "f1a2a985a490270e",
                "pid": "9098",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-b instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-06-28 16:33:43.124",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "f1a2a985a490270e",
                "span": "f1a2a985a490270e",
                "pid": "9098",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:33:43.128",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "f1a2a985a490270e",
                "span": "f1a2a985a490270e",
                "pid": "9098",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-b initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@571051d8"
                }{
                "timestamp":"2019-06-28 16:33:43.192",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-b
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:34:03.610",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:34:03.611",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:34:03.611",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:34:03.611",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:34:03.611",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:34:03.611",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: false"
                }{
                "timestamp":"2019-06-28 16:34:03.611",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:34:03.637",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:34:14.144",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "PollingServerListUpdater-0",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:35:18.577",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee: startup date [Fri Jun 28 16:33:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:35:18.578",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-42",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:35:18.579",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:35:18.580",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561710918580, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 16:35:18.581",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 16:35:18.582",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 16:35:18.589",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - deregister  status: 200"
                }{
                "timestamp":"2019-06-28 16:35:18.591",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 16:35:18.593",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:35:18.595",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 16:35:18.595",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 16:35:18.596",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ddce37f: startup date [Fri Jun 28 16:33:42 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee"
                }{
                "timestamp":"2019-06-28 16:35:18.597",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:35:18.597",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:35:18.597",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:35:18.601",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@208205ed: startup date [Fri Jun 28 16:33:25 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee"
                }{
                "timestamp":"2019-06-28 16:35:18.603",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9098",
                "thread": "Thread-31",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:35:27.908",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 16:35:27.967",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7e8dcdaa: startup date [Fri Jun 28 16:35:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:35:28.783",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-06-28 16:35:29.004",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=0bfe39eb-7fb4-3dee-ac29-235fdd55b37e"
                }{
                "timestamp":"2019-06-28 16:35:29.026",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:35:29.067",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:35:29.095",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$9fb043e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:35:29.150",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$64d3ec51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:35:29.266",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:35:29.282",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$949b4c60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:35:29.308",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e88a91c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:35:29.321",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a2007ee5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:35:29.334",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$4a52523e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:35:29.711",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:35:29.717",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 16:35:29.718",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 16:35:29.801",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 16:35:29.801",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1835 ms"
                }{
                "timestamp":"2019-06-28 16:35:30.454",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:35:30.456",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:35:30.458",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:35:30.459",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:35:30.460",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:35:30.461",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:35:30.463",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:35:30.464",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:35:30.464",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 16:35:30.603",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@73afe2b7: startup date [Fri Jun 28 16:35:30 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7e8dcdaa"
                }{
                "timestamp":"2019-06-28 16:35:30.623",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:35:31.220",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:35:31.221",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:35:31.222",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:35:31.224",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-06-28 16:35:31.225",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-06-28 16:35:31.225",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-06-28 16:35:31.226",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 16:35:31.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 16:35:32.034",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.035",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 16:35:32.035",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 16:35:32.036",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 16:35:32.036",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:35:32.036",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:35:32.037",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 16:35:32.037",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.038",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:35:32.039",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.039",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.040",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.040",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.042",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.043",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:35:32.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:35:32.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.045",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:35:32.045",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.045",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.046",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:35:32.046",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.047",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-06-28 16:35:32.047",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.047",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.047",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:35:32.352",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-06-28 16:35:32.505",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-06-28 16:35:32.522",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-06-28 16:35:32.525",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:35:32.526",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:35:32.526",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:35:32.526",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:35:32.532",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-contrller Description: feign-contrller Position: 0"
                }{
                "timestamp":"2019-06-28 16:35:32.559",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:35:32.559",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:35:32.565",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:35:32.566",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:35:32.569",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:35:32.569",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:35:32.748",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:35:32.756",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:35:32.779",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:35:32.779",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:35:32.779",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:35:32.779",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:35:32.779",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:35:32.780",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:35:32.781",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:35:32.782",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:35:33.775",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7e8dcdaa: startup date [Fri Jun 28 16:35:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:35:33.824",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:35:34.029",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:35:34.029",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:35:34.054",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:35:34.097",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:35:34.784",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:35:34.784",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:35:34.787",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:35:34.787",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:35:34.964",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 16:35:35.234",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 16:35:35.245",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:35:35.249",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:35:35.250",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:35:35.250",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:35:35.251",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:35:35.253",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:35:35.257",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 16:35:35.271",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 16:35:35.283",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 16:35:35.290",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 16:35:35.299",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7e8dcdaa,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 16:35:35.304",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 16:35:35.586",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:35:35.591",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 16:35:35.618",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 16:35:35.821",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:35:35.821",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:35:35.900",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:35:35.900",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:35:36.012",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 16:35:36.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:35:36.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:35:36.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:35:36.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:35:36.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:35:36.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 16:35:36.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:35:36.164",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:35:36.166",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 16:35:36.170",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-06-28 16:35:36.172",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561710936171 with initial instances count: 1"
                }{
                "timestamp":"2019-06-28 16:35:36.259",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 16:35:36.260",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561710936260, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 16:35:36.261",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:35:36.287",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:35:36.348",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:35:36.349",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1001"
                }{
                "timestamp":"2019-06-28 16:35:36.354",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 9.967 seconds (JVM running for 10.641)"
                }{
                "timestamp":"2019-06-28 16:37:17.773",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-06-28 16:37:17.778",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-06-28 16:37:17.811",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms"
                }{
                "timestamp":"2019-06-28 16:37:17.837",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "59c8a05e70fcd60e",
                "span": "59c8a05e70fcd60e",
                "pid": "9134",
                "thread": "http-nio-1001-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:37:17.926",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "59c8a05e70fcd60e",
                "span": "59c8a05e70fcd60e",
                "pid": "9134",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@736faae6: startup date [Fri Jun 28 16:37:17 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7e8dcdaa"
                }{
                "timestamp":"2019-06-28 16:37:17.952",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "59c8a05e70fcd60e",
                "span": "59c8a05e70fcd60e",
                "pid": "9134",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:37:18.035",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "59c8a05e70fcd60e",
                "span": "59c8a05e70fcd60e",
                "pid": "9134",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:37:18.045",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "59c8a05e70fcd60e",
                "span": "59c8a05e70fcd60e",
                "pid": "9134",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:37:18.057",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "59c8a05e70fcd60e",
                "span": "59c8a05e70fcd60e",
                "pid": "9134",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-b instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-06-28 16:37:18.061",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "59c8a05e70fcd60e",
                "span": "59c8a05e70fcd60e",
                "pid": "9134",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:37:18.072",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "59c8a05e70fcd60e",
                "span": "59c8a05e70fcd60e",
                "pid": "9134",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:37:18.074",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "59c8a05e70fcd60e",
                "span": "59c8a05e70fcd60e",
                "pid": "9134",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-b initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[bogon:1002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:bogon:1002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7563c2a5"
                }{
                "timestamp":"2019-06-28 16:37:19.067",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9134",
                "thread": "PollingServerListUpdater-0",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:37:22.386",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "a5a27b0a111f3aef",
                "span": "acad38acbe887baa",
                "pid": "9134",
                "thread": "http-nio-1001-exec-2",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a provide service:add"
                }{
                "timestamp":"2019-06-28 16:37:22.387",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "a5a27b0a111f3aef",
                "span": "acad38acbe887baa",
                "pid": "9134",
                "thread": "http-nio-1001-exec-2",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a : add method numA is 11 ;numB is 21 "
                }{
                "timestamp":"2019-06-28 16:44:55.086",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 16:44:55.102",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee: startup date [Fri Jun 28 16:44:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:44:55.810",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-06-28 16:44:55.997",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=0bfe39eb-7fb4-3dee-ac29-235fdd55b37e"
                }{
                "timestamp":"2019-06-28 16:44:56.011",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:44:56.038",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:44:56.066",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$9fb043e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:44:56.119",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$64d3ec51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:44:56.238",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:44:56.257",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$949b4c60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:44:56.295",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e88a91c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:44:56.315",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a2007ee5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:44:56.336",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$4a52523e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:44:56.990",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:44:57.002",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 16:44:57.003",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 16:44:57.105",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 16:44:57.106",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 2004 ms"
                }{
                "timestamp":"2019-06-28 16:44:58.114",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:44:58.115",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:44:58.115",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:44:58.115",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:44:58.115",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:44:58.115",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:44:58.116",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:44:58.116",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:44:58.116",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 16:44:58.237",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@36068727: startup date [Fri Jun 28 16:44:58 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee"
                }{
                "timestamp":"2019-06-28 16:44:58.251",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:44:59.393",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:44:59.394",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:44:59.396",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:44:59.400",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-06-28 16:44:59.401",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-06-28 16:44:59.402",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-06-28 16:44:59.405",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 16:44:59.405",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 16:45:01.152",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.153",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.154",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 16:45:01.155",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.156",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-06-28 16:45:01.157",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:45:01.158",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 16:45:01.159",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.160",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.162",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:45:01.164",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.166",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.168",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:45:01.169",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.170",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.170",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.171",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.172",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.173",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.174",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 16:45:01.174",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:45:01.175",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.176",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:45:01.176",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 16:45:01.178",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:45:01.179",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:45:01.179",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.180",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:45:01.586",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-06-28 16:45:01.633",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-06-28 16:45:01.652",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-06-28 16:45:01.655",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:45:01.656",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:45:01.657",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:45:01.657",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:45:01.662",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-contrller Description: feign-contrller Position: 0"
                }{
                "timestamp":"2019-06-28 16:45:01.691",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:45:01.691",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:45:01.696",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:45:01.696",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:45:01.700",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:45:01.700",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:45:01.941",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:45:01.961",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:45:01.995",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:45:01.996",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:45:01.996",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:45:01.996",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:45:01.997",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:45:01.997",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:45:01.998",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:45:01.999",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:45:03.657",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee: startup date [Fri Jun 28 16:44:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:45:03.669",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:45:03.837",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:45:03.837",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:45:03.884",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:45:03.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:45:04.727",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:45:04.727",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:45:04.731",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:45:04.731",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:45:04.983",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 16:45:05.216",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 16:45:05.224",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:45:05.226",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:45:05.226",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:45:05.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:45:05.228",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:45:05.229",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:45:05.232",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 16:45:05.243",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 16:45:05.254",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 16:45:05.261",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 16:45:05.270",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=8c11eee,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 16:45:05.275",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 16:45:05.559",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:45:05.565",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 16:45:05.593",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 16:45:05.756",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:45:05.756",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:45:05.853",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:45:05.853",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:45:05.976",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 16:45:05.985",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:45:05.986",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:45:05.986",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:45:05.986",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:45:05.986",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:45:05.986",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 16:45:05.986",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:45:06.221",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:45:06.223",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 16:45:06.224",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-06-28 16:45:06.226",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561711506226 with initial instances count: 0"
                }{
                "timestamp":"2019-06-28 16:45:06.315",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 16:45:06.316",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561711506316, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 16:45:06.317",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:45:06.402",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:45:06.444",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:45:06.447",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1001"
                }{
                "timestamp":"2019-06-28 16:45:06.460",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 12.581 seconds (JVM running for 13.205)"
                }{
                "timestamp":"2019-06-28 16:45:18.963",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-06-28 16:45:18.965",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-06-28 16:45:18.998",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms"
                }{
                "timestamp":"2019-06-28 16:45:19.023",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "faf9146250dc2982",
                "span": "faf9146250dc2982",
                "pid": "9788",
                "thread": "http-nio-1001-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:45:19.120",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "faf9146250dc2982",
                "span": "faf9146250dc2982",
                "pid": "9788",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@357e5262: startup date [Fri Jun 28 16:45:19 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee"
                }{
                "timestamp":"2019-06-28 16:45:19.149",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "faf9146250dc2982",
                "span": "faf9146250dc2982",
                "pid": "9788",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:45:19.235",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "faf9146250dc2982",
                "span": "faf9146250dc2982",
                "pid": "9788",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:45:19.246",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "faf9146250dc2982",
                "span": "faf9146250dc2982",
                "pid": "9788",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:45:19.258",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "faf9146250dc2982",
                "span": "faf9146250dc2982",
                "pid": "9788",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-b instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-06-28 16:45:19.262",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "faf9146250dc2982",
                "span": "faf9146250dc2982",
                "pid": "9788",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:45:19.265",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "faf9146250dc2982",
                "span": "faf9146250dc2982",
                "pid": "9788",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-b initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4e58d261"
                }{
                "timestamp":"2019-06-28 16:45:19.329",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-b
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:45:36.226",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:45:36.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:45:36.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:45:36.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:45:36.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:45:36.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: false"
                }{
                "timestamp":"2019-06-28 16:45:36.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:45:36.250",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:45:50.262",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-41",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:45:50.262",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee: startup date [Fri Jun 28 16:44:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 16:45:50.264",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:45:50.264",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561711550264, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 16:45:50.264",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 16:45:50.264",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:45:50.264",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 16:45:50.270",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:45:50.271",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - deregister  status: 200"
                }{
                "timestamp":"2019-06-28 16:45:50.273",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 16:45:50.275",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:45:50.277",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 16:45:50.277",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 16:45:50.278",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@357e5262: startup date [Fri Jun 28 16:45:19 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee"
                }{
                "timestamp":"2019-06-28 16:45:50.278",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:45:50.279",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:45:50.279",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:45:50.283",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@36068727: startup date [Fri Jun 28 16:44:58 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@8c11eee"
                }{
                "timestamp":"2019-06-28 16:45:50.285",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9788",
                "thread": "Thread-30",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:46:02.497",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 16:46:02.508",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1: startup date [Fri Jun 28 16:46:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 16:46:03.223",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-06-28 16:46:03.456",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=0bfe39eb-7fb4-3dee-ac29-235fdd55b37e"
                }{
                "timestamp":"2019-06-28 16:46:03.475",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:46:03.503",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:46:03.534",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$66c691f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:46:03.598",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$2bea3a67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:46:03.726",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:46:03.744",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5bb19a76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:46:03.784",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$459ef732] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:46:03.804",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6916ccfb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:46:03.836",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$1168a054] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:46:04.241",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:46:04.248",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 16:46:04.248",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 16:46:04.319",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 16:46:04.319",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1811 ms"
                }{
                "timestamp":"2019-06-28 16:46:05.008",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:46:05.008",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:46:05.008",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:46:05.008",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:46:05.009",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:46:05.009",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:46:05.009",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:46:05.009",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:46:05.009",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 16:46:05.094",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@22bf9122: startup date [Fri Jun 28 16:46:05 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1"
                }{
                "timestamp":"2019-06-28 16:46:05.106",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:46:05.650",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:46:05.650",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:46:05.651",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:46:05.654",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-06-28 16:46:05.654",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-06-28 16:46:05.654",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-06-28 16:46:05.656",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 16:46:05.656",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 16:46:06.457",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.458",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.459",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:46:06.459",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.460",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.461",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:46:06.462",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.462",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.463",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:46:06.464",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 16:46:06.464",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-06-28 16:46:06.465",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.465",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.466",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.466",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.468",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:46:06.468",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 16:46:06.468",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 16:46:06.469",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:46:06.469",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.470",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.471",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:46:06.472",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:46:06.472",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.473",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.473",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 16:46:06.473",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.474",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:46:06.707",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-06-28 16:46:06.880",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-06-28 16:46:06.902",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-06-28 16:46:06.905",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:46:06.907",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:46:06.909",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:46:06.909",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:46:06.918",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-contrller Description: feign-contrller Position: 0"
                }{
                "timestamp":"2019-06-28 16:46:06.956",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:46:06.956",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:46:06.965",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:46:06.965",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:46:06.970",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:46:06.970",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:46:07.141",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:46:07.151",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:46:07.171",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:46:07.171",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:46:07.172",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:46:07.172",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:46:07.172",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:46:07.172",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:46:07.173",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:46:07.174",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:46:08.176",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1: startup date [Fri Jun 28 16:46:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 16:46:08.184",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:46:08.298",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:46:08.298",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:46:08.321",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:46:08.361",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:46:09.087",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:46:09.088",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:46:09.090",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:46:09.091",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:46:09.267",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 16:46:09.444",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 16:46:09.450",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:46:09.452",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:46:09.452",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:46:09.453",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:46:09.453",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:46:09.455",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:46:09.457",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 16:46:09.466",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 16:46:09.474",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 16:46:09.479",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 16:46:09.485",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5cdd09b1,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 16:46:09.489",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 16:46:09.667",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:46:09.675",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 16:46:09.709",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 16:46:09.869",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:46:09.869",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:46:09.934",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:46:09.935",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:46:10.036",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 16:46:10.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:46:10.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:46:10.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:46:10.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:46:10.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:46:10.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 16:46:10.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:46:10.130",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:46:10.131",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 16:46:10.132",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-06-28 16:46:10.134",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561711570134 with initial instances count: 1"
                }{
                "timestamp":"2019-06-28 16:46:10.225",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 16:46:10.226",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561711570226, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 16:46:10.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:46:10.264",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:46:10.325",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:46:10.325",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1001"
                }{
                "timestamp":"2019-06-28 16:46:10.330",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 9.257 seconds (JVM running for 9.965)"
                }{
                "timestamp":"2019-06-28 16:46:16.565",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-06-28 16:46:16.565",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-06-28 16:46:16.597",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms"
                }{
                "timestamp":"2019-06-28 16:46:16.621",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "c7eaff7756456400",
                "span": "c7eaff7756456400",
                "pid": "9799",
                "thread": "http-nio-1001-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:46:16.716",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "c7eaff7756456400",
                "span": "c7eaff7756456400",
                "pid": "9799",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@551ea81e: startup date [Fri Jun 28 16:46:16 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1"
                }{
                "timestamp":"2019-06-28 16:46:16.745",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "c7eaff7756456400",
                "span": "c7eaff7756456400",
                "pid": "9799",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:46:16.833",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "c7eaff7756456400",
                "span": "c7eaff7756456400",
                "pid": "9799",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:46:16.844",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "c7eaff7756456400",
                "span": "c7eaff7756456400",
                "pid": "9799",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:46:16.856",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "c7eaff7756456400",
                "span": "c7eaff7756456400",
                "pid": "9799",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-b instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-06-28 16:46:16.860",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "c7eaff7756456400",
                "span": "c7eaff7756456400",
                "pid": "9799",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:46:16.863",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "c7eaff7756456400",
                "span": "c7eaff7756456400",
                "pid": "9799",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-b initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@512c73ca"
                }{
                "timestamp":"2019-06-28 16:46:16.948",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-b
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:46:18.285",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "de3a10f00eb2b4be",
                "span": "de3a10f00eb2b4be",
                "pid": "9799",
                "thread": "http-nio-1001-exec-2",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:46:18.290",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "http-nio-1001-exec-2",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-b
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:46:18.959",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "2fea5b1fc243553b",
                "span": "2fea5b1fc243553b",
                "pid": "9799",
                "thread": "http-nio-1001-exec-3",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:46:18.963",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "http-nio-1001-exec-3",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-b
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:46:19.533",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "6e633a6303652824",
                "span": "6e633a6303652824",
                "pid": "9799",
                "thread": "http-nio-1001-exec-4",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:46:19.537",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "http-nio-1001-exec-4",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-b
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:46:19.949",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "e2bf2c6790b00c69",
                "span": "e2bf2c6790b00c69",
                "pid": "9799",
                "thread": "http-nio-1001-exec-5",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:46:19.953",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "http-nio-1001-exec-5",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-b
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:46:20.275",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "7bc7fb727f3a8acc",
                "span": "7bc7fb727f3a8acc",
                "pid": "9799",
                "thread": "http-nio-1001-exec-6",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:46:20.278",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "http-nio-1001-exec-6",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-b
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:46:20.479",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "29f12152ccc8732d",
                "span": "29f12152ccc8732d",
                "pid": "9799",
                "thread": "http-nio-1001-exec-7",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:46:20.483",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "http-nio-1001-exec-7",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-b
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:46:20.668",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "20243f4b7b9a83ab",
                "span": "20243f4b7b9a83ab",
                "pid": "9799",
                "thread": "http-nio-1001-exec-8",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:46:20.671",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "http-nio-1001-exec-8",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-b
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:46:20.849",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "2be8f0303c8d16d4",
                "span": "2be8f0303c8d16d4",
                "pid": "9799",
                "thread": "http-nio-1001-exec-9",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:46:20.852",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "http-nio-1001-exec-9",
                "class": "o.a.c.c.C.[.[.[/].[dispatcherServlet]",
                "message": "Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: FeignServiceB#multiplication(Integer,Integer) failed and no fallback available.] with root cause"
                }com.netflix.client.ClientException: Load balancer does not have available server for client: feign-service-b
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at org.springframework.cloud.sleuth.instrument.hystrix.SleuthHystrixConcurrencyStrategy$HystrixTraceCallable.call(SleuthHystrixConcurrencyStrategy.java:154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:46:41.308",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-35",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:46:41.308",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1: startup date [Fri Jun 28 16:46:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 16:46:41.310",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:46:41.311",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561711601311, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 16:46:41.311",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:46:41.311",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 16:46:41.312",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 16:46:41.318",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:46:41.319",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - deregister  status: 200"
                }{
                "timestamp":"2019-06-28 16:46:41.321",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 16:46:41.323",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:46:41.324",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 16:46:41.325",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 16:46:41.325",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@551ea81e: startup date [Fri Jun 28 16:46:16 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1"
                }{
                "timestamp":"2019-06-28 16:46:41.326",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:46:41.326",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:46:41.327",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:46:41.331",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@22bf9122: startup date [Fri Jun 28 16:46:05 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1"
                }{
                "timestamp":"2019-06-28 16:46:41.332",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9799",
                "thread": "Thread-24",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:47:21.771",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 16:47:21.782",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1: startup date [Fri Jun 28 16:47:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 16:47:22.661",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-06-28 16:47:22.920",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=0bfe39eb-7fb4-3dee-ac29-235fdd55b37e"
                }{
                "timestamp":"2019-06-28 16:47:22.952",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:47:23.048",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:47:23.143",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$66c691f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:47:23.277",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$2bea3a67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:47:23.505",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:47:23.530",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5bb19a76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:47:23.596",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$459ef732] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:47:23.639",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6916ccfb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:47:23.670",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$1168a054] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 16:47:24.286",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:47:24.307",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 16:47:24.308",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 16:47:24.402",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 16:47:24.402",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 2620 ms"
                }{
                "timestamp":"2019-06-28 16:47:25.270",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:47:25.271",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:47:25.271",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:47:25.271",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:47:25.272",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:47:25.272",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:47:25.272",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:47:25.272",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 16:47:25.272",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 16:47:25.408",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@65ef48f2: startup date [Fri Jun 28 16:47:25 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1"
                }{
                "timestamp":"2019-06-28 16:47:25.423",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:47:26.589",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:47:26.590",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 16:47:26.592",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:47:26.597",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-06-28 16:47:26.598",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-06-28 16:47:26.598",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-06-28 16:47:26.601",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 16:47:26.602",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 16:47:28.099",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.100",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.101",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.101",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:47:28.102",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 16:47:28.102",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.103",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:47:28.103",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.104",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-06-28 16:47:28.105",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 16:47:28.106",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:47:28.107",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.107",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.108",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.108",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.111",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 16:47:28.112",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:47:28.112",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.113",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:47:28.114",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.114",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.115",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.115",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.116",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 16:47:28.118",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 16:47:28.118",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 16:47:28.118",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.118",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 16:47:28.449",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-06-28 16:47:28.492",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-06-28 16:47:28.516",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-06-28 16:47:28.519",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:47:28.520",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:47:28.521",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:47:28.521",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 16:47:28.527",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-contrller Description: feign-contrller Position: 0"
                }{
                "timestamp":"2019-06-28 16:47:28.555",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:47:28.555",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:47:28.560",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:47:28.560",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:47:28.564",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:47:28.564",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:47:28.722",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:47:28.731",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:47:28.752",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:47:28.752",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:47:28.752",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:47:28.752",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 16:47:28.752",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:47:28.752",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 16:47:28.753",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:47:28.754",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 16:47:29.715",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1: startup date [Fri Jun 28 16:47:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 16:47:29.724",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:47:29.862",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:47:29.862",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:47:29.891",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 16:47:29.936",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 16:47:30.589",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:47:30.589",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:47:30.594",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 16:47:30.594",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 16:47:30.804",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 16:47:31.002",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 16:47:31.009",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:47:31.011",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:47:31.012",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:47:31.012",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:47:31.013",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:47:31.014",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 16:47:31.016",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 16:47:31.027",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 16:47:31.036",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 16:47:31.044",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 16:47:31.050",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5cdd09b1,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 16:47:31.055",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 16:47:31.305",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:47:31.310",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 16:47:31.337",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 16:47:31.493",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:47:31.493",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 16:47:31.557",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:47:31.557",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 16:47:31.678",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 16:47:31.687",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:47:31.687",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:47:31.687",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:47:31.687",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:47:31.688",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:47:31.688",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 16:47:31.688",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:47:31.758",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:47:31.759",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 16:47:31.760",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 4"
                }{
                "timestamp":"2019-06-28 16:47:31.763",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561711651762 with initial instances count: 0"
                }{
                "timestamp":"2019-06-28 16:47:31.844",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 16:47:31.845",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561711651845, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 16:47:31.846",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:47:31.896",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 16:47:31.954",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 16:47:31.955",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1001"
                }{
                "timestamp":"2019-06-28 16:47:31.962",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 11.512 seconds (JVM running for 12.311)"
                }{
                "timestamp":"2019-06-28 16:48:01.763",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 16:48:01.764",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 16:48:01.764",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 16:48:01.764",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 16:48:01.764",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 16:48:01.764",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: false"
                }{
                "timestamp":"2019-06-28 16:48:01.764",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 16:48:01.786",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 16:48:02.109",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-06-28 16:48:02.109",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-06-28 16:48:02.140",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms"
                }{
                "timestamp":"2019-06-28 16:48:02.166",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "3a833ee39c5b2e9e",
                "span": "3a833ee39c5b2e9e",
                "pid": "9869",
                "thread": "http-nio-1001-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 16:48:02.256",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "3a833ee39c5b2e9e",
                "span": "3a833ee39c5b2e9e",
                "pid": "9869",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c1671b9: startup date [Fri Jun 28 16:48:02 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1"
                }{
                "timestamp":"2019-06-28 16:48:02.283",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "3a833ee39c5b2e9e",
                "span": "3a833ee39c5b2e9e",
                "pid": "9869",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 16:48:02.388",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "3a833ee39c5b2e9e",
                "span": "3a833ee39c5b2e9e",
                "pid": "9869",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:48:02.401",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "3a833ee39c5b2e9e",
                "span": "3a833ee39c5b2e9e",
                "pid": "9869",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:48:02.417",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "3a833ee39c5b2e9e",
                "span": "3a833ee39c5b2e9e",
                "pid": "9869",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-b instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-06-28 16:48:02.420",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "3a833ee39c5b2e9e",
                "span": "3a833ee39c5b2e9e",
                "pid": "9869",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:48:02.433",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "3a833ee39c5b2e9e",
                "span": "3a833ee39c5b2e9e",
                "pid": "9869",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:48:02.435",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "3a833ee39c5b2e9e",
                "span": "3a833ee39c5b2e9e",
                "pid": "9869",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-b initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[bogon:1002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:bogon:1002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4892066f"
                }{
                "timestamp":"2019-06-28 16:48:03.427",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "PollingServerListUpdater-0",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 16:48:07.336",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "c7c5b81b24f6e976",
                "span": "64d9a124a752b16e",
                "pid": "9869",
                "thread": "http-nio-1001-exec-2",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a provide service:add"
                }{
                "timestamp":"2019-06-28 16:48:07.336",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "c7c5b81b24f6e976",
                "span": "64d9a124a752b16e",
                "pid": "9869",
                "thread": "http-nio-1001-exec-2",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a : add method numA is 11 ;numB is 21 "
                }{
                "timestamp":"2019-06-28 16:52:31.697",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 16:55:28.836",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-39",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 16:55:28.836",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1: startup date [Fri Jun 28 16:47:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 16:55:28.839",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:55:28.839",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561712128839, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 16:55:28.840",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 16:55:28.840",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 16:55:28.840",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 16:55:28.844",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Broken pipe (Write failed)"
                }{
                "timestamp":"2019-06-28 16:55:28.844",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-06-28 16:55:28.844",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Connection reset"
                }{
                "timestamp":"2019-06-28 16:55:28.844",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-06-28 16:55:28.849",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: org.apache.http.client.ClientProtocolException
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.http.client.ClientProtocolException: null
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:839)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
Caused by: org.apache.http.client.NonRepeatableRequestException: Cannot retry request with a non-repeatable request entity.  The cause lists the reason the original request failed.
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:658)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	... 32 common frames omitted
Caused by: java.net.SocketException: Broken pipe (Write failed)
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at org.apache.http.impl.io.AbstractSessionOutputBuffer.flushBuffer(AbstractSessionOutputBuffer.java:157)
	at org.apache.http.impl.io.AbstractSessionOutputBuffer.flush(AbstractSessionOutputBuffer.java:164)
	at org.apache.http.impl.io.ChunkedOutputStream.close(ChunkedOutputStream.java:203)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.close(UTF8JsonGenerator.java:1092)
	at com.fasterxml.jackson.databind.ObjectWriter._configAndWriteValue(ObjectWriter.java:1163)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:988)
	at com.netflix.discovery.converters.EurekaJacksonCodec.writeTo(EurekaJacksonCodec.java:194)
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.encode(CodecWrappers.java:304)
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.writeTo(DiscoveryJerseyProvider.java:135)
	at com.sun.jersey.api.client.RequestWriter$RequestEntityWriterImpl.writeRequestEntity(RequestWriter.java:231)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler$2.writeTo(ApacheHttpClient4Handler.java:289)
	at org.apache.http.entity.HttpEntityWrapper.writeTo(HttpEntityWrapper.java:94)
	at org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper.writeTo(EntityEnclosingRequestWrapper.java:110)
	at org.apache.http.impl.entity.EntitySerializer.serialize(EntitySerializer.java:118)
	at org.apache.http.impl.AbstractHttpClientConnection.sendRequestEntity(AbstractHttpClientConnection.java:263)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.sendRequestEntity(AbstractClientConnAdapter.java:239)
	at org.apache.http.protocol.HttpRequestExecutor.doSendRequest(HttpRequestExecutor.java:238)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	... 34 common frames omitted
{
                "timestamp":"2019-06-28 16:55:28.850",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: org.apache.http.client.ClientProtocolException"
                }{
                "timestamp":"2019-06-28 16:55:28.898",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Connection reset"
                }{
                "timestamp":"2019-06-28 16:55:28.898",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-06-28 16:55:28.899",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.SocketException: Connection reset
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:210)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:158)
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:271)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:281)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-06-28 16:55:28.901",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$c591cfc6.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:673)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 45 common frames omitted
{
                "timestamp":"2019-06-28 16:55:28.902",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 16:55:28.901",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.SocketException: Connection reset"
                }{
                "timestamp":"2019-06-28 16:55:28.903",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration failed Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:55:28.903",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 16:55:28.904",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$c591cfc6.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
{
                "timestamp":"2019-06-28 16:55:28.906",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 16:55:28.908",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - de-registration failedCannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$c591cfc6.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:55:28.917",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 16:55:28.933",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 16:55:28.940",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 16:55:28.940",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 16:55:28.943",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3c1671b9: startup date [Fri Jun 28 16:48:02 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1"
                }{
                "timestamp":"2019-06-28 16:55:28.944",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 16:55:28.946",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 16:55:28.947",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 16:55:28.953",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@65ef48f2: startup date [Fri Jun 28 16:47:25 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5cdd09b1"
                }{
                "timestamp":"2019-06-28 16:55:28.955",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9869",
                "thread": "Thread-28",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 17:00:17.724",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 17:00:17.733",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2101b44a: startup date [Fri Jun 28 17:00:17 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 17:00:18.332",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-06-28 17:00:18.499",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=bc526d70-ac16-3a72-9282-d664548d966a"
                }{
                "timestamp":"2019-06-28 17:00:18.511",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 17:00:18.537",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 17:00:18.571",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$9fb043e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 17:00:18.622",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$64d3ec51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 17:00:18.731",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 17:00:18.748",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$949b4c60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 17:00:18.784",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e88a91c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 17:00:18.803",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a2007ee5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 17:00:18.821",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$4a52523e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 17:00:19.172",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 17:00:19.178",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 17:00:19.178",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 17:00:19.238",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 17:00:19.238",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1505 ms"
                }{
                "timestamp":"2019-06-28 17:00:19.809",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 17:00:19.809",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 17:00:19.809",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 17:00:19.809",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 17:00:19.810",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 17:00:19.810",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 17:00:19.810",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 17:00:19.810",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 17:00:19.810",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 17:00:19.885",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5c53f292: startup date [Fri Jun 28 17:00:19 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2101b44a"
                }{
                "timestamp":"2019-06-28 17:00:19.894",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 17:00:20.393",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 17:00:20.394",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 17:00:20.395",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-06-28 17:00:20.397",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-06-28 17:00:20.397",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-06-28 17:00:20.398",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-06-28 17:00:20.399",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 17:00:20.400",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 17:00:21.179",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 17:00:21.179",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.180",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 17:00:21.180",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.181",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.182",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 17:00:21.182",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 17:00:21.182",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 17:00:21.183",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.183",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.185",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.186",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 17:00:21.186",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 17:00:21.187",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 17:00:21.187",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.188",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-06-28 17:00:21.188",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.189",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.189",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.189",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.190",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.191",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 17:00:21.191",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 17:00:21.191",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.192",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 17:00:21.192",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.192",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.193",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 17:00:21.498",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-06-28 17:00:21.538",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-06-28 17:00:21.556",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-06-28 17:00:21.560",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 17:00:21.561",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 17:00:21.562",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 17:00:21.562",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 17:00:21.568",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-contrller Description: feign-contrller Position: 0"
                }{
                "timestamp":"2019-06-28 17:00:21.592",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 17:00:21.592",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 17:00:21.596",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 17:00:21.597",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 17:00:21.600",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 17:00:21.600",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 17:00:21.750",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 17:00:21.760",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 17:00:21.792",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 17:00:21.792",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 17:00:21.793",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 17:00:21.793",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 17:00:21.793",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 17:00:21.794",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 17:00:21.796",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 17:00:21.797",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 17:00:22.660",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2101b44a: startup date [Fri Jun 28 17:00:17 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 17:00:22.669",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 17:00:22.788",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 17:00:22.789",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 17:00:22.814",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 17:00:22.871",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 17:00:23.473",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 17:00:23.492",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 17:00:23.496",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 17:00:23.496",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 17:00:23.674",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 17:00:23.862",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 17:00:23.869",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 17:00:23.870",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 17:00:23.871",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 17:00:23.871",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 17:00:23.872",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 17:00:23.873",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 17:00:23.875",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 17:00:23.886",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 17:00:23.897",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 17:00:23.903",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 17:00:23.912",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2101b44a,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 17:00:23.917",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 17:00:24.155",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 17:00:24.184",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 17:00:24.263",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 17:00:24.644",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 17:00:24.645",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 17:00:24.709",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 17:00:24.710",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 17:00:24.808",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 17:00:24.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 17:00:24.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 17:00:24.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 17:00:24.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 17:00:24.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 17:00:24.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 17:00:24.816",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 17:00:25.007",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 17:00:25.008",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 17:00:25.009",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 12"
                }{
                "timestamp":"2019-06-28 17:00:25.011",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561712425011 with initial instances count: 0"
                }{
                "timestamp":"2019-06-28 17:00:25.085",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 17:00:25.085",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561712425085, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 17:00:25.089",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 17:00:25.158",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration status: 204"
                }{
                "timestamp":"2019-06-28 17:00:25.183",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1001 (http)"
                }{
                "timestamp":"2019-06-28 17:00:25.183",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1001"
                }{
                "timestamp":"2019-06-28 17:00:25.189",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 8.573 seconds (JVM running for 9.154)"
                }{
                "timestamp":"2019-06-28 17:00:35.013",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 17:00:35.018",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 17:00:35.018",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 17:00:35.018",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 17:00:35.018",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 17:00:35.018",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: false"
                }{
                "timestamp":"2019-06-28 17:00:35.018",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 17:00:35.039",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-CacheRefreshExecutor-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 17:00:58.076",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "http-nio-1001-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-06-28 17:00:58.076",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-06-28 17:00:58.109",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "http-nio-1001-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms"
                }{
                "timestamp":"2019-06-28 17:00:58.133",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "405d1d6bdee307d3",
                "span": "405d1d6bdee307d3",
                "pid": "9996",
                "thread": "http-nio-1001-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a remote use fegin service b "
                }{
                "timestamp":"2019-06-28 17:00:58.227",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "405d1d6bdee307d3",
                "span": "405d1d6bdee307d3",
                "pid": "9996",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@46511cb6: startup date [Fri Jun 28 17:00:58 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2101b44a"
                }{
                "timestamp":"2019-06-28 17:00:58.255",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "405d1d6bdee307d3",
                "span": "405d1d6bdee307d3",
                "pid": "9996",
                "thread": "hystrix-feign-service-b-1",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 17:00:58.336",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "405d1d6bdee307d3",
                "span": "405d1d6bdee307d3",
                "pid": "9996",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 17:00:58.347",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "405d1d6bdee307d3",
                "span": "405d1d6bdee307d3",
                "pid": "9996",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook installed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 17:00:58.359",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "405d1d6bdee307d3",
                "span": "405d1d6bdee307d3",
                "pid": "9996",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.loadbalancer.BaseLoadBalancer",
                "message": "Client: feign-service-b instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"
                }{
                "timestamp":"2019-06-28 17:00:58.363",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "405d1d6bdee307d3",
                "span": "405d1d6bdee307d3",
                "pid": "9996",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "Using serverListUpdater PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 17:00:58.374",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "405d1d6bdee307d3",
                "span": "405d1d6bdee307d3",
                "pid": "9996",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 17:00:58.375",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "405d1d6bdee307d3",
                "span": "405d1d6bdee307d3",
                "pid": "9996",
                "thread": "hystrix-feign-service-b-1",
                "class": "c.n.l.DynamicServerListLoadBalancer",
                "message": "DynamicServerListLoadBalancer for client feign-service-b initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=feign-service-b,current list of Servers=[bogon:1002],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:bogon:1002;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1fe58061"
                }{
                "timestamp":"2019-06-28 17:00:59.370",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "PollingServerListUpdater-0",
                "class": "c.netflix.config.ChainedDynamicProperty",
                "message": "Flipping property: feign-service-b.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"
                }{
                "timestamp":"2019-06-28 17:01:14.863",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "9b812326be88b49c",
                "span": "01604f45b302530d",
                "pid": "9996",
                "thread": "http-nio-1001-exec-2",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a provide service:add"
                }{
                "timestamp":"2019-06-28 17:01:14.864",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "9b812326be88b49c",
                "span": "01604f45b302530d",
                "pid": "9996",
                "thread": "http-nio-1001-exec-2",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a : add method numA is 65 ;numB is 21 "
                }{
                "timestamp":"2019-06-28 17:01:25.430",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "6f7be98f1b0f0f45",
                "span": "60291aadc66039e1",
                "pid": "9996",
                "thread": "http-nio-1001-exec-4",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a provide service:add"
                }{
                "timestamp":"2019-06-28 17:01:25.430",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "6f7be98f1b0f0f45",
                "span": "60291aadc66039e1",
                "pid": "9996",
                "thread": "http-nio-1001-exec-4",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a : add method numA is 65 ;numB is 21 "
                }{
                "timestamp":"2019-06-28 17:05:24.823",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 17:10:24.830",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 17:15:24.835",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 17:20:24.846",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 17:20:47.438",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-33",
                "class": "c.n.l.PollingServerListUpdater",
                "message": "Shutting down the Executor Pool for PollingServerListUpdater"
                }{
                "timestamp":"2019-06-28 17:20:47.439",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2101b44a: startup date [Fri Jun 28 17:00:17 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 17:20:47.440",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 17:20:47.440",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561713647440, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 17:20:47.441",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 17:20:47.441",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561713647441, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-06-28 17:20:47.441",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001: registering service..."
                }{
                "timestamp":"2019-06-28 17:20:47.441",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 17:20:47.446",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.SocketException: Connection reset
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:210)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:158)
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:271)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:281)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
{
                "timestamp":"2019-06-28 17:20:47.447",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.SocketException: Connection reset"
                }{
                "timestamp":"2019-06-28 17:20:47.494",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:1000: Connection reset"
                }{
                "timestamp":"2019-06-28 17:20:47.494",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.SocketException: Connection reset
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:210)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:158)
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:271)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:281)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-06-28 17:20:47.495",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.SocketException: Connection reset"
                }{
                "timestamp":"2019-06-28 17:20:47.494",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://localhost:1000"
                }{
                "timestamp":"2019-06-28 17:20:47.498",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$7bc01ed5.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:673)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 45 common frames omitted
{
                "timestamp":"2019-06-28 17:20:47.499",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 17:20:47.498",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - registration failed Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 17:20:47.500",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 17:20:47.502",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$7bc01ed5.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
{
                "timestamp":"2019-06-28 17:20:47.503",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 17:20:47.503",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1001 - de-registration failedCannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$7bc01ed5.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 17:20:47.505",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 17:20:47.508",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 17:20:47.510",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 17:20:47.510",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 17:20:47.511",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@46511cb6: startup date [Fri Jun 28 17:00:58 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2101b44a"
                }{
                "timestamp":"2019-06-28 17:20:47.512",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 17:20:47.513",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Shutdown hook removed for: NFLoadBalancer-PingTimer-feign-service-b"
                }{
                "timestamp":"2019-06-28 17:20:47.513",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "c.n.util.concurrent.ShutdownEnabledTimer",
                "message": "Exception caught (might be ok if at shutdown)"
                }java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 17:20:47.517",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5c53f292: startup date [Fri Jun 28 17:00:19 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2101b44a"
                }{
                "timestamp":"2019-06-28 17:20:47.519",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "9996",
                "thread": "Thread-22",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 20:11:27.729",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 20:11:27.741",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@55562aa9: startup date [Fri Jun 28 20:11:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 20:11:28.483",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-06-28 20:11:28.667",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=bc186a50-a484-3970-9d6e-cecc6e97aa1c"
                }{
                "timestamp":"2019-06-28 20:11:28.681",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 20:11:28.713",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 20:11:28.743",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$9fb043e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 20:11:28.811",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$64d3ec51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 20:11:28.946",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 20:11:28.962",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$949b4c60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 20:11:28.994",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7e88a91c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 20:11:29.009",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a2007ee5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 20:11:29.025",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$4a52523e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 20:11:29.388",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1100 (http)"
                }{
                "timestamp":"2019-06-28 20:11:29.394",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 20:11:29.394",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 20:11:29.461",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 20:11:29.461",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1720 ms"
                }{
                "timestamp":"2019-06-28 20:11:30.024",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 20:11:30.024",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 20:11:30.024",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 20:11:30.025",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 20:11:30.025",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 20:11:30.025",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 20:11:30.025",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 20:11:30.025",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 20:11:30.025",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 20:11:30.112",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@fd413fb: startup date [Fri Jun 28 20:11:30 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@55562aa9"
                }{
                "timestamp":"2019-06-28 20:11:30.122",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 20:11:30.610",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 20:11:30.611",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 20:11:30.611",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-06-28 20:11:30.616",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-06-28 20:11:30.617",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-06-28 20:11:30.617",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-06-28 20:11:30.619",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 20:11:30.619",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 20:11:31.373",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 20:11:31.374",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 20:11:31.374",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 20:11:31.374",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 20:11:31.375",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 20:11:31.375",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.376",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 20:11:31.376",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 20:11:31.377",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.377",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 20:11:31.377",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.378",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.380",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 20:11:31.380",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.380",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.381",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 20:11:31.382",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 20:11:31.382",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.382",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.383",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-06-28 20:11:31.383",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.383",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.384",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.384",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.384",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.385",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.385",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.385",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 20:11:31.599",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-06-28 20:11:31.763",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-06-28 20:11:31.782",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-06-28 20:11:31.785",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 20:11:31.787",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 20:11:31.788",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 20:11:31.788",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 20:11:31.798",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-contrller Description: feign-contrller Position: 0"
                }{
                "timestamp":"2019-06-28 20:11:31.832",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 20:11:31.832",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 20:11:31.840",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 20:11:31.840",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 20:11:31.844",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 20:11:31.844",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 20:11:31.986",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 20:11:32.001",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 20:11:32.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 20:11:32.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 20:11:32.021",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 20:11:32.021",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 20:11:32.021",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 20:11:32.021",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 20:11:32.022",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 20:11:32.023",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 20:11:32.676",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 20:11:32.683",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 20:11:32.687",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 20:11:32.687",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 20:11:32.925",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@55562aa9: startup date [Fri Jun 28 20:11:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 20:11:32.935",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 20:11:33.073",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 20:11:33.073",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 20:11:33.107",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 20:11:33.162",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 20:11:33.803",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 20:11:33.925",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 20:11:33.932",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 20:11:33.933",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 20:11:33.934",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 20:11:33.934",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 20:11:33.935",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 20:11:33.935",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 20:11:33.937",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 20:11:33.946",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 20:11:33.953",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 20:11:33.958",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 20:11:33.964",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=55562aa9,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 20:11:33.968",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 20:11:34.178",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 20:11:34.183",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 20:11:34.204",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 20:11:34.325",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 20:11:34.325",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 20:11:34.372",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 20:11:34.372",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 20:11:34.480",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 20:11:34.487",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 20:11:34.488",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 20:11:34.488",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 20:11:34.488",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 20:11:34.488",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 20:11:34.488",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 20:11:34.488",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 20:11:34.521",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1013)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:927)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:408)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:266)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:262)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:60)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:228)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$85f1a23b.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$85f1a23b$$FastClassBySpringCGLIB$$e87718ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$85f1a23b.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:345)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:359)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:176)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:340)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:133)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:122)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:56)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:37)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:73)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:175)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:348)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:151)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:114)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:880)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.FeignServiceAApplication.main(FeignServiceAApplication.java:22)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 68 common frames omitted
{
                "timestamp":"2019-06-28 20:11:34.522",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 20:11:34.523",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1100 - was unable to refresh its cache! status = Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1013)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:927)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:408)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:266)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:262)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:60)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:228)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$85f1a23b.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$85f1a23b$$FastClassBySpringCGLIB$$e87718ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$85f1a23b.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:345)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:359)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:176)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:340)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:133)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:122)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:56)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:37)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:73)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:175)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:50)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:348)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:151)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:114)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:880)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:144)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:134)
	at com.tailen.microservice.FeignServiceAApplication.main(FeignServiceAApplication.java:22)
{
                "timestamp":"2019-06-28 20:11:34.523",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Using default backup registry implementation which does not do anything."
                }{
                "timestamp":"2019-06-28 20:11:34.524",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 20:11:34.525",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 12"
                }{
                "timestamp":"2019-06-28 20:11:34.527",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561723894526 with initial instances count: 0"
                }{
                "timestamp":"2019-06-28 20:11:34.596",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 20:11:34.597",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561723894597, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 20:11:34.601",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-06-28 20:11:34.608",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-06-28 20:11:34.608",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 20:11:34.608",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1100 - registration failed Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 20:11:34.608",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 20:11:34.609",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-06-28 20:11:34.609",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-06-28 20:11:34.610",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 20:11:34.610",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1100 - registration failed Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 20:11:34.610",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 20:11:34.679",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1100 (http)"
                }{
                "timestamp":"2019-06-28 20:11:34.679",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1100"
                }{
                "timestamp":"2019-06-28 20:11:34.685",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 7.656 seconds (JVM running for 18.159)"
                }{
                "timestamp":"2019-06-28 20:11:41.895",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@55562aa9: startup date [Fri Jun 28 20:11:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@44c03695"
                }{
                "timestamp":"2019-06-28 20:11:41.896",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 20:11:41.896",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561723901896, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 20:11:41.896",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 20:11:41.897",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-06-28 20:11:41.897",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 20:11:41.898",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-06-28 20:11:41.898",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 20:11:41.898",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1100 - registration failed Cannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 20:11:41.898",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 20:11:41.898",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$75a15706.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
{
                "timestamp":"2019-06-28 20:11:41.899",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 20:11:41.899",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1100 - de-registration failedCannot execute request on any known server"
                }com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:111)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$75a15706.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 20:11:41.902",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 20:11:41.905",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 20:11:41.908",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 20:11:41.908",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 20:11:41.935",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@fd413fb: startup date [Fri Jun 28 20:11:30 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@55562aa9"
                }{
                "timestamp":"2019-06-28 20:11:41.936",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "675",
                "thread": "Thread-6",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 21:00:21.137",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 21:00:21.149",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@35e5d0e5: startup date [Fri Jun 28 21:00:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 21:00:21.909",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-06-28 21:00:22.123",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=bc186a50-a484-3970-9d6e-cecc6e97aa1c"
                }{
                "timestamp":"2019-06-28 21:00:22.143",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 21:00:22.177",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:00:22.214",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$66c691f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:00:22.277",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$2bea3a67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:00:22.430",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:00:22.444",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5bb19a76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:00:22.473",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$459ef732] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:00:22.490",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6916ccfb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:00:22.507",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$1168a054] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:00:22.901",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1100 (http)"
                }{
                "timestamp":"2019-06-28 21:00:22.907",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 21:00:22.907",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 21:00:22.978",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 21:00:22.979",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 1830 ms"
                }{
                "timestamp":"2019-06-28 21:00:23.841",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:00:23.841",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:00:23.841",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:00:23.841",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:00:23.842",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:00:23.842",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:00:23.843",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:00:23.843",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:00:23.843",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 21:00:23.990",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e3df614: startup date [Fri Jun 28 21:00:23 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@35e5d0e5"
                }{
                "timestamp":"2019-06-28 21:00:24.003",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 21:00:24.560",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 21:00:24.561",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 21:00:24.562",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-06-28 21:00:24.564",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-06-28 21:00:24.565",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-06-28 21:00:24.565",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-06-28 21:00:24.567",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 21:00:24.567",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 21:00:25.438",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 21:00:25.438",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 21:00:25.439",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.439",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.440",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.440",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.441",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.441",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.442",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 21:00:25.443",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.443",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.444",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 21:00:25.444",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 21:00:25.445",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.445",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 21:00:25.446",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.447",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.447",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.447",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 21:00:25.447",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 21:00:25.448",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 21:00:25.448",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-06-28 21:00:25.449",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 21:00:25.449",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 21:00:25.449",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.450",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.450",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.450",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:00:25.804",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-06-28 21:00:25.841",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-06-28 21:00:25.857",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-06-28 21:00:25.859",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 21:00:25.860",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 21:00:25.861",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 21:00:25.861",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 21:00:25.867",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-contrller Description: feign-contrller Position: 0"
                }{
                "timestamp":"2019-06-28 21:00:25.892",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:00:25.893",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:00:25.897",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:00:25.898",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:00:25.901",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 21:00:25.901",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 21:00:26.047",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 21:00:26.059",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 21:00:26.085",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:00:26.086",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:00:26.086",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:00:26.086",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:00:26.086",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 21:00:26.086",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 21:00:26.088",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 21:00:26.089",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 21:00:26.847",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 21:00:26.853",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 21:00:26.858",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 21:00:26.858",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 21:00:27.074",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@35e5d0e5: startup date [Fri Jun 28 21:00:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 21:00:27.083",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 21:00:27.213",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 21:00:27.213",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 21:00:27.237",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 21:00:27.279",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 21:00:28.053",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 21:00:28.177",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 21:00:28.184",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 21:00:28.185",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 21:00:28.186",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 21:00:28.186",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 21:00:28.187",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 21:00:28.188",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 21:00:28.189",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 21:00:28.199",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 21:00:28.206",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 21:00:28.211",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 21:00:28.216",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=35e5d0e5,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 21:00:28.220",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 21:00:28.454",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 21:00:28.459",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 21:00:28.484",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 21:00:28.612",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 21:00:28.612",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 21:00:28.663",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 21:00:28.663",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 21:00:28.781",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 21:00:28.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 21:00:28.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 21:00:28.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 21:00:28.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 21:00:28.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 21:00:28.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 21:00:28.790",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 21:00:28.873",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 21:00:28.874",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 21:00:28.876",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 12"
                }{
                "timestamp":"2019-06-28 21:00:28.877",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561726828877 with initial instances count: 2"
                }{
                "timestamp":"2019-06-28 21:00:28.972",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 21:00:28.973",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561726828973, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 21:00:28.978",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-06-28 21:00:29.010",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - registration status: 204"
                }{
                "timestamp":"2019-06-28 21:00:29.069",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1100 (http)"
                }{
                "timestamp":"2019-06-28 21:00:29.070",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1100"
                }{
                "timestamp":"2019-06-28 21:00:29.076",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 9.235 seconds (JVM running for 9.843)"
                }{
                "timestamp":"2019-06-28 21:02:37.056",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "Thread-24",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@35e5d0e5: startup date [Fri Jun 28 21:00:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 21:02:37.057",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "Thread-24",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 21:02:37.057",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561726957057, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 21:02:37.058",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 21:02:37.058",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561726957058, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-06-28 21:02:37.058",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-06-28 21:02:37.058",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 21:02:37.062",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - registration status: 204"
                }{
                "timestamp":"2019-06-28 21:02:37.062",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/10.0.1.31:feign-service-a:1100 - deregister  status: 200"
                }{
                "timestamp":"2019-06-28 21:02:37.065",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "Thread-24",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 21:02:37.067",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "Thread-24",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 21:02:37.069",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "Thread-24",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 21:02:37.069",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "Thread-24",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 21:02:37.071",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "Thread-24",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e3df614: startup date [Fri Jun 28 21:00:23 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@35e5d0e5"
                }{
                "timestamp":"2019-06-28 21:02:37.073",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1101",
                "thread": "Thread-24",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 21:02:48.292",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "No active profile set, falling back to default profiles: default"
                }{
                "timestamp":"2019-06-28 21:02:48.324",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@35e5d0e5: startup date [Fri Jun 28 21:02:48 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 21:02:50.292",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.f.s.DefaultListableBeanFactory",
                "message": "Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]"
                }{
                "timestamp":"2019-06-28 21:02:50.608",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.cloud.context.scope.GenericScope",
                "message": "BeanFactory id=bc186a50-a484-3970-9d6e-cecc6e97aa1c"
                }{
                "timestamp":"2019-06-28 21:02:50.629",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 21:02:50.671",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'com.tailen.microservice.manager.FeignServiceB' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:02:50.804",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$DefaultAsyncConfigurerSupport$$EnhancerBySpringCGLIB$$66c691f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:02:51.020",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration' of type [org.springframework.cloud.sleuth.annotation.SleuthAnnotationAutoConfiguration$$EnhancerBySpringCGLIB$$2bea3a67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:02:51.165",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'sleuthAdvisorConfig' of type [org.springframework.cloud.sleuth.annotation.SleuthAdvisorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:02:51.186",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5bb19a76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:02:51.229",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$459ef732] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:02:51.256",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [org.springframework.cloud.sleuth.instrument.web.client.feign.TraceFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6916ccfb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:02:51.279",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
                "message": "Bean 'org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration' of type [org.springframework.cloud.sleuth.instrument.async.AsyncDefaultAutoConfiguration$$EnhancerBySpringCGLIB$$1168a054] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"
                }{
                "timestamp":"2019-06-28 21:02:51.746",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat initialized with port(s): 1100 (http)"
                }{
                "timestamp":"2019-06-28 21:02:51.753",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardService",
                "message": "Starting service [Tomcat]"
                }{
                "timestamp":"2019-06-28 21:02:51.754",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "org.apache.catalina.core.StandardEngine",
                "message": "Starting Servlet Engine: Apache Tomcat/8.5.15"
                }{
                "timestamp":"2019-06-28 21:02:51.835",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "localhost-startStop-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring embedded WebApplicationContext"
                }{
                "timestamp":"2019-06-28 21:02:51.835",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "localhost-startStop-1",
                "class": "o.s.web.context.ContextLoader",
                "message": "Root WebApplicationContext: initialization completed in 3512 ms"
                }{
                "timestamp":"2019-06-28 21:02:52.684",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'metricsFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:02:52.685",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'characterEncodingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:02:52.685",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'traceFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:02:52.685",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'hiddenHttpMethodFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:02:52.685",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'httpPutFormContentFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:02:52.685",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'requestContextFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:02:52.685",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'webRequestLoggingFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:02:52.686",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.web.servlet.FilterRegistrationBean",
                "message": "Mapping filter: 'applicationContextIdFilter' to: [/*]"
                }{
                "timestamp":"2019-06-28 21:02:52.686",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "localhost-startStop-1",
                "class": "o.s.b.w.servlet.ServletRegistrationBean",
                "message": "Mapping servlet: 'dispatcherServlet' to [/]"
                }{
                "timestamp":"2019-06-28 21:02:52.808",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@32091c14: startup date [Fri Jun 28 21:02:52 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@35e5d0e5"
                }{
                "timestamp":"2019-06-28 21:02:52.822",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.f.a.AutowiredAnnotationBeanPostProcessor",
                "message": "JSR-330 'javax.inject.Inject' annotation found and supported for autowiring"
                }{
                "timestamp":"2019-06-28 21:02:53.435",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/add],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.add(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 21:02:53.436",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/api/multiplication],methods=[GET]}" onto public java.lang.Integer com.tailen.microservice.contrller.FeignContrller.multiplication(java.lang.Integer,java.lang.Integer)"
                }{
                "timestamp":"2019-06-28 21:02:53.437",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/v2/api-docs],methods=[GET]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String)"
                }{
                "timestamp":"2019-06-28 21:02:53.441",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()"
                }{
                "timestamp":"2019-06-28 21:02:53.441",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()"
                }{
                "timestamp":"2019-06-28 21:02:53.442",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()"
                }{
                "timestamp":"2019-06-28 21:02:53.444",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)"
                }{
                "timestamp":"2019-06-28 21:02:53.445",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerMapping",
                "message": "Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
                }{
                "timestamp":"2019-06-28 21:02:54.474",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 21:02:54.474",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.475",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.477",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)"
                }{
                "timestamp":"2019-06-28 21:02:54.478",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 21:02:54.479",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.479",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.480",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException"
                }{
                "timestamp":"2019-06-28 21:02:54.481",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()"
                }{
                "timestamp":"2019-06-28 21:02:54.482",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.484",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)"
                }{
                "timestamp":"2019-06-28 21:02:54.484",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.485",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.487",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.488",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.488",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)"
                }{
                "timestamp":"2019-06-28 21:02:54.491",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()"
                }{
                "timestamp":"2019-06-28 21:02:54.492",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.493",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.495",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)"
                }{
                "timestamp":"2019-06-28 21:02:54.496",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)"
                }{
                "timestamp":"2019-06-28 21:02:54.497",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.497",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.499",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.502",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.502",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()"
                }{
                "timestamp":"2019-06-28 21:02:54.502",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)"
                }{
                "timestamp":"2019-06-28 21:02:54.503",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.a.e.mvc.EndpointHandlerMapping",
                "message": "Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()"
                }{
                "timestamp":"2019-06-28 21:02:54.948",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Context refreshed"
                }{
                "timestamp":"2019-06-28 21:02:54.996",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.s.w.p.DocumentationPluginsBootstrapper",
                "message": "Found {0} custom documentation plugin(s)"
                }{
                "timestamp":"2019-06-28 21:02:55.023",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Scanning for api listing references"
                }{
                "timestamp":"2019-06-28 21:02:55.026",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 21:02:55.028",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: add belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 21:02:55.029",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 21:02:55.029",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Request mapping: multiplication belongs to groups: [[ResourceGroup{groupName='feign-contrller', position=0, controller=com.tailen.microservice.contrller.FeignContrller}]] "
                }{
                "timestamp":"2019-06-28 21:02:55.040",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.s.w.s.ApiListingReferenceScanner",
                "message": "Created resource listing Path: /default/feign-contrller Description: feign-contrller Position: 0"
                }{
                "timestamp":"2019-06-28 21:02:55.075",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:02:55.076",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:02:55.083",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:02:55.083",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:02:55.087",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 21:02:55.087",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/add.com.tailen.microservice.contrller.FeignContrller.add.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 21:02:55.331",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 21:02:55.341",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method add was feign-contrller"
                }{
                "timestamp":"2019-06-28 21:02:55.362",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:02:55.363",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache models with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:02:55.363",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.schema.ModelContextKeyGenerator",
                "message": "Cache Key Generated: java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:02:55.363",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache modelDependencies with key java.lang.Integer(true)"
                }{
                "timestamp":"2019-06-28 21:02:55.363",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.spring.web.OperationsKeyGenerator",
                "message": "Cache key generated: /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 21:02:55.363",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.spring.web.caching.CachingAspect",
                "message": "Caching aspect applied for cache operations with key /api/multiplication.com.tailen.microservice.contrller.FeignContrller.multiplication.DefaultGenericTypeNamingStrategy"
                }{
                "timestamp":"2019-06-28 21:02:55.364",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 21:02:55.365",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "s.d.s.w.ClassOrApiAnnotationResourceGrouping",
                "message": "Group for method multiplication was feign-contrller"
                }{
                "timestamp":"2019-06-28 21:02:56.302",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 21:02:56.302",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 21:02:56.306",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "No URLs will be polled as dynamic configuration sources."
                }{
                "timestamp":"2019-06-28 21:02:56.306",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "c.n.c.sources.URLConfigurationSource",
                "message": "To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."
                }{
                "timestamp":"2019-06-28 21:02:56.610",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@35e5d0e5: startup date [Fri Jun 28 21:02:48 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 21:02:56.621",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.RequestMappingHandlerAdapter",
                "message": "Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 21:02:56.773",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 21:02:56.773",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 21:02:56.806",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver",
                "message": "Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice"
                }{
                "timestamp":"2019-06-28 21:02:56.862",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.w.s.handler.SimpleUrlHandlerMapping",
                "message": "Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]"
                }{
                "timestamp":"2019-06-28 21:02:57.705",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.s.concurrent.ThreadPoolTaskScheduler",
                "message": "Initializing ExecutorService "
                }{
                "timestamp":"2019-06-28 21:02:57.854",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Registering beans for JMX exposure on startup"
                }{
                "timestamp":"2019-06-28 21:02:57.864",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'environmentManager' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 21:02:57.866",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 21:02:57.867",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 21:02:57.867",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'restartEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 21:02:57.868",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 21:02:57.870",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Bean with name 'refreshScope' has been autodetected for JMX exposure"
                }{
                "timestamp":"2019-06-28 21:02:57.872",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]"
                }{
                "timestamp":"2019-06-28 21:02:57.883",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]"
                }{
                "timestamp":"2019-06-28 21:02:57.894",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]"
                }{
                "timestamp":"2019-06-28 21:02:57.902",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]"
                }{
                "timestamp":"2019-06-28 21:02:57.909",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=35e5d0e5,type=ConfigurationPropertiesRebinder]"
                }{
                "timestamp":"2019-06-28 21:02:57.916",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]"
                }{
                "timestamp":"2019-06-28 21:02:58.241",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Starting beans in phase 0"
                }{
                "timestamp":"2019-06-28 21:02:58.246",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.c.netflix.eureka.InstanceInfoFactory",
                "message": "Setting initial instance status as: STARTING"
                }{
                "timestamp":"2019-06-28 21:02:58.313",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Initializing Eureka in region us-east-1"
                }{
                "timestamp":"2019-06-28 21:02:58.705",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON encoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 21:02:58.705",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using JSON decoding codec LegacyJacksonJson"
                }{
                "timestamp":"2019-06-28 21:02:58.774",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML encoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 21:02:58.774",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "c.n.d.provider.DiscoveryJerseyProvider",
                "message": "Using XML decoding codec XStreamXml"
                }{
                "timestamp":"2019-06-28 21:02:58.900",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 21:02:58.909",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Disable delta property : false"
                }{
                "timestamp":"2019-06-28 21:02:58.910",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Single vip registry refresh property : null"
                }{
                "timestamp":"2019-06-28 21:02:58.910",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Force full registry fetch : false"
                }{
                "timestamp":"2019-06-28 21:02:58.910",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application is null : false"
                }{
                "timestamp":"2019-06-28 21:02:58.910",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Registered Applications size is zero : true"
                }{
                "timestamp":"2019-06-28 21:02:58.910",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Application version is -1: true"
                }{
                "timestamp":"2019-06-28 21:02:58.910",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Getting all instance registry info from the eureka server"
                }{
                "timestamp":"2019-06-28 21:02:59.021",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "The response status is 200"
                }{
                "timestamp":"2019-06-28 21:02:59.023",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Starting heartbeat executor: renew interval is: 30"
                }{
                "timestamp":"2019-06-28 21:02:59.024",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "InstanceInfoReplicator onDemand update allowed rate per min is 12"
                }{
                "timestamp":"2019-06-28 21:02:59.026",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Discovery Client initialized at timestamp 1561726979026 with initial instances count: 4"
                }{
                "timestamp":"2019-06-28 21:02:59.110",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Registering application feign-service-a with eureka with status UP"
                }{
                "timestamp":"2019-06-28 21:02:59.111",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561726979111, current=UP, previous=STARTING]"
                }{
                "timestamp":"2019-06-28 21:02:59.114",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-06-28 21:02:59.148",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1100 - registration status: 204"
                }{
                "timestamp":"2019-06-28 21:02:59.234",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.b.c.e.t.TomcatEmbeddedServletContainer",
                "message": "Tomcat started on port(s): 1100 (http)"
                }{
                "timestamp":"2019-06-28 21:02:59.235",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "o.s.c.n.e.s.EurekaAutoServiceRegistration",
                "message": "Updating port to 1100"
                }{
                "timestamp":"2019-06-28 21:02:59.241",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "main",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "Started FeignServiceAApplication in 12.671 seconds (JVM running for 13.443)"
                }{
                "timestamp":"2019-06-28 21:03:37.362",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "http-nio-1100-exec-1",
                "class": "o.a.c.c.C.[Tomcat].[localhost].[/]",
                "message": "Initializing Spring FrameworkServlet 'dispatcherServlet'"
                }{
                "timestamp":"2019-06-28 21:03:37.365",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "http-nio-1100-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization started"
                }{
                "timestamp":"2019-06-28 21:03:37.397",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "http-nio-1100-exec-1",
                "class": "o.s.web.servlet.DispatcherServlet",
                "message": "FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms"
                }{
                "timestamp":"2019-06-28 21:03:37.423",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "056272dda6a5f480",
                "span": "19b7291e3ab715d0",
                "pid": "1115",
                "thread": "http-nio-1100-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a provide service:add"
                }{
                "timestamp":"2019-06-28 21:03:37.423",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "056272dda6a5f480",
                "span": "19b7291e3ab715d0",
                "pid": "1115",
                "thread": "http-nio-1100-exec-1",
                "class": "c.t.m.FeignServiceAApplication",
                "message": "fegin service a : add method numA is 12 ;numB is 1 "
                }{
                "timestamp":"2019-06-28 21:07:58.917",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "AsyncResolver-bootstrap-executor-0",
                "class": "c.n.d.s.r.aws.ConfigClusterResolver",
                "message": "Resolving eureka endpoints via configuration"
                }{
                "timestamp":"2019-06-28 21:08:41.352",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext",
                "message": "Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@35e5d0e5: startup date [Fri Jun 28 21:02:48 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec"
                }{
                "timestamp":"2019-06-28 21:08:41.353",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "o.s.c.n.e.s.EurekaServiceRegistry",
                "message": "Unregistering application feign-service-a with eureka with status DOWN"
                }{
                "timestamp":"2019-06-28 21:08:41.353",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561727321353, current=DOWN, previous=UP]"
                }{
                "timestamp":"2019-06-28 21:08:41.353",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Shutting down DiscoveryClient ..."
                }{
                "timestamp":"2019-06-28 21:08:41.354",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Saw local status change event StatusChangeEvent [timestamp=1561727321354, current=UP, previous=DOWN]"
                }{
                "timestamp":"2019-06-28 21:08:41.356",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.netflix.appinfo.ApplicationInfoManager",
                "message": "failed to notify listener: statusChangeListener"
                }java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@79d6beb9 rejected from java.util.concurrent.ScheduledThreadPoolExecutor@48451c63[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 38]
	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2063)
	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:830)
	at java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute(ScheduledThreadPoolExecutor.java:326)
	at java.util.concurrent.ScheduledThreadPoolExecutor.schedule(ScheduledThreadPoolExecutor.java:533)
	at java.util.concurrent.ScheduledThreadPoolExecutor.submit(ScheduledThreadPoolExecutor.java:632)
	at com.netflix.discovery.InstanceInfoReplicator.onDemandUpdate(InstanceInfoReplicator.java:77)
	at com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1281)
	at com.netflix.appinfo.ApplicationInfoManager.setInstanceStatus(ApplicationInfoManager.java:177)
	at com.netflix.appinfo.ApplicationInfoManager$$FastClassBySpringCGLIB$$ca6abd37.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:133)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:121)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.netflix.appinfo.ApplicationInfoManager$$EnhancerBySpringCGLIB$$13663410.setInstanceStatus(<generated>)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1369)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:100)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 21:08:41.356",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1100: registering service..."
                }{
                "timestamp":"2019-06-28 21:08:41.356",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Unregistering ..."
                }{
                "timestamp":"2019-06-28 21:08:41.358",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$7b7450f2.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 45 common frames omitted
{
                "timestamp":"2019-06-28 21:08:41.359",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
{
                "timestamp":"2019-06-28 21:08:41.359",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 21:08:41.359",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 21:08:41.361",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-06-28 21:08:41.362",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$7b7450f2.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
{
                "timestamp":"2019-06-28 21:08:41.362",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 21:08:41.362",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 21:08:41.416",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "I/O exception (java.net.SocketException) caught when processing request to {}->http://10.0.1.31:1001: Connection reset"
                }{
                "timestamp":"2019-06-28 21:08:41.417",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "o.a.http.impl.client.DefaultHttpClient",
                "message": "Retrying request to {}->http://10.0.1.31:1001"
                }{
                "timestamp":"2019-06-28 21:08:41.417",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.SocketException: Connection reset
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:210)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:158)
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82)
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:271)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:281)
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257)
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
{
                "timestamp":"2019-06-28 21:08:41.417",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "c.n.d.s.t.d.RedirectingEurekaHttpClient",
                "message": "Request execution error"
                }com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:119)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$7b7450f2.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:673)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
{
                "timestamp":"2019-06-28 21:08:41.418",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.ConnectException: Connection refused (Connection refused)"
                }{
                "timestamp":"2019-06-28 21:08:41.418",
                "level": "ERROR",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1100 - de-registration failedRetry limit reached; giving up on completing the request"
                }com.netflix.discovery.shared.transport.TransportException: Retry limit reached; giving up on completing the request
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:138)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:885)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:863)
	at com.netflix.discovery.DiscoveryClient$$FastClassBySpringCGLIB$$a84c8cb4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.cloud.context.config.StandardBeanLifecycleDecorator$2.invoke(StandardBeanLifecycleDecorator.java:85)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient$$EnhancerBySpringCGLIB$$7b7450f2.shutdown(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:71)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.stop(EurekaAutoServiceRegistration.java:82)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:253)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
{
                "timestamp":"2019-06-28 21:08:41.417",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.d.s.t.d.RetryableEurekaHttpClient",
                "message": "Request execution failed with message: java.net.SocketException: Connection reset"
                }{
                "timestamp":"2019-06-28 21:08:41.419",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "DiscoveryClient_FEIGN-SERVICE-A/bogon:feign-service-a:1100 - registration failed Retry limit reached; giving up on completing the request"
                }com.netflix.discovery.shared.transport.TransportException: Retry limit reached; giving up on completing the request
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:138)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 21:08:41.419",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "DiscoveryClient-InstanceInfoReplicator-0",
                "class": "c.n.discovery.InstanceInfoReplicator",
                "message": "There was a problem with the instance info replicator"
                }com.netflix.discovery.shared.transport.TransportException: Retry limit reached; giving up on completing the request
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:138)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:798)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:104)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:88)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{
                "timestamp":"2019-06-28 21:08:41.423",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "com.netflix.discovery.DiscoveryClient",
                "message": "Completed shut down of DiscoveryClient"
                }{
                "timestamp":"2019-06-28 21:08:41.425",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "o.s.c.support.DefaultLifecycleProcessor",
                "message": "Stopping beans in phase 0"
                }{
                "timestamp":"2019-06-28 21:08:41.426",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans on shutdown"
                }{
                "timestamp":"2019-06-28 21:08:41.427",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "o.s.j.e.a.AnnotationMBeanExporter",
                "message": "Unregistering JMX-exposed beans"
                }{
                "timestamp":"2019-06-28 21:08:41.430",
                "level": "INFO",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@32091c14: startup date [Fri Jun 28 21:02:52 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@35e5d0e5"
                }{
                "timestamp":"2019-06-28 21:08:41.431",
                "level": "WARN",
                "service": "feign-service-a",
                "trace": "",
                "span": "",
                "pid": "1115",
                "thread": "Thread-31",
                "class": "o.s.c.a.AnnotationConfigApplicationContext",
                "message": "Exception thrown from ApplicationListener handling ContextClosedEvent"
                }org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaAutoServiceRegistration': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1078)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:280)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:250)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:174)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:137)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:167)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext$2.run(AbstractApplicationContext.java:929)
